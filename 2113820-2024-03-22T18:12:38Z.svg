<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1018" onload="init(evt)" viewBox="0 0 1200 1018" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1018" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record --pid 2113820 --native --gil</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1007.00"> </text><svg id="frames" x="10" width="1180" total_samples="1933"><g><title>Loop__on_idle (loop.c:14561) (2 samples, 0.10%)</title><rect x="0.0517%" y="372" width="0.1035%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="2"/><text x="0.3017%" y="382.50"></text></g><g><title>_Py_XDECREF (object.h:567) (2 samples, 0.10%)</title><rect x="0.0517%" y="388" width="0.1035%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.3017%" y="398.50"></text></g><g><title>_Py_DECREF (object.h:500) (2 samples, 0.10%)</title><rect x="0.0517%" y="404" width="0.1035%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="2"/><text x="0.3017%" y="414.50"></text></g><g><title>__pyx_tp_dealloc_6uvloop_4loop_Handle (loop.c:153431) (2 samples, 0.10%)</title><rect x="0.0517%" y="420" width="0.1035%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="2"/><text x="0.3017%" y="430.50"></text></g><g><title>_Py_DECREF (object.h:500) (2 samples, 0.10%)</title><rect x="0.0517%" y="436" width="0.1035%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="2"/><text x="0.3017%" y="446.50"></text></g><g><title>FutureObj_dealloc (_asynciomodule.c:1580) (2 samples, 0.10%)</title><rect x="0.0517%" y="452" width="0.1035%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="2"/><text x="0.3017%" y="462.50"></text></g><g><title>add_request (vllm/engine/llm_engine.py:277) (2 samples, 0.10%)</title><rect x="0.4139%" y="500" width="0.1035%" height="15" fill="rgb(207,160,47)" fg:x="8" fg:w="2"/><text x="0.6639%" y="510.50"></text></g><g><title>eos_token_id (transformers/tokenization_utils_base.py:1183) (2 samples, 0.10%)</title><rect x="0.4139%" y="516" width="0.1035%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="2"/><text x="0.6639%" y="526.50"></text></g><g><title>__init__ (vllm/sequence.py:170) (2 samples, 0.10%)</title><rect x="0.5691%" y="516" width="0.1035%" height="15" fill="rgb(218,30,26)" fg:x="11" fg:w="2"/><text x="0.8191%" y="526.50"></text></g><g><title>_append_tokens_to_blocks (vllm/sequence.py:215) (5 samples, 0.26%)</title><rect x="0.7243%" y="532" width="0.2587%" height="15" fill="rgb(220,122,19)" fg:x="14" fg:w="5"/><text x="0.9743%" y="542.50"></text></g><g><title>_append_logical_block (vllm/sequence.py:201) (4 samples, 0.21%)</title><rect x="0.7760%" y="548" width="0.2069%" height="15" fill="rgb(250,228,42)" fg:x="15" fg:w="4"/><text x="1.0260%" y="558.50"></text></g><g><title>add_request (vllm/engine/llm_engine.py:278) (10 samples, 0.52%)</title><rect x="0.5173%" y="500" width="0.5173%" height="15" fill="rgb(240,193,28)" fg:x="10" fg:w="10"/><text x="0.7673%" y="510.50"></text></g><g><title>__init__ (vllm/sequence.py:176) (7 samples, 0.36%)</title><rect x="0.6725%" y="516" width="0.3621%" height="15" fill="rgb(216,20,37)" fg:x="13" fg:w="7"/><text x="0.9225%" y="526.50"></text></g><g><title>_reconstruct (copy.py:271) (5 samples, 0.26%)</title><rect x="1.1899%" y="548" width="0.2587%" height="15" fill="rgb(206,188,39)" fg:x="23" fg:w="5"/><text x="1.4399%" y="558.50"></text></g><g><title>deepcopy (copy.py:146) (5 samples, 0.26%)</title><rect x="1.1899%" y="564" width="0.2587%" height="15" fill="rgb(217,207,13)" fg:x="23" fg:w="5"/><text x="1.4399%" y="574.50"></text></g><g><title>_deepcopy_dict (copy.py:231) (4 samples, 0.21%)</title><rect x="1.2416%" y="580" width="0.2069%" height="15" fill="rgb(231,73,38)" fg:x="24" fg:w="4"/><text x="1.4916%" y="590.50"></text></g><g><title>deepcopy (copy.py:144) (2 samples, 0.10%)</title><rect x="1.3451%" y="596" width="0.1035%" height="15" fill="rgb(225,20,46)" fg:x="26" fg:w="2"/><text x="1.5951%" y="606.50"></text></g><g><title>add_request (vllm/engine/llm_engine.py:283) (9 samples, 0.47%)</title><rect x="1.0347%" y="500" width="0.4656%" height="15" fill="rgb(210,31,41)" fg:x="20" fg:w="9"/><text x="1.2847%" y="510.50"></text></g><g><title>clone (vllm/sampling_params.py:253) (9 samples, 0.47%)</title><rect x="1.0347%" y="516" width="0.4656%" height="15" fill="rgb(221,200,47)" fg:x="20" fg:w="9"/><text x="1.2847%" y="526.50"></text></g><g><title>deepcopy (copy.py:172) (7 samples, 0.36%)</title><rect x="1.1381%" y="532" width="0.3621%" height="15" fill="rgb(226,26,5)" fg:x="22" fg:w="7"/><text x="1.3881%" y="542.50"></text></g><g><title>engine_step (vllm/engine/async_llm_engine.py:431) (24 samples, 1.24%)</title><rect x="0.4139%" y="468" width="1.2416%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="24"/><text x="0.6639%" y="478.50"></text></g><g><title>add_request_async (vllm/engine/async_llm_engine.py:255) (24 samples, 1.24%)</title><rect x="0.4139%" y="484" width="1.2416%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="24"/><text x="0.6639%" y="494.50"></text></g><g><title>add_request (vllm/engine/llm_engine.py:290) (3 samples, 0.16%)</title><rect x="1.5003%" y="500" width="0.1552%" height="15" fill="rgb(221,5,38)" fg:x="29" fg:w="3"/><text x="1.7503%" y="510.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:163) (2 samples, 0.10%)</title><rect x="1.8107%" y="516" width="0.1035%" height="15" fill="rgb(247,18,42)" fg:x="35" fg:w="2"/><text x="2.0607%" y="526.50"></text></g><g><title>get_max_num_running_seqs (vllm/sequence.py:375) (7 samples, 0.36%)</title><rect x="2.1211%" y="548" width="0.3621%" height="15" fill="rgb(241,131,45)" fg:x="41" fg:w="7"/><text x="2.3711%" y="558.50"></text></g><g><title>num_seqs (vllm/sequence.py:401) (6 samples, 0.31%)</title><rect x="2.1728%" y="564" width="0.3104%" height="15" fill="rgb(249,31,29)" fg:x="42" fg:w="6"/><text x="2.4228%" y="574.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (6 samples, 0.31%)</title><rect x="2.1728%" y="580" width="0.3104%" height="15" fill="rgb(225,111,53)" fg:x="42" fg:w="6"/><text x="2.4228%" y="590.50"></text></g><g><title>is_finished (vllm/sequence.py:42) (2 samples, 0.10%)</title><rect x="2.8971%" y="628" width="0.1035%" height="15" fill="rgb(238,160,17)" fg:x="56" fg:w="2"/><text x="3.1471%" y="638.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:171) (23 samples, 1.19%)</title><rect x="1.9141%" y="516" width="1.1899%" height="15" fill="rgb(214,148,48)" fg:x="37" fg:w="23"/><text x="2.1641%" y="526.50"></text></g><g><title>&lt;genexpr&gt; (vllm/core/scheduler.py:171) (22 samples, 1.14%)</title><rect x="1.9659%" y="532" width="1.1381%" height="15" fill="rgb(232,36,49)" fg:x="38" fg:w="22"/><text x="2.2159%" y="542.50"></text></g><g><title>get_max_num_running_seqs (vllm/sequence.py:382) (12 samples, 0.62%)</title><rect x="2.4832%" y="548" width="0.6208%" height="15" fill="rgb(209,103,24)" fg:x="48" fg:w="12"/><text x="2.7332%" y="558.50"></text></g><g><title>num_unfinished_seqs (vllm/sequence.py:404) (10 samples, 0.52%)</title><rect x="2.5867%" y="564" width="0.5173%" height="15" fill="rgb(229,88,8)" fg:x="50" fg:w="10"/><text x="2.8367%" y="574.50"></text></g><g><title>get_unfinished_seqs (vllm/sequence.py:393) (9 samples, 0.47%)</title><rect x="2.6384%" y="580" width="0.4656%" height="15" fill="rgb(213,181,19)" fg:x="51" fg:w="9"/><text x="2.8884%" y="590.50"></text></g><g><title>&lt;listcomp&gt; (vllm/sequence.py:394) (8 samples, 0.41%)</title><rect x="2.6901%" y="596" width="0.4139%" height="15" fill="rgb(254,191,54)" fg:x="52" fg:w="8"/><text x="2.9401%" y="606.50"></text></g><g><title>is_finished (vllm/sequence.py:277) (6 samples, 0.31%)</title><rect x="2.7936%" y="612" width="0.3104%" height="15" fill="rgb(241,83,37)" fg:x="54" fg:w="6"/><text x="3.0436%" y="622.50"></text></g><g><title>is_finished (vllm/sequence.py:43) (2 samples, 0.10%)</title><rect x="3.0005%" y="628" width="0.1035%" height="15" fill="rgb(233,36,39)" fg:x="58" fg:w="2"/><text x="3.2505%" y="638.50"></text></g><g><title>allocate (vllm/core/block_manager.py:296) (2 samples, 0.10%)</title><rect x="3.2074%" y="548" width="0.1035%" height="15" fill="rgb(226,3,54)" fg:x="62" fg:w="2"/><text x="3.4574%" y="558.50"></text></g><g><title>allocate (vllm/core/block_manager.py:173) (2 samples, 0.10%)</title><rect x="3.2074%" y="564" width="0.1035%" height="15" fill="rgb(245,192,40)" fg:x="62" fg:w="2"/><text x="3.4574%" y="574.50"></text></g><g><title>_allocate (vllm/core/scheduler.py:398) (4 samples, 0.21%)</title><rect x="3.1557%" y="532" width="0.2069%" height="15" fill="rgb(238,167,29)" fg:x="61" fg:w="4"/><text x="3.4057%" y="542.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:241) (5 samples, 0.26%)</title><rect x="3.1557%" y="516" width="0.2587%" height="15" fill="rgb(232,182,51)" fg:x="61" fg:w="5"/><text x="3.4057%" y="526.50"></text></g><g><title>can_append_slot (vllm/core/block_manager.py:308) (3 samples, 0.16%)</title><rect x="3.6213%" y="532" width="0.1552%" height="15" fill="rgb(231,60,39)" fg:x="70" fg:w="3"/><text x="3.8713%" y="542.50"></text></g><g><title>get_num_free_blocks (vllm/core/block_manager.py:185) (2 samples, 0.10%)</title><rect x="3.6730%" y="548" width="0.1035%" height="15" fill="rgb(208,69,12)" fg:x="71" fg:w="2"/><text x="3.9230%" y="558.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (2 samples, 0.10%)</title><rect x="3.8800%" y="564" width="0.1035%" height="15" fill="rgb(235,93,37)" fg:x="75" fg:w="2"/><text x="4.1300%" y="574.50"></text></g><g><title>&lt;listcomp&gt; (vllm/sequence.py:388) (2 samples, 0.10%)</title><rect x="3.8800%" y="580" width="0.1035%" height="15" fill="rgb(213,116,39)" fg:x="75" fg:w="2"/><text x="4.1300%" y="590.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:271) (10 samples, 0.52%)</title><rect x="3.5178%" y="516" width="0.5173%" height="15" fill="rgb(222,207,29)" fg:x="68" fg:w="10"/><text x="3.7678%" y="526.50"></text></g><g><title>can_append_slot (vllm/core/block_manager.py:309) (5 samples, 0.26%)</title><rect x="3.7765%" y="532" width="0.2587%" height="15" fill="rgb(206,96,30)" fg:x="73" fg:w="5"/><text x="4.0265%" y="542.50"></text></g><g><title>num_seqs (vllm/sequence.py:401) (4 samples, 0.21%)</title><rect x="3.8282%" y="548" width="0.2069%" height="15" fill="rgb(218,138,4)" fg:x="74" fg:w="4"/><text x="4.0782%" y="558.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (3 samples, 0.16%)</title><rect x="4.0869%" y="548" width="0.1552%" height="15" fill="rgb(250,191,14)" fg:x="79" fg:w="3"/><text x="4.3369%" y="558.50"></text></g><g><title>_append_slot (vllm/core/scheduler.py:407) (6 samples, 0.31%)</title><rect x="4.0352%" y="532" width="0.3104%" height="15" fill="rgb(239,60,40)" fg:x="78" fg:w="6"/><text x="4.2852%" y="542.50"></text></g><g><title>get_seqs (vllm/sequence.py:389) (2 samples, 0.10%)</title><rect x="4.2421%" y="548" width="0.1035%" height="15" fill="rgb(206,27,48)" fg:x="82" fg:w="2"/><text x="4.4921%" y="558.50"></text></g><g><title>_append_slot (vllm/core/scheduler.py:408) (6 samples, 0.31%)</title><rect x="4.3456%" y="532" width="0.3104%" height="15" fill="rgb(225,35,8)" fg:x="84" fg:w="6"/><text x="4.5956%" y="542.50"></text></g><g><title>append_slot (vllm/core/block_manager.py:391) (3 samples, 0.16%)</title><rect x="4.5008%" y="548" width="0.1552%" height="15" fill="rgb(250,213,24)" fg:x="87" fg:w="3"/><text x="4.7508%" y="558.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:285) (13 samples, 0.67%)</title><rect x="4.0352%" y="516" width="0.6725%" height="15" fill="rgb(247,123,22)" fg:x="78" fg:w="13"/><text x="4.2852%" y="526.50"></text></g><g><title>get_max_num_running_seqs (vllm/sequence.py:375) (4 samples, 0.21%)</title><rect x="4.7594%" y="548" width="0.2069%" height="15" fill="rgb(231,138,38)" fg:x="92" fg:w="4"/><text x="5.0094%" y="558.50"></text></g><g><title>num_seqs (vllm/sequence.py:401) (4 samples, 0.21%)</title><rect x="4.7594%" y="564" width="0.2069%" height="15" fill="rgb(231,145,46)" fg:x="92" fg:w="4"/><text x="5.0094%" y="574.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (3 samples, 0.16%)</title><rect x="4.8112%" y="580" width="0.1552%" height="15" fill="rgb(251,118,11)" fg:x="93" fg:w="3"/><text x="5.0612%" y="590.50"></text></g><g><title>&lt;genexpr&gt; (vllm/core/scheduler.py:292) (11 samples, 0.57%)</title><rect x="4.7077%" y="532" width="0.5691%" height="15" fill="rgb(217,147,25)" fg:x="91" fg:w="11"/><text x="4.9577%" y="542.50"></text></g><g><title>get_max_num_running_seqs (vllm/sequence.py:382) (6 samples, 0.31%)</title><rect x="4.9664%" y="548" width="0.3104%" height="15" fill="rgb(247,81,37)" fg:x="96" fg:w="6"/><text x="5.2164%" y="558.50"></text></g><g><title>num_unfinished_seqs (vllm/sequence.py:404) (5 samples, 0.26%)</title><rect x="5.0181%" y="564" width="0.2587%" height="15" fill="rgb(209,12,38)" fg:x="97" fg:w="5"/><text x="5.2681%" y="574.50"></text></g><g><title>get_unfinished_seqs (vllm/sequence.py:393) (4 samples, 0.21%)</title><rect x="5.0698%" y="580" width="0.2069%" height="15" fill="rgb(227,1,9)" fg:x="98" fg:w="4"/><text x="5.3198%" y="590.50"></text></g><g><title>&lt;listcomp&gt; (vllm/sequence.py:394) (3 samples, 0.16%)</title><rect x="5.1216%" y="596" width="0.1552%" height="15" fill="rgb(248,47,43)" fg:x="99" fg:w="3"/><text x="5.3716%" y="606.50"></text></g><g><title>is_finished (vllm/sequence.py:277) (3 samples, 0.16%)</title><rect x="5.1216%" y="612" width="0.1552%" height="15" fill="rgb(221,10,30)" fg:x="99" fg:w="3"/><text x="5.3716%" y="622.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:292) (12 samples, 0.62%)</title><rect x="4.7077%" y="516" width="0.6208%" height="15" fill="rgb(210,229,1)" fg:x="91" fg:w="12"/><text x="4.9577%" y="526.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:337) (5 samples, 0.26%)</title><rect x="5.3285%" y="516" width="0.2587%" height="15" fill="rgb(222,148,37)" fg:x="103" fg:w="5"/><text x="5.5785%" y="526.50"></text></g><g><title>&lt;genexpr&gt; (vllm/core/scheduler.py:337) (5 samples, 0.26%)</title><rect x="5.3285%" y="532" width="0.2587%" height="15" fill="rgb(234,67,33)" fg:x="103" fg:w="5"/><text x="5.5785%" y="542.50"></text></g><g><title>num_seqs (vllm/sequence.py:401) (5 samples, 0.26%)</title><rect x="5.3285%" y="548" width="0.2587%" height="15" fill="rgb(247,98,35)" fg:x="103" fg:w="5"/><text x="5.5785%" y="558.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (2 samples, 0.10%)</title><rect x="5.4837%" y="564" width="0.1035%" height="15" fill="rgb(247,138,52)" fg:x="106" fg:w="2"/><text x="5.7337%" y="574.50"></text></g><g><title>schedule (vllm/core/scheduler.py:356) (80 samples, 4.14%)</title><rect x="1.7589%" y="500" width="4.1386%" height="15" fill="rgb(213,79,30)" fg:x="34" fg:w="80"/><text x="2.0089%" y="510.50">sched..</text></g><g><title>_schedule (vllm/core/scheduler.py:341) (6 samples, 0.31%)</title><rect x="5.5872%" y="516" width="0.3104%" height="15" fill="rgb(246,177,23)" fg:x="108" fg:w="6"/><text x="5.8372%" y="526.50"></text></g><g><title>__init__ (vllm/core/scheduler.py:54) (5 samples, 0.26%)</title><rect x="5.6389%" y="532" width="0.2587%" height="15" fill="rgb(230,62,27)" fg:x="109" fg:w="5"/><text x="5.8889%" y="542.50"></text></g><g><title>_sort_by_lora_ids (vllm/core/scheduler.py:62) (5 samples, 0.26%)</title><rect x="5.6389%" y="548" width="0.2587%" height="15" fill="rgb(216,154,8)" fg:x="109" fg:w="5"/><text x="5.8889%" y="558.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (3 samples, 0.16%)</title><rect x="6.2080%" y="516" width="0.1552%" height="15" fill="rgb(244,35,45)" fg:x="120" fg:w="3"/><text x="6.4580%" y="526.50"></text></g><g><title>schedule (vllm/core/scheduler.py:367) (9 samples, 0.47%)</title><rect x="5.9493%" y="500" width="0.4656%" height="15" fill="rgb(251,115,12)" fg:x="115" fg:w="9"/><text x="6.1993%" y="510.50"></text></g><g><title>schedule (vllm/core/scheduler.py:370) (19 samples, 0.98%)</title><rect x="6.4149%" y="500" width="0.9829%" height="15" fill="rgb(240,54,50)" fg:x="124" fg:w="19"/><text x="6.6649%" y="510.50"></text></g><g><title>get_block_table (vllm/core/block_manager.py:530) (17 samples, 0.88%)</title><rect x="6.5184%" y="516" width="0.8795%" height="15" fill="rgb(233,84,52)" fg:x="126" fg:w="17"/><text x="6.7684%" y="526.50"></text></g><g><title>&lt;listcomp&gt; (vllm/core/block_manager.py:530) (16 samples, 0.83%)</title><rect x="6.5701%" y="532" width="0.8277%" height="15" fill="rgb(207,117,47)" fg:x="127" fg:w="16"/><text x="6.8201%" y="542.50"></text></g><g><title>schedule (vllm/core/scheduler.py:373) (5 samples, 0.26%)</title><rect x="7.4496%" y="500" width="0.2587%" height="15" fill="rgb(249,43,39)" fg:x="144" fg:w="5"/><text x="7.6996%" y="510.50"></text></g><g><title>step_async (vllm/engine/async_llm_engine.py:207) (118 samples, 6.10%)</title><rect x="1.7072%" y="484" width="6.1045%" height="15" fill="rgb(209,38,44)" fg:x="33" fg:w="118"/><text x="1.9572%" y="494.50">step_asy..</text></g><g><title>run_in_executor (loop.c:48101) (2 samples, 0.10%)</title><rect x="7.9152%" y="548" width="0.1035%" height="15" fill="rgb(236,212,23)" fg:x="153" fg:w="2"/><text x="8.1652%" y="558.50"></text></g><g><title>submit (concurrent/futures/thread.py:172) (2 samples, 0.10%)</title><rect x="7.9152%" y="564" width="0.1035%" height="15" fill="rgb(242,79,21)" fg:x="153" fg:w="2"/><text x="8.1652%" y="574.50"></text></g><g><title>_chain_future (asyncio/futures.py:385) (2 samples, 0.10%)</title><rect x="8.1221%" y="580" width="0.1035%" height="15" fill="rgb(211,96,35)" fg:x="157" fg:w="2"/><text x="8.3721%" y="590.50"></text></g><g><title>engine_step (vllm/engine/async_llm_engine.py:450) (128 samples, 6.62%)</title><rect x="1.7072%" y="468" width="6.6218%" height="15" fill="rgb(253,215,40)" fg:x="33" fg:w="128"/><text x="1.9572%" y="478.50">engine_st..</text></g><g><title>step_async (vllm/engine/async_llm_engine.py:211) (9 samples, 0.47%)</title><rect x="7.8634%" y="484" width="0.4656%" height="15" fill="rgb(211,81,21)" fg:x="152" fg:w="9"/><text x="8.1134%" y="494.50"></text></g><g><title>execute_model_async (vllm/executor/gpu_executor.py:139) (9 samples, 0.47%)</title><rect x="7.8634%" y="500" width="0.4656%" height="15" fill="rgb(208,190,38)" fg:x="152" fg:w="9"/><text x="8.1134%" y="510.50"></text></g><g><title>_async_wrapper (vllm/utils.py:175) (9 samples, 0.47%)</title><rect x="7.8634%" y="516" width="0.4656%" height="15" fill="rgb(235,213,38)" fg:x="152" fg:w="9"/><text x="8.1134%" y="526.50"></text></g><g><title>run_in_executor (loop.c:47859) (9 samples, 0.47%)</title><rect x="7.8634%" y="532" width="0.4656%" height="15" fill="rgb(237,122,38)" fg:x="152" fg:w="9"/><text x="8.1134%" y="542.50"></text></g><g><title>run_in_executor (loop.c:48113) (6 samples, 0.31%)</title><rect x="8.0186%" y="548" width="0.3104%" height="15" fill="rgb(244,218,35)" fg:x="155" fg:w="6"/><text x="8.2686%" y="558.50"></text></g><g><title>wrap_future (asyncio/futures.py:416) (6 samples, 0.31%)</title><rect x="8.0186%" y="564" width="0.3104%" height="15" fill="rgb(240,68,47)" fg:x="155" fg:w="6"/><text x="8.2686%" y="574.50"></text></g><g><title>producer (vllm/entrypoints/openai/serving_completion.py:67) (3 samples, 0.16%)</title><rect x="8.3290%" y="468" width="0.1552%" height="15" fill="rgb(210,16,53)" fg:x="161" fg:w="3"/><text x="8.5790%" y="478.50"></text></g><g><title>generate (vllm/engine/async_llm_engine.py:615) (2 samples, 0.10%)</title><rect x="8.3808%" y="484" width="0.1035%" height="15" fill="rgb(235,124,12)" fg:x="162" fg:w="2"/><text x="8.6308%" y="494.50"></text></g><g><title>add_request (vllm/engine/async_llm_engine.py:531) (2 samples, 0.10%)</title><rect x="8.3808%" y="500" width="0.1035%" height="15" fill="rgb(224,169,11)" fg:x="162" fg:w="2"/><text x="8.6308%" y="510.50"></text></g><g><title>app (fastapi/routing.py:239) (4 samples, 0.21%)</title><rect x="9.1568%" y="644" width="0.2069%" height="15" fill="rgb(250,166,2)" fg:x="177" fg:w="4"/><text x="9.4068%" y="654.50"></text></g><g><title>json (starlette/requests.py:244) (3 samples, 0.16%)</title><rect x="9.2085%" y="660" width="0.1552%" height="15" fill="rgb(242,216,29)" fg:x="178" fg:w="3"/><text x="9.4585%" y="670.50"></text></g><g><title>loads (json/__init__.py:346) (2 samples, 0.10%)</title><rect x="9.2602%" y="676" width="0.1035%" height="15" fill="rgb(230,116,27)" fg:x="179" fg:w="2"/><text x="9.5102%" y="686.50"></text></g><g><title>decode (json/decoder.py:337) (2 samples, 0.10%)</title><rect x="9.2602%" y="692" width="0.1035%" height="15" fill="rgb(228,99,48)" fg:x="179" fg:w="2"/><text x="9.5102%" y="702.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.10) (2 samples, 0.10%)</title><rect x="9.2602%" y="708" width="0.1035%" height="15" fill="rgb(253,11,6)" fg:x="179" fg:w="2"/><text x="9.5102%" y="718.50"></text></g><g><title>gc_collect_with_callback (python3.10) (2 samples, 0.10%)</title><rect x="9.2602%" y="724" width="0.1035%" height="15" fill="rgb(247,143,39)" fg:x="179" fg:w="2"/><text x="9.5102%" y="734.50"></text></g><g><title>gc_collect_main (python3.10) (2 samples, 0.10%)</title><rect x="9.2602%" y="740" width="0.1035%" height="15" fill="rgb(236,97,10)" fg:x="179" fg:w="2"/><text x="9.5102%" y="750.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:527) (2 samples, 0.10%)</title><rect x="9.4154%" y="660" width="0.1035%" height="15" fill="rgb(233,208,19)" fg:x="182" fg:w="2"/><text x="9.6654%" y="670.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:594) (2 samples, 0.10%)</title><rect x="9.6741%" y="660" width="0.1035%" height="15" fill="rgb(216,164,2)" fg:x="187" fg:w="2"/><text x="9.9241%" y="670.50"></text></g><g><title>query_params (starlette/requests.py:119) (2 samples, 0.10%)</title><rect x="9.6741%" y="676" width="0.1035%" height="15" fill="rgb(220,129,5)" fg:x="187" fg:w="2"/><text x="9.9241%" y="686.50"></text></g><g><title>_annotation_is_sequence (fastapi/_compat.py:516) (2 samples, 0.10%)</title><rect x="9.8293%" y="724" width="0.1035%" height="15" fill="rgb(242,17,10)" fg:x="190" fg:w="2"/><text x="10.0793%" y="734.50"></text></g><g><title>request_body_to_args (fastapi/dependencies/utils.py:694) (5 samples, 0.26%)</title><rect x="9.8293%" y="676" width="0.2587%" height="15" fill="rgb(242,107,0)" fg:x="190" fg:w="5"/><text x="10.0793%" y="686.50"></text></g><g><title>is_sequence_field (fastapi/_compat.py:234) (5 samples, 0.26%)</title><rect x="9.8293%" y="692" width="0.2587%" height="15" fill="rgb(251,28,31)" fg:x="190" fg:w="5"/><text x="10.0793%" y="702.50"></text></g><g><title>field_annotation_is_sequence (fastapi/_compat.py:522) (5 samples, 0.26%)</title><rect x="9.8293%" y="708" width="0.2587%" height="15" fill="rgb(233,223,10)" fg:x="190" fg:w="5"/><text x="10.0793%" y="718.50"></text></g><g><title>_annotation_is_sequence (fastapi/_compat.py:518) (3 samples, 0.16%)</title><rect x="9.9327%" y="724" width="0.1552%" height="15" fill="rgb(215,21,27)" fg:x="192" fg:w="3"/><text x="10.1827%" y="734.50"></text></g><g><title>lenient_issubclass (pydantic/_internal/_utils.py:75) (3 samples, 0.16%)</title><rect x="9.9327%" y="740" width="0.1552%" height="15" fill="rgb(232,23,21)" fg:x="192" fg:w="3"/><text x="10.1827%" y="750.50"></text></g><g><title>0x7f8ef1a91bdc (pydantic_core/_pydantic_core.cpython-310-x86_64-linux-gnu.so) (2 samples, 0.10%)</title><rect x="10.2949%" y="804" width="0.1035%" height="15" fill="rgb(244,5,23)" fg:x="199" fg:w="2"/><text x="10.5449%" y="814.50"></text></g><g><title>0x7f8ef1a8382b (pydantic_core/_pydantic_core.cpython-310-x86_64-linux-gnu.so) (8 samples, 0.41%)</title><rect x="10.2949%" y="788" width="0.4139%" height="15" fill="rgb(226,81,46)" fg:x="199" fg:w="8"/><text x="10.5449%" y="798.50"></text></g><g><title>0x7f8ef1a91fd5 (pydantic_core/_pydantic_core.cpython-310-x86_64-linux-gnu.so) (2 samples, 0.10%)</title><rect x="10.6053%" y="804" width="0.1035%" height="15" fill="rgb(247,70,30)" fg:x="205" fg:w="2"/><text x="10.8553%" y="814.50"></text></g><g><title>request_body_to_args (fastapi/dependencies/utils.py:742) (12 samples, 0.62%)</title><rect x="10.1914%" y="676" width="0.6208%" height="15" fill="rgb(212,68,19)" fg:x="197" fg:w="12"/><text x="10.4414%" y="686.50"></text></g><g><title>validate (fastapi/_compat.py:119) (12 samples, 0.62%)</title><rect x="10.1914%" y="692" width="0.6208%" height="15" fill="rgb(240,187,13)" fg:x="197" fg:w="12"/><text x="10.4414%" y="702.50"></text></g><g><title>validate_python (pydantic/type_adapter.py:239) (11 samples, 0.57%)</title><rect x="10.2431%" y="708" width="0.5691%" height="15" fill="rgb(223,113,26)" fg:x="198" fg:w="11"/><text x="10.4931%" y="718.50"></text></g><g><title>0x7f8ef1b63d30 (pydantic_core/_pydantic_core.cpython-310-x86_64-linux-gnu.so) (10 samples, 0.52%)</title><rect x="10.2949%" y="724" width="0.5173%" height="15" fill="rgb(206,192,2)" fg:x="199" fg:w="10"/><text x="10.5449%" y="734.50"></text></g><g><title>0x7f8ef19a3808 (pydantic_core/_pydantic_core.cpython-310-x86_64-linux-gnu.so) (10 samples, 0.52%)</title><rect x="10.2949%" y="740" width="0.5173%" height="15" fill="rgb(241,108,4)" fg:x="199" fg:w="10"/><text x="10.5449%" y="750.50"></text></g><g><title>0x7f8ef1b645e5 (pydantic_core/_pydantic_core.cpython-310-x86_64-linux-gnu.so) (10 samples, 0.52%)</title><rect x="10.2949%" y="756" width="0.5173%" height="15" fill="rgb(247,173,49)" fg:x="199" fg:w="10"/><text x="10.5449%" y="766.50"></text></g><g><title>0x7f8ef1b63bcd (pydantic_core/_pydantic_core.cpython-310-x86_64-linux-gnu.so) (10 samples, 0.52%)</title><rect x="10.2949%" y="772" width="0.5173%" height="15" fill="rgb(224,114,35)" fg:x="199" fg:w="10"/><text x="10.5449%" y="782.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:610) (21 samples, 1.09%)</title><rect x="9.7775%" y="660" width="1.0864%" height="15" fill="rgb(245,159,27)" fg:x="189" fg:w="21"/><text x="10.0275%" y="670.50"></text></g><g><title>app (fastapi/routing.py:271) (31 samples, 1.60%)</title><rect x="9.3637%" y="644" width="1.6037%" height="15" fill="rgb(245,172,44)" fg:x="181" fg:w="31"/><text x="9.6137%" y="654.50"></text></g><g><title>create_completion (vllm/entrypoints/openai/serving_completion.py:120) (4 samples, 0.21%)</title><rect x="11.0191%" y="692" width="0.2069%" height="15" fill="rgb(236,23,11)" fg:x="213" fg:w="4"/><text x="11.2691%" y="702.50"></text></g><g><title>random_uuid (vllm/utils.py:155) (4 samples, 0.21%)</title><rect x="11.0191%" y="708" width="0.2069%" height="15" fill="rgb(205,117,38)" fg:x="213" fg:w="4"/><text x="11.2691%" y="718.50"></text></g><g><title>uuid4 (uuid.py:720) (2 samples, 0.10%)</title><rect x="11.1226%" y="724" width="0.1035%" height="15" fill="rgb(237,72,25)" fg:x="215" fg:w="2"/><text x="11.3726%" y="734.50"></text></g><g><title>create_completion (vllm/entrypoints/openai/serving_completion.py:126) (2 samples, 0.10%)</title><rect x="11.2261%" y="692" width="0.1035%" height="15" fill="rgb(244,70,9)" fg:x="217" fg:w="2"/><text x="11.4761%" y="702.50"></text></g><g><title>run_in_executor (loop.c:47922) (2 samples, 0.10%)</title><rect x="11.4330%" y="756" width="0.1035%" height="15" fill="rgb(217,125,39)" fg:x="221" fg:w="2"/><text x="11.6830%" y="766.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (loop.c:171508) (2 samples, 0.10%)</title><rect x="11.4330%" y="772" width="0.1035%" height="15" fill="rgb(235,36,10)" fg:x="221" fg:w="2"/><text x="11.6830%" y="782.50"></text></g><g><title>__init__ (threading.py:238) (2 samples, 0.10%)</title><rect x="11.6399%" y="804" width="0.1035%" height="15" fill="rgb(251,123,47)" fg:x="225" fg:w="2"/><text x="11.8899%" y="814.50"></text></g><g><title>__init__ (threading.py:241) (2 samples, 0.10%)</title><rect x="11.7434%" y="804" width="0.1035%" height="15" fill="rgb(221,13,13)" fg:x="227" fg:w="2"/><text x="11.9934%" y="814.50"></text></g><g><title>gc_collect_with_callback (python3.10) (2 samples, 0.10%)</title><rect x="11.7434%" y="820" width="0.1035%" height="15" fill="rgb(238,131,9)" fg:x="227" fg:w="2"/><text x="11.9934%" y="830.50"></text></g><g><title>gc_collect_main (python3.10) (2 samples, 0.10%)</title><rect x="11.7434%" y="836" width="0.1035%" height="15" fill="rgb(211,50,8)" fg:x="227" fg:w="2"/><text x="11.9934%" y="846.50"></text></g><g><title>submit (concurrent/futures/thread.py:172) (5 samples, 0.26%)</title><rect x="11.6399%" y="772" width="0.2587%" height="15" fill="rgb(245,182,24)" fg:x="225" fg:w="5"/><text x="11.8899%" y="782.50"></text></g><g><title>__init__ (concurrent/futures/_base.py:332) (5 samples, 0.26%)</title><rect x="11.6399%" y="788" width="0.2587%" height="15" fill="rgb(242,14,37)" fg:x="225" fg:w="5"/><text x="11.8899%" y="798.50"></text></g><g><title>submit (concurrent/futures/thread.py:175) (2 samples, 0.10%)</title><rect x="11.8986%" y="772" width="0.1035%" height="15" fill="rgb(246,228,12)" fg:x="230" fg:w="2"/><text x="12.1486%" y="782.50"></text></g><g><title>_queue_SimpleQueue_put (_queuemodule.c.h:80) (2 samples, 0.10%)</title><rect x="11.8986%" y="788" width="0.1035%" height="15" fill="rgb(213,55,15)" fg:x="230" fg:w="2"/><text x="12.1486%" y="798.50"></text></g><g><title>_queue_SimpleQueue_put_impl (_queuemodule.c:131) (2 samples, 0.10%)</title><rect x="11.8986%" y="804" width="0.1035%" height="15" fill="rgb(209,9,3)" fg:x="230" fg:w="2"/><text x="12.1486%" y="814.50"></text></g><g><title>_Py_NewRef (object.h:582) (2 samples, 0.10%)</title><rect x="11.8986%" y="820" width="0.1035%" height="15" fill="rgb(230,59,30)" fg:x="230" fg:w="2"/><text x="12.1486%" y="830.50"></text></g><g><title>_Py_INCREF (object.h:472) (2 samples, 0.10%)</title><rect x="11.8986%" y="836" width="0.1035%" height="15" fill="rgb(209,121,21)" fg:x="230" fg:w="2"/><text x="12.1486%" y="846.50"></text></g><g><title>PyThread_release_lock (python3.10) (2 samples, 0.10%)</title><rect x="11.8986%" y="852" width="0.1035%" height="15" fill="rgb(220,109,13)" fg:x="230" fg:w="2"/><text x="12.1486%" y="862.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.31.so) (2 samples, 0.10%)</title><rect x="11.8986%" y="868" width="0.1035%" height="15" fill="rgb(232,18,1)" fg:x="230" fg:w="2"/><text x="12.1486%" y="878.50"></text></g><g><title>run_in_executor (loop.c:48101) (9 samples, 0.47%)</title><rect x="11.5882%" y="756" width="0.4656%" height="15" fill="rgb(215,41,42)" fg:x="224" fg:w="9"/><text x="11.8382%" y="766.50"></text></g><g><title>run_asgi (uvicorn/protocols/http/httptools_impl.py:426) (72 samples, 3.72%)</title><rect x="8.4842%" y="468" width="3.7248%" height="15" fill="rgb(224,123,36)" fg:x="164" fg:w="72"/><text x="8.7342%" y="478.50">run_..</text></g><g><title>__call__ (uvicorn/middleware/proxy_headers.py:84) (72 samples, 3.72%)</title><rect x="8.4842%" y="484" width="3.7248%" height="15" fill="rgb(240,125,3)" fg:x="164" fg:w="72"/><text x="8.7342%" y="494.50">__ca..</text></g><g><title>__call__ (fastapi/applications.py:292) (72 samples, 3.72%)</title><rect x="8.4842%" y="500" width="3.7248%" height="15" fill="rgb(205,98,50)" fg:x="164" fg:w="72"/><text x="8.7342%" y="510.50">__ca..</text></g><g><title>__call__ (starlette/applications.py:122) (71 samples, 3.67%)</title><rect x="8.5360%" y="516" width="3.6730%" height="15" fill="rgb(205,185,37)" fg:x="165" fg:w="71"/><text x="8.7860%" y="526.50">__ca..</text></g><g><title>__call__ (starlette/middleware/errors.py:162) (71 samples, 3.67%)</title><rect x="8.5360%" y="532" width="3.6730%" height="15" fill="rgb(238,207,15)" fg:x="165" fg:w="71"/><text x="8.7860%" y="542.50">__ca..</text></g><g><title>__call__ (starlette/middleware/cors.py:83) (69 samples, 3.57%)</title><rect x="8.6394%" y="548" width="3.5696%" height="15" fill="rgb(213,199,42)" fg:x="167" fg:w="69"/><text x="8.8894%" y="558.50">__ca..</text></g><g><title>__call__ (starlette/middleware/exceptions.py:68) (69 samples, 3.57%)</title><rect x="8.6394%" y="564" width="3.5696%" height="15" fill="rgb(235,201,11)" fg:x="167" fg:w="69"/><text x="8.8894%" y="574.50">__ca..</text></g><g><title>__call__ (fastapi/middleware/asyncexitstack.py:17) (66 samples, 3.41%)</title><rect x="8.7946%" y="580" width="3.4144%" height="15" fill="rgb(207,46,11)" fg:x="170" fg:w="66"/><text x="9.0446%" y="590.50">__c..</text></g><g><title>__call__ (starlette/routing.py:718) (65 samples, 3.36%)</title><rect x="8.8464%" y="596" width="3.3626%" height="15" fill="rgb(241,35,35)" fg:x="171" fg:w="65"/><text x="9.0964%" y="606.50">__c..</text></g><g><title>handle (starlette/routing.py:276) (65 samples, 3.36%)</title><rect x="8.8464%" y="612" width="3.3626%" height="15" fill="rgb(243,32,47)" fg:x="171" fg:w="65"/><text x="9.0964%" y="622.50">han..</text></g><g><title>app (starlette/routing.py:66) (64 samples, 3.31%)</title><rect x="8.8981%" y="628" width="3.3109%" height="15" fill="rgb(247,202,23)" fg:x="172" fg:w="64"/><text x="9.1481%" y="638.50">app..</text></g><g><title>app (fastapi/routing.py:278) (24 samples, 1.24%)</title><rect x="10.9674%" y="644" width="1.2416%" height="15" fill="rgb(219,102,11)" fg:x="212" fg:w="24"/><text x="11.2174%" y="654.50"></text></g><g><title>run_endpoint_function (fastapi/routing.py:190) (24 samples, 1.24%)</title><rect x="10.9674%" y="660" width="1.2416%" height="15" fill="rgb(243,110,44)" fg:x="212" fg:w="24"/><text x="11.2174%" y="670.50"></text></g><g><title>create_completion (vllm/entrypoints/openai/api_server.py:103) (24 samples, 1.24%)</title><rect x="10.9674%" y="676" width="1.2416%" height="15" fill="rgb(222,74,54)" fg:x="212" fg:w="24"/><text x="11.2174%" y="686.50"></text></g><g><title>create_completion (vllm/entrypoints/openai/serving_completion.py:143) (16 samples, 0.83%)</title><rect x="11.3813%" y="692" width="0.8277%" height="15" fill="rgb(216,99,12)" fg:x="220" fg:w="16"/><text x="11.6313%" y="702.50"></text></g><g><title>_validate_prompt_and_tokenize (vllm/entrypoints/openai/serving_engine.py:189) (16 samples, 0.83%)</title><rect x="11.3813%" y="708" width="0.8277%" height="15" fill="rgb(226,22,26)" fg:x="220" fg:w="16"/><text x="11.6313%" y="718.50"></text></g><g><title>_tokenize_in_thread (vllm/entrypoints/openai/serving_engine.py:172) (16 samples, 0.83%)</title><rect x="11.3813%" y="724" width="0.8277%" height="15" fill="rgb(217,163,10)" fg:x="220" fg:w="16"/><text x="11.6313%" y="734.50"></text></g><g><title>run_in_executor (loop.c:47859) (15 samples, 0.78%)</title><rect x="11.4330%" y="740" width="0.7760%" height="15" fill="rgb(213,25,53)" fg:x="221" fg:w="15"/><text x="11.6830%" y="750.50"></text></g><g><title>run_in_executor (loop.c:48113) (3 samples, 0.16%)</title><rect x="12.0538%" y="756" width="0.1552%" height="15" fill="rgb(252,105,26)" fg:x="233" fg:w="3"/><text x="12.3038%" y="766.50"></text></g><g><title>wrap_future (asyncio/futures.py:416) (2 samples, 0.10%)</title><rect x="12.1055%" y="772" width="0.1035%" height="15" fill="rgb(220,39,43)" fg:x="234" fg:w="2"/><text x="12.3555%" y="782.50"></text></g><g><title>run_engine_loop (vllm/engine/async_llm_engine.py:472) (6 samples, 0.31%)</title><rect x="12.2090%" y="468" width="0.3104%" height="15" fill="rgb(229,68,48)" fg:x="236" fg:w="6"/><text x="12.4590%" y="478.50"></text></g><g><title>wait_for (asyncio/tasks.py:427) (4 samples, 0.21%)</title><rect x="12.3125%" y="484" width="0.2069%" height="15" fill="rgb(252,8,32)" fg:x="238" fg:w="4"/><text x="12.5625%" y="494.50"></text></g><g><title>ensure_future (asyncio/tasks.py:615) (2 samples, 0.10%)</title><rect x="12.4159%" y="500" width="0.1035%" height="15" fill="rgb(223,20,43)" fg:x="240" fg:w="2"/><text x="12.6659%" y="510.50"></text></g><g><title>send (uvicorn/protocols/http/httptools_impl.py:490) (3 samples, 0.16%)</title><rect x="12.5194%" y="532" width="0.1552%" height="15" fill="rgb(229,81,49)" fg:x="242" fg:w="3"/><text x="12.7694%" y="542.50"></text></g><g><title>gc_collect_with_callback (python3.10) (3 samples, 0.16%)</title><rect x="12.5194%" y="548" width="0.1552%" height="15" fill="rgb(236,28,36)" fg:x="242" fg:w="3"/><text x="12.7694%" y="558.50"></text></g><g><title>gc_collect_main (python3.10) (3 samples, 0.16%)</title><rect x="12.5194%" y="564" width="0.1552%" height="15" fill="rgb(249,185,26)" fg:x="242" fg:w="3"/><text x="12.7694%" y="574.50"></text></g><g><title>_log (logging/__init__.py:1622) (2 samples, 0.10%)</title><rect x="12.6746%" y="564" width="0.1035%" height="15" fill="rgb(249,174,33)" fg:x="245" fg:w="2"/><text x="12.9246%" y="574.50"></text></g><g><title>makeRecord (logging/__init__.py:1591) (2 samples, 0.10%)</title><rect x="12.6746%" y="580" width="0.1035%" height="15" fill="rgb(233,201,37)" fg:x="245" fg:w="2"/><text x="12.9246%" y="590.50"></text></g><g><title>formatMessage (uvicorn/logging.py:106) (2 samples, 0.10%)</title><rect x="12.8298%" y="676" width="0.1035%" height="15" fill="rgb(221,78,26)" fg:x="248" fg:w="2"/><text x="13.0798%" y="686.50"></text></g><g><title>formatMessage (uvicorn/logging.py:56) (2 samples, 0.10%)</title><rect x="12.9333%" y="692" width="0.1035%" height="15" fill="rgb(250,127,30)" fg:x="250" fg:w="2"/><text x="13.1833%" y="702.50"></text></g><g><title>copy (copy.py:102) (2 samples, 0.10%)</title><rect x="12.9333%" y="708" width="0.1035%" height="15" fill="rgb(230,49,44)" fg:x="250" fg:w="2"/><text x="13.1833%" y="718.50"></text></g><g><title>formatMessage (uvicorn/logging.py:117) (3 samples, 0.16%)</title><rect x="12.9333%" y="676" width="0.1552%" height="15" fill="rgb(229,67,23)" fg:x="250" fg:w="3"/><text x="13.1833%" y="686.50"></text></g><g><title>emit (logging/__init__.py:1100) (8 samples, 0.41%)</title><rect x="12.7781%" y="628" width="0.4139%" height="15" fill="rgb(249,83,47)" fg:x="247" fg:w="8"/><text x="13.0281%" y="638.50"></text></g><g><title>format (logging/__init__.py:943) (7 samples, 0.36%)</title><rect x="12.8298%" y="644" width="0.3621%" height="15" fill="rgb(215,43,3)" fg:x="248" fg:w="7"/><text x="13.0798%" y="654.50"></text></g><g><title>format (logging/__init__.py:681) (7 samples, 0.36%)</title><rect x="12.8298%" y="660" width="0.3621%" height="15" fill="rgb(238,154,13)" fg:x="248" fg:w="7"/><text x="13.0798%" y="670.50"></text></g><g><title>formatMessage (uvicorn/logging.py:98) (2 samples, 0.10%)</title><rect x="13.0885%" y="676" width="0.1035%" height="15" fill="rgb(219,56,2)" fg:x="253" fg:w="2"/><text x="13.3385%" y="686.50"></text></g><g><title>send (uvicorn/protocols/http/httptools_impl.py:496) (11 samples, 0.57%)</title><rect x="12.6746%" y="532" width="0.5691%" height="15" fill="rgb(233,0,4)" fg:x="245" fg:w="11"/><text x="12.9246%" y="542.50"></text></g><g><title>info (logging/__init__.py:1477) (11 samples, 0.57%)</title><rect x="12.6746%" y="548" width="0.5691%" height="15" fill="rgb(235,30,7)" fg:x="245" fg:w="11"/><text x="12.9246%" y="558.50"></text></g><g><title>_log (logging/__init__.py:1624) (9 samples, 0.47%)</title><rect x="12.7781%" y="564" width="0.4656%" height="15" fill="rgb(250,79,13)" fg:x="247" fg:w="9"/><text x="13.0281%" y="574.50"></text></g><g><title>handle (logging/__init__.py:1634) (9 samples, 0.47%)</title><rect x="12.7781%" y="580" width="0.4656%" height="15" fill="rgb(211,146,34)" fg:x="247" fg:w="9"/><text x="13.0281%" y="590.50"></text></g><g><title>callHandlers (logging/__init__.py:1696) (9 samples, 0.47%)</title><rect x="12.7781%" y="596" width="0.4656%" height="15" fill="rgb(228,22,38)" fg:x="247" fg:w="9"/><text x="13.0281%" y="606.50"></text></g><g><title>handle (logging/__init__.py:968) (9 samples, 0.47%)</title><rect x="12.7781%" y="612" width="0.4656%" height="15" fill="rgb(235,168,5)" fg:x="247" fg:w="9"/><text x="13.0281%" y="622.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (loop.c:171480) (250 samples, 12.93%)</title><rect x="0.3621%" y="404" width="12.9333%" height="15" fill="rgb(221,155,16)" fg:x="7" fg:w="250"/><text x="0.6121%" y="414.50">__Pyx_PyObject_Call..</text></g><g><title>__Pyx_PyObject_CallNoArg (loop.c:171496) (250 samples, 12.93%)</title><rect x="0.3621%" y="420" width="12.9333%" height="15" fill="rgb(215,215,53)" fg:x="7" fg:w="250"/><text x="0.6121%" y="430.50">__Pyx_PyObject_Call..</text></g><g><title>task_step (_asynciomodule.c:2950) (250 samples, 12.93%)</title><rect x="0.3621%" y="436" width="12.9333%" height="15" fill="rgb(223,4,10)" fg:x="7" fg:w="250"/><text x="0.6121%" y="446.50">task_step (_asyncio..</text></g><g><title>task_step_impl (_asynciomodule.c:2653) (250 samples, 12.93%)</title><rect x="0.3621%" y="452" width="12.9333%" height="15" fill="rgb(234,103,6)" fg:x="7" fg:w="250"/><text x="0.6121%" y="462.50">task_step_impl (_as..</text></g><g><title>wrap (starlette/responses.py:273) (15 samples, 0.78%)</title><rect x="12.5194%" y="468" width="0.7760%" height="15" fill="rgb(227,97,0)" fg:x="242" fg:w="15"/><text x="12.7694%" y="478.50"></text></g><g><title>stream_response (starlette/responses.py:255) (15 samples, 0.78%)</title><rect x="12.5194%" y="484" width="0.7760%" height="15" fill="rgb(234,150,53)" fg:x="242" fg:w="15"/><text x="12.7694%" y="494.50"></text></g><g><title>sender (starlette/middleware/exceptions.py:65) (15 samples, 0.78%)</title><rect x="12.5194%" y="500" width="0.7760%" height="15" fill="rgb(228,201,54)" fg:x="242" fg:w="15"/><text x="12.7694%" y="510.50"></text></g><g><title>_send (starlette/middleware/errors.py:159) (15 samples, 0.78%)</title><rect x="12.5194%" y="516" width="0.7760%" height="15" fill="rgb(222,22,37)" fg:x="242" fg:w="15"/><text x="12.7694%" y="526.50"></text></g><g><title>_deliver_cancellation (anyio/_backends/_asyncio.py:347) (31 samples, 1.60%)</title><rect x="13.3989%" y="420" width="1.6037%" height="15" fill="rgb(237,53,32)" fg:x="259" fg:w="31"/><text x="13.6489%" y="430.50"></text></g><g><title>current_task (asyncio/tasks.py:38) (30 samples, 1.55%)</title><rect x="13.4506%" y="436" width="1.5520%" height="15" fill="rgb(233,25,53)" fg:x="260" fg:w="30"/><text x="13.7006%" y="446.50"></text></g><g><title>_asyncio_get_running_loop (_asynciomodule.c.h:728) (29 samples, 1.50%)</title><rect x="13.5023%" y="452" width="1.5003%" height="15" fill="rgb(210,40,34)" fg:x="261" fg:w="29"/><text x="13.7523%" y="462.50"></text></g><g><title>_asyncio_get_running_loop_impl (_asynciomodule.c:3118) (29 samples, 1.50%)</title><rect x="13.5023%" y="468" width="1.5003%" height="15" fill="rgb(241,220,44)" fg:x="261" fg:w="29"/><text x="13.7523%" y="478.50"></text></g><g><title>get_running_loop (_asynciomodule.c:267) (29 samples, 1.50%)</title><rect x="13.5023%" y="484" width="1.5003%" height="15" fill="rgb(235,28,35)" fg:x="261" fg:w="29"/><text x="13.7523%" y="494.50"></text></g><g><title>getpid (libc-2.31.so) (29 samples, 1.50%)</title><rect x="13.5023%" y="500" width="1.5003%" height="15" fill="rgb(210,56,17)" fg:x="261" fg:w="29"/><text x="13.7523%" y="510.50"></text></g><g><title>Handle__run (loop.c:60720) (291 samples, 15.05%)</title><rect x="0.3621%" y="388" width="15.0543%" height="15" fill="rgb(224,130,29)" fg:x="7" fg:w="291"/><text x="0.6121%" y="398.50">Handle__run (loop.c:607..</text></g><g><title>__Pyx__PyObject_CallOneArg (loop.c:171508) (41 samples, 2.12%)</title><rect x="13.2954%" y="404" width="2.1211%" height="15" fill="rgb(235,212,8)" fg:x="257" fg:w="41"/><text x="13.5454%" y="414.50">_..</text></g><g><title>_deliver_cancellation (anyio/_backends/_asyncio.py:370) (8 samples, 0.41%)</title><rect x="15.0026%" y="420" width="0.4139%" height="15" fill="rgb(223,33,50)" fg:x="290" fg:w="8"/><text x="15.2526%" y="430.50"></text></g><g><title>_asyncio_get_running_loop (_asynciomodule.c.h:728) (8 samples, 0.41%)</title><rect x="15.0026%" y="436" width="0.4139%" height="15" fill="rgb(219,149,13)" fg:x="290" fg:w="8"/><text x="15.2526%" y="446.50"></text></g><g><title>_asyncio_get_running_loop_impl (_asynciomodule.c:3118) (8 samples, 0.41%)</title><rect x="15.0026%" y="452" width="0.4139%" height="15" fill="rgb(250,156,29)" fg:x="290" fg:w="8"/><text x="15.2526%" y="462.50"></text></g><g><title>get_running_loop (_asynciomodule.c:267) (8 samples, 0.41%)</title><rect x="15.0026%" y="468" width="0.4139%" height="15" fill="rgb(216,193,19)" fg:x="290" fg:w="8"/><text x="15.2526%" y="478.50"></text></g><g><title>getpid (libc-2.31.so) (8 samples, 0.41%)</title><rect x="15.0026%" y="484" width="0.4139%" height="15" fill="rgb(216,135,14)" fg:x="290" fg:w="8"/><text x="15.2526%" y="494.50"></text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:557) (2 samples, 0.10%)</title><rect x="15.7786%" y="468" width="0.1035%" height="15" fill="rgb(241,47,5)" fg:x="305" fg:w="2"/><text x="16.0286%" y="478.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (3 samples, 0.16%)</title><rect x="16.1407%" y="500" width="0.1552%" height="15" fill="rgb(233,42,35)" fg:x="312" fg:w="3"/><text x="16.3907%" y="510.50"></text></g><g><title>&lt;listcomp&gt; (vllm/sequence.py:389) (2 samples, 0.10%)</title><rect x="16.1924%" y="516" width="0.1035%" height="15" fill="rgb(231,13,6)" fg:x="313" fg:w="2"/><text x="16.4424%" y="526.50"></text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:384) (6 samples, 0.31%)</title><rect x="16.0890%" y="484" width="0.3104%" height="15" fill="rgb(207,181,40)" fg:x="311" fg:w="6"/><text x="16.3390%" y="494.50"></text></g><g><title>get_seqs (vllm/sequence.py:389) (2 samples, 0.10%)</title><rect x="16.2959%" y="500" width="0.1035%" height="15" fill="rgb(254,173,49)" fg:x="315" fg:w="2"/><text x="16.5459%" y="510.50"></text></g><g><title>is_finished (vllm/sequence.py:39) (2 samples, 0.10%)</title><rect x="16.6580%" y="548" width="0.1035%" height="15" fill="rgb(221,1,38)" fg:x="322" fg:w="2"/><text x="16.9080%" y="558.50"></text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:385) (8 samples, 0.41%)</title><rect x="16.3994%" y="484" width="0.4139%" height="15" fill="rgb(206,124,46)" fg:x="317" fg:w="8"/><text x="16.6494%" y="494.50"></text></g><g><title>get_finished_seqs (vllm/sequence.py:398) (8 samples, 0.41%)</title><rect x="16.3994%" y="500" width="0.4139%" height="15" fill="rgb(249,21,11)" fg:x="317" fg:w="8"/><text x="16.6494%" y="510.50"></text></g><g><title>&lt;listcomp&gt; (vllm/sequence.py:398) (7 samples, 0.36%)</title><rect x="16.4511%" y="516" width="0.3621%" height="15" fill="rgb(222,201,40)" fg:x="318" fg:w="7"/><text x="16.7011%" y="526.50"></text></g><g><title>is_finished (vllm/sequence.py:277) (4 samples, 0.21%)</title><rect x="16.6063%" y="532" width="0.2069%" height="15" fill="rgb(235,61,29)" fg:x="321" fg:w="4"/><text x="16.8563%" y="542.50"></text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:386) (4 samples, 0.21%)</title><rect x="16.8132%" y="484" width="0.2069%" height="15" fill="rgb(219,207,3)" fg:x="325" fg:w="4"/><text x="17.0632%" y="494.50"></text></g><g><title>&lt;dictcomp&gt; (vllm/engine/llm_engine.py:387) (4 samples, 0.21%)</title><rect x="16.8132%" y="500" width="0.2069%" height="15" fill="rgb(222,56,46)" fg:x="325" fg:w="4"/><text x="17.0632%" y="510.50"></text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:393) (2 samples, 0.10%)</title><rect x="17.0719%" y="484" width="0.1035%" height="15" fill="rgb(239,76,54)" fg:x="330" fg:w="2"/><text x="17.3219%" y="494.50"></text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:408) (2 samples, 0.10%)</title><rect x="17.2788%" y="484" width="0.1035%" height="15" fill="rgb(231,124,27)" fg:x="334" fg:w="2"/><text x="17.5288%" y="494.50"></text></g><g><title>_append_tokens_to_blocks (vllm/sequence.py:209) (4 samples, 0.21%)</title><rect x="17.4340%" y="516" width="0.2069%" height="15" fill="rgb(249,195,6)" fg:x="337" fg:w="4"/><text x="17.6840%" y="526.50"></text></g><g><title>_append_tokens_to_blocks (vllm/sequence.py:214) (3 samples, 0.16%)</title><rect x="17.7444%" y="516" width="0.1552%" height="15" fill="rgb(237,174,47)" fg:x="343" fg:w="3"/><text x="17.9944%" y="526.50"></text></g><g><title>_append_tokens_to_blocks (vllm/sequence.py:219) (4 samples, 0.21%)</title><rect x="17.9514%" y="516" width="0.2069%" height="15" fill="rgb(206,201,31)" fg:x="347" fg:w="4"/><text x="18.2014%" y="526.50"></text></g><g><title>append_token_id (vllm/sequence.py:229) (15 samples, 0.78%)</title><rect x="17.4340%" y="500" width="0.7760%" height="15" fill="rgb(231,57,52)" fg:x="337" fg:w="15"/><text x="17.6840%" y="510.50"></text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:418) (19 samples, 0.98%)</title><rect x="17.3823%" y="484" width="0.9829%" height="15" fill="rgb(248,177,22)" fg:x="336" fg:w="19"/><text x="17.6323%" y="494.50"></text></g><g><title>append_token_id (vllm/sequence.py:231) (3 samples, 0.16%)</title><rect x="18.2100%" y="500" width="0.1552%" height="15" fill="rgb(215,211,37)" fg:x="352" fg:w="3"/><text x="18.4600%" y="510.50"></text></g><g><title>_decode_sequence (vllm/engine/llm_engine.py:740) (8 samples, 0.41%)</title><rect x="18.6239%" y="500" width="0.4139%" height="15" fill="rgb(241,128,51)" fg:x="360" fg:w="8"/><text x="18.8739%" y="510.50"></text></g><g><title>get_token_ids (vllm/sequence.py:243) (8 samples, 0.41%)</title><rect x="18.6239%" y="516" width="0.4139%" height="15" fill="rgb(227,165,31)" fg:x="360" fg:w="8"/><text x="18.8739%" y="526.50"></text></g><g><title>get_token_ids (vllm/sequence.py:123) (7 samples, 0.36%)</title><rect x="18.6756%" y="532" width="0.3621%" height="15" fill="rgb(228,167,24)" fg:x="361" fg:w="7"/><text x="18.9256%" y="542.50"></text></g><g><title>_decode_logprobs (vllm/engine/llm_engine.py:724) (13 samples, 0.67%)</title><rect x="19.3482%" y="516" width="0.6725%" height="15" fill="rgb(228,143,12)" fg:x="374" fg:w="13"/><text x="19.5982%" y="526.50"></text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils_fast.py:388) (2 samples, 0.10%)</title><rect x="20.1242%" y="548" width="0.1035%" height="15" fill="rgb(249,149,8)" fg:x="389" fg:w="2"/><text x="20.3742%" y="558.50"></text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils_fast.py:390) (4 samples, 0.21%)</title><rect x="20.2276%" y="548" width="0.2069%" height="15" fill="rgb(243,35,44)" fg:x="391" fg:w="4"/><text x="20.4776%" y="558.50"></text></g><g><title>_$LT$pyo3..gil..GILPool$u20$as$u20$core..ops..drop..Drop$GT$::drop::h4f0941f877e51440 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.16%)</title><rect x="20.5898%" y="596" width="0.1552%" height="15" fill="rgb(246,89,9)" fg:x="398" fg:w="3"/><text x="20.8398%" y="606.50"></text></g><g><title>_$LT$tokenizers..models..PyModel$u20$as$u20$tokenizers..tokenizer..Model$GT$::id_to_token::hb49184543dba0911 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.16%)</title><rect x="20.7450%" y="628" width="0.1552%" height="15" fill="rgb(233,213,13)" fg:x="401" fg:w="3"/><text x="20.9950%" y="638.50"></text></g><g><title>_$LT$tokenizers..models..ModelWrapper$u20$as$u20$tokenizers..tokenizer..Model$GT$::id_to_token::h5443007a7351b76c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.16%)</title><rect x="20.7450%" y="644" width="0.1552%" height="15" fill="rgb(233,141,41)" fg:x="401" fg:w="3"/><text x="20.9950%" y="654.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:176) (16 samples, 0.83%)</title><rect x="20.1242%" y="532" width="0.8277%" height="15" fill="rgb(239,167,4)" fg:x="389" fg:w="16"/><text x="20.3742%" y="542.50"></text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils_fast.py:392) (10 samples, 0.52%)</title><rect x="20.4346%" y="548" width="0.5173%" height="15" fill="rgb(209,217,16)" fg:x="395" fg:w="10"/><text x="20.6846%" y="558.50"></text></g><g><title>tokenizers::tokenizer::_::_$LT$impl$u20$pyo3..impl_..pyclass..PyMethods$LT$tokenizers..tokenizer..PyTokenizer$GT$$u20$for$u20$pyo3..impl_..pyclass..PyClassImplCollector$LT$tokenizers..tokenizer..PyTokenizer$GT$$GT$::py_methods::ITEMS::trampoline::h80694c77757405f1 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (8 samples, 0.41%)</title><rect x="20.5380%" y="564" width="0.4139%" height="15" fill="rgb(219,88,35)" fg:x="397" fg:w="8"/><text x="20.7880%" y="574.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline::ha39f8c3f2d85888c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (8 samples, 0.41%)</title><rect x="20.5380%" y="580" width="0.4139%" height="15" fill="rgb(220,193,23)" fg:x="397" fg:w="8"/><text x="20.7880%" y="590.50"></text></g><g><title>tokenizers::tokenizer::_::_$LT$impl$u20$tokenizers..tokenizer..PyTokenizer$GT$::__pymethod_id_to_token__::hc45ca650e8805b04 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.21%)</title><rect x="20.7450%" y="596" width="0.2069%" height="15" fill="rgb(230,90,52)" fg:x="401" fg:w="4"/><text x="20.9950%" y="606.50"></text></g><g><title>tokenizers::tokenizer::added_vocabulary::AddedVocabulary::id_to_token::h08a04c2091acd01f (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.21%)</title><rect x="20.7450%" y="612" width="0.2069%" height="15" fill="rgb(252,106,19)" fg:x="401" fg:w="4"/><text x="20.9950%" y="622.50"></text></g><g><title>pyo3::conversions::std::string::_$LT$impl$u20$pyo3..conversion..IntoPy$LT$pyo3..instance..Py$LT$pyo3..types..any..PyAny$GT$$GT$$u20$for$u20$alloc..string..String$GT$::into_py::hac4e10a4fea0f576 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.16%)</title><rect x="21.2106%" y="612" width="0.1552%" height="15" fill="rgb(206,74,20)" fg:x="410" fg:w="3"/><text x="21.4606%" y="622.50"></text></g><g><title>unicode_decode_utf8 (python3.10) (3 samples, 0.16%)</title><rect x="21.2106%" y="628" width="0.1552%" height="15" fill="rgb(230,138,44)" fg:x="410" fg:w="3"/><text x="21.4606%" y="638.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:190) (14 samples, 0.72%)</title><rect x="20.9519%" y="532" width="0.7243%" height="15" fill="rgb(235,182,43)" fg:x="405" fg:w="14"/><text x="21.2019%" y="542.50"></text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils_fast.py:392) (12 samples, 0.62%)</title><rect x="21.0554%" y="548" width="0.6208%" height="15" fill="rgb(242,16,51)" fg:x="407" fg:w="12"/><text x="21.3054%" y="558.50"></text></g><g><title>tokenizers::tokenizer::_::_$LT$impl$u20$pyo3..impl_..pyclass..PyMethods$LT$tokenizers..tokenizer..PyTokenizer$GT$$u20$for$u20$pyo3..impl_..pyclass..PyClassImplCollector$LT$tokenizers..tokenizer..PyTokenizer$GT$$GT$::py_methods::ITEMS::trampoline::h80694c77757405f1 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (12 samples, 0.62%)</title><rect x="21.0554%" y="564" width="0.6208%" height="15" fill="rgb(248,9,4)" fg:x="407" fg:w="12"/><text x="21.3054%" y="574.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline::ha39f8c3f2d85888c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (12 samples, 0.62%)</title><rect x="21.0554%" y="580" width="0.6208%" height="15" fill="rgb(210,31,22)" fg:x="407" fg:w="12"/><text x="21.3054%" y="590.50"></text></g><g><title>tokenizers::tokenizer::_::_$LT$impl$u20$tokenizers..tokenizer..PyTokenizer$GT$::__pymethod_id_to_token__::hc45ca650e8805b04 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (9 samples, 0.47%)</title><rect x="21.2106%" y="596" width="0.4656%" height="15" fill="rgb(239,54,39)" fg:x="410" fg:w="9"/><text x="21.4606%" y="606.50"></text></g><g><title>tokenizers::tokenizer::added_vocabulary::AddedVocabulary::id_to_token::h08a04c2091acd01f (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.26%)</title><rect x="21.4175%" y="612" width="0.2587%" height="15" fill="rgb(230,99,41)" fg:x="414" fg:w="5"/><text x="21.6675%" y="622.50"></text></g><g><title>_$LT$tokenizers..models..PyModel$u20$as$u20$tokenizers..tokenizer..Model$GT$::id_to_token::hb49184543dba0911 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.26%)</title><rect x="21.4175%" y="628" width="0.2587%" height="15" fill="rgb(253,106,12)" fg:x="414" fg:w="5"/><text x="21.6675%" y="638.50"></text></g><g><title>_$LT$tokenizers..models..ModelWrapper$u20$as$u20$tokenizers..tokenizer..Model$GT$::id_to_token::h5443007a7351b76c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.26%)</title><rect x="21.4175%" y="644" width="0.2587%" height="15" fill="rgb(213,46,41)" fg:x="414" fg:w="5"/><text x="21.6675%" y="654.50"></text></g><g><title>_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$::clone::h987c798a31b0c9ef (string.rs:1930) (2 samples, 0.10%)</title><rect x="21.5727%" y="660" width="0.1035%" height="15" fill="rgb(215,133,35)" fg:x="417" fg:w="2"/><text x="21.8227%" y="670.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:192) (9 samples, 0.47%)</title><rect x="21.6762%" y="532" width="0.4656%" height="15" fill="rgb(213,28,5)" fg:x="419" fg:w="9"/><text x="21.9262%" y="542.50"></text></g><g><title>pyo3::conversions::std::string::_$LT$impl$u20$pyo3..conversion..IntoPy$LT$pyo3..instance..Py$LT$pyo3..types..any..PyAny$GT$$GT$$u20$for$u20$alloc..string..String$GT$::into_py::hac4e10a4fea0f576 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (2 samples, 0.10%)</title><rect x="22.3487%" y="612" width="0.1035%" height="15" fill="rgb(215,77,49)" fg:x="432" fg:w="2"/><text x="22.5987%" y="622.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:198) (6 samples, 0.31%)</title><rect x="22.1935%" y="532" width="0.3104%" height="15" fill="rgb(248,100,22)" fg:x="429" fg:w="6"/><text x="22.4435%" y="542.50"></text></g><g><title>convert_tokens_to_string (transformers/tokenization_utils_fast.py:612) (6 samples, 0.31%)</title><rect x="22.1935%" y="548" width="0.3104%" height="15" fill="rgb(208,67,9)" fg:x="429" fg:w="6"/><text x="22.4435%" y="558.50"></text></g><g><title>tokenizers::decoders::_::_$LT$impl$u20$pyo3..impl_..pyclass..PyMethods$LT$tokenizers..decoders..PyDecoder$GT$$u20$for$u20$pyo3..impl_..pyclass..PyClassImplCollector$LT$tokenizers..decoders..PyDecoder$GT$$GT$::py_methods::ITEMS::trampoline::hce05bfd696bacf03 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.21%)</title><rect x="22.2969%" y="564" width="0.2069%" height="15" fill="rgb(219,133,21)" fg:x="431" fg:w="4"/><text x="22.5469%" y="574.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline::ha39f8c3f2d85888c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.21%)</title><rect x="22.2969%" y="580" width="0.2069%" height="15" fill="rgb(246,46,29)" fg:x="431" fg:w="4"/><text x="22.5469%" y="590.50"></text></g><g><title>tokenizers::decoders::_::_$LT$impl$u20$tokenizers..decoders..PyDecoder$GT$::__pymethod_decode__::h7bea4643c6a4edbf (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.21%)</title><rect x="22.2969%" y="596" width="0.2069%" height="15" fill="rgb(246,185,52)" fg:x="431" fg:w="4"/><text x="22.5469%" y="606.50"></text></g><g><title>pyo3::conversions::std::string::_$LT$impl$u20$pyo3..conversion..IntoPy$LT$pyo3..instance..Py$LT$pyo3..types..any..PyAny$GT$$GT$$u20$for$u20$alloc..string..String$GT$::into_py::hac4e10a4fea0f576 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.16%)</title><rect x="22.7625%" y="612" width="0.1552%" height="15" fill="rgb(252,136,11)" fg:x="440" fg:w="3"/><text x="23.0125%" y="622.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:200) (9 samples, 0.47%)</title><rect x="22.5556%" y="532" width="0.4656%" height="15" fill="rgb(219,138,53)" fg:x="436" fg:w="9"/><text x="22.8056%" y="542.50"></text></g><g><title>convert_tokens_to_string (transformers/tokenization_utils_fast.py:612) (8 samples, 0.41%)</title><rect x="22.6073%" y="548" width="0.4139%" height="15" fill="rgb(211,51,23)" fg:x="437" fg:w="8"/><text x="22.8573%" y="558.50"></text></g><g><title>tokenizers::decoders::_::_$LT$impl$u20$pyo3..impl_..pyclass..PyMethods$LT$tokenizers..decoders..PyDecoder$GT$$u20$for$u20$pyo3..impl_..pyclass..PyClassImplCollector$LT$tokenizers..decoders..PyDecoder$GT$$GT$::py_methods::ITEMS::trampoline::hce05bfd696bacf03 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (7 samples, 0.36%)</title><rect x="22.6591%" y="564" width="0.3621%" height="15" fill="rgb(247,221,28)" fg:x="438" fg:w="7"/><text x="22.9091%" y="574.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline::ha39f8c3f2d85888c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (7 samples, 0.36%)</title><rect x="22.6591%" y="580" width="0.3621%" height="15" fill="rgb(251,222,45)" fg:x="438" fg:w="7"/><text x="22.9091%" y="590.50"></text></g><g><title>tokenizers::decoders::_::_$LT$impl$u20$tokenizers..decoders..PyDecoder$GT$::__pymethod_decode__::h7bea4643c6a4edbf (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (6 samples, 0.31%)</title><rect x="22.7108%" y="596" width="0.3104%" height="15" fill="rgb(217,162,53)" fg:x="439" fg:w="6"/><text x="22.9608%" y="606.50"></text></g><g><title>pyo3::types::sequence::extract_sequence::h2a6581dab05ce19b (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (2 samples, 0.10%)</title><rect x="22.9177%" y="612" width="0.1035%" height="15" fill="rgb(229,93,14)" fg:x="443" fg:w="2"/><text x="23.1677%" y="622.50"></text></g><g><title>_decode_logprobs (vllm/engine/llm_engine.py:726) (61 samples, 3.16%)</title><rect x="20.0207%" y="516" width="3.1557%" height="15" fill="rgb(209,67,49)" fg:x="387" fg:w="61"/><text x="20.2707%" y="526.50">_de..</text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:221) (2 samples, 0.10%)</title><rect x="23.0729%" y="532" width="0.1035%" height="15" fill="rgb(213,87,29)" fg:x="446" fg:w="2"/><text x="23.3229%" y="542.50"></text></g><g><title>_decode_logprobs (vllm/engine/llm_engine.py:727) (2 samples, 0.10%)</title><rect x="23.1764%" y="516" width="0.1035%" height="15" fill="rgb(205,151,52)" fg:x="448" fg:w="2"/><text x="23.4264%" y="526.50"></text></g><g><title>get_tokenizer_for_seq (vllm/engine/llm_engine.py:160) (2 samples, 0.10%)</title><rect x="23.1764%" y="532" width="0.1035%" height="15" fill="rgb(253,215,39)" fg:x="448" fg:w="2"/><text x="23.4264%" y="542.50"></text></g><g><title>_decode_logprobs (vllm/engine/llm_engine.py:729) (2 samples, 0.10%)</title><rect x="23.2799%" y="516" width="0.1035%" height="15" fill="rgb(221,220,41)" fg:x="450" fg:w="2"/><text x="23.5299%" y="526.50"></text></g><g><title>_decode_sequence (vllm/engine/llm_engine.py:741) (86 samples, 4.45%)</title><rect x="19.0378%" y="500" width="4.4490%" height="15" fill="rgb(218,133,21)" fg:x="368" fg:w="86"/><text x="19.2878%" y="510.50">_deco..</text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils_fast.py:389) (2 samples, 0.10%)</title><rect x="23.7455%" y="532" width="0.1035%" height="15" fill="rgb(221,193,43)" fg:x="459" fg:w="2"/><text x="23.9955%" y="542.50"></text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils_fast.py:390) (2 samples, 0.10%)</title><rect x="23.8489%" y="532" width="0.1035%" height="15" fill="rgb(240,128,52)" fg:x="461" fg:w="2"/><text x="24.0989%" y="542.50"></text></g><g><title>_$LT$pyo3..gil..GILPool$u20$as$u20$core..ops..drop..Drop$GT$::drop::h4f0941f877e51440 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.16%)</title><rect x="24.2111%" y="580" width="0.1552%" height="15" fill="rgb(253,114,12)" fg:x="468" fg:w="3"/><text x="24.4611%" y="590.50"></text></g><g><title>__tls_get_addr (ld-2.31.so) (2 samples, 0.10%)</title><rect x="24.2628%" y="596" width="0.1035%" height="15" fill="rgb(215,223,47)" fg:x="469" fg:w="2"/><text x="24.5128%" y="606.50"></text></g><g><title>__tls_get_addr (ld-2.31.so) (2 samples, 0.10%)</title><rect x="24.4180%" y="612" width="0.1035%" height="15" fill="rgb(248,225,23)" fg:x="472" fg:w="2"/><text x="24.6680%" y="622.50"></text></g><g><title>pyo3::conversions::std::string::_$LT$impl$u20$pyo3..conversion..IntoPy$LT$pyo3..instance..Py$LT$pyo3..types..any..PyAny$GT$$GT$$u20$for$u20$alloc..string..String$GT$::into_py::hac4e10a4fea0f576 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.26%)</title><rect x="24.4180%" y="596" width="0.2587%" height="15" fill="rgb(250,108,0)" fg:x="472" fg:w="5"/><text x="24.6680%" y="606.50"></text></g><g><title>unicode_decode_utf8 (python3.10) (3 samples, 0.16%)</title><rect x="24.5215%" y="612" width="0.1552%" height="15" fill="rgb(228,208,7)" fg:x="474" fg:w="3"/><text x="24.7715%" y="622.50"></text></g><g><title>_$LT$tokenizers..models..PyModel$u20$as$u20$tokenizers..tokenizer..Model$GT$::id_to_token::hb49184543dba0911 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.21%)</title><rect x="24.7801%" y="612" width="0.2069%" height="15" fill="rgb(244,45,10)" fg:x="479" fg:w="4"/><text x="25.0301%" y="622.50"></text></g><g><title>_$LT$tokenizers..models..ModelWrapper$u20$as$u20$tokenizers..tokenizer..Model$GT$::id_to_token::h5443007a7351b76c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.21%)</title><rect x="24.7801%" y="628" width="0.2069%" height="15" fill="rgb(207,125,25)" fg:x="479" fg:w="4"/><text x="25.0301%" y="638.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:176) (25 samples, 1.29%)</title><rect x="23.7455%" y="516" width="1.2933%" height="15" fill="rgb(210,195,18)" fg:x="459" fg:w="25"/><text x="23.9955%" y="526.50"></text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils_fast.py:392) (21 samples, 1.09%)</title><rect x="23.9524%" y="532" width="1.0864%" height="15" fill="rgb(249,80,12)" fg:x="463" fg:w="21"/><text x="24.2024%" y="542.50"></text></g><g><title>tokenizers::tokenizer::_::_$LT$impl$u20$pyo3..impl_..pyclass..PyMethods$LT$tokenizers..tokenizer..PyTokenizer$GT$$u20$for$u20$pyo3..impl_..pyclass..PyClassImplCollector$LT$tokenizers..tokenizer..PyTokenizer$GT$$GT$::py_methods::ITEMS::trampoline::h80694c77757405f1 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (17 samples, 0.88%)</title><rect x="24.1593%" y="548" width="0.8795%" height="15" fill="rgb(221,65,9)" fg:x="467" fg:w="17"/><text x="24.4093%" y="558.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline::ha39f8c3f2d85888c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (17 samples, 0.88%)</title><rect x="24.1593%" y="564" width="0.8795%" height="15" fill="rgb(235,49,36)" fg:x="467" fg:w="17"/><text x="24.4093%" y="574.50"></text></g><g><title>tokenizers::tokenizer::_::_$LT$impl$u20$tokenizers..tokenizer..PyTokenizer$GT$::__pymethod_id_to_token__::hc45ca650e8805b04 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (12 samples, 0.62%)</title><rect x="24.4180%" y="580" width="0.6208%" height="15" fill="rgb(225,32,20)" fg:x="472" fg:w="12"/><text x="24.6680%" y="590.50"></text></g><g><title>tokenizers::tokenizer::added_vocabulary::AddedVocabulary::id_to_token::h08a04c2091acd01f (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (7 samples, 0.36%)</title><rect x="24.6767%" y="596" width="0.3621%" height="15" fill="rgb(215,141,46)" fg:x="477" fg:w="7"/><text x="24.9267%" y="606.50"></text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils_fast.py:390) (3 samples, 0.16%)</title><rect x="25.1940%" y="532" width="0.1552%" height="15" fill="rgb(250,160,47)" fg:x="487" fg:w="3"/><text x="25.4440%" y="542.50"></text></g><g><title>_$LT$pyo3..gil..GILPool$u20$as$u20$core..ops..drop..Drop$GT$::drop::h4f0941f877e51440 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (2 samples, 0.10%)</title><rect x="25.5044%" y="580" width="0.1035%" height="15" fill="rgb(216,222,40)" fg:x="493" fg:w="2"/><text x="25.7544%" y="590.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:190) (13 samples, 0.67%)</title><rect x="25.0388%" y="516" width="0.6725%" height="15" fill="rgb(234,217,39)" fg:x="484" fg:w="13"/><text x="25.2888%" y="526.50"></text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils_fast.py:392) (7 samples, 0.36%)</title><rect x="25.3492%" y="532" width="0.3621%" height="15" fill="rgb(207,178,40)" fg:x="490" fg:w="7"/><text x="25.5992%" y="542.50"></text></g><g><title>tokenizers::tokenizer::_::_$LT$impl$u20$pyo3..impl_..pyclass..PyMethods$LT$tokenizers..tokenizer..PyTokenizer$GT$$u20$for$u20$pyo3..impl_..pyclass..PyClassImplCollector$LT$tokenizers..tokenizer..PyTokenizer$GT$$GT$::py_methods::ITEMS::trampoline::h80694c77757405f1 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.26%)</title><rect x="25.4527%" y="548" width="0.2587%" height="15" fill="rgb(221,136,13)" fg:x="492" fg:w="5"/><text x="25.7027%" y="558.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline::ha39f8c3f2d85888c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.21%)</title><rect x="25.5044%" y="564" width="0.2069%" height="15" fill="rgb(249,199,10)" fg:x="493" fg:w="4"/><text x="25.7544%" y="574.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:192) (7 samples, 0.36%)</title><rect x="25.7113%" y="516" width="0.3621%" height="15" fill="rgb(249,222,13)" fg:x="497" fg:w="7"/><text x="25.9613%" y="526.50"></text></g><g><title>_$LT$pyo3..gil..GILPool$u20$as$u20$core..ops..drop..Drop$GT$::drop::h4f0941f877e51440 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (2 samples, 0.10%)</title><rect x="26.3321%" y="580" width="0.1035%" height="15" fill="rgb(244,185,38)" fg:x="509" fg:w="2"/><text x="26.5821%" y="590.50"></text></g><g><title>malloc (libc-2.31.so) (2 samples, 0.10%)</title><rect x="26.3321%" y="596" width="0.1035%" height="15" fill="rgb(236,202,9)" fg:x="509" fg:w="2"/><text x="26.5821%" y="606.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:198) (10 samples, 0.52%)</title><rect x="26.0735%" y="516" width="0.5173%" height="15" fill="rgb(250,229,37)" fg:x="504" fg:w="10"/><text x="26.3235%" y="526.50"></text></g><g><title>convert_tokens_to_string (transformers/tokenization_utils_fast.py:612) (8 samples, 0.41%)</title><rect x="26.1769%" y="532" width="0.4139%" height="15" fill="rgb(206,174,23)" fg:x="506" fg:w="8"/><text x="26.4269%" y="542.50"></text></g><g><title>tokenizers::decoders::_::_$LT$impl$u20$pyo3..impl_..pyclass..PyMethods$LT$tokenizers..decoders..PyDecoder$GT$$u20$for$u20$pyo3..impl_..pyclass..PyClassImplCollector$LT$tokenizers..decoders..PyDecoder$GT$$GT$::py_methods::ITEMS::trampoline::hce05bfd696bacf03 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.26%)</title><rect x="26.3321%" y="548" width="0.2587%" height="15" fill="rgb(211,33,43)" fg:x="509" fg:w="5"/><text x="26.5821%" y="558.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline::ha39f8c3f2d85888c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.26%)</title><rect x="26.3321%" y="564" width="0.2587%" height="15" fill="rgb(245,58,50)" fg:x="509" fg:w="5"/><text x="26.5821%" y="574.50"></text></g><g><title>tokenizers::decoders::_::_$LT$impl$u20$tokenizers..decoders..PyDecoder$GT$::__pymethod_decode__::h7bea4643c6a4edbf (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (2 samples, 0.10%)</title><rect x="26.4873%" y="580" width="0.1035%" height="15" fill="rgb(244,68,36)" fg:x="512" fg:w="2"/><text x="26.7373%" y="590.50"></text></g><g><title>pyo3::types::sequence::extract_sequence::h2a6581dab05ce19b (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (2 samples, 0.10%)</title><rect x="26.4873%" y="596" width="0.1035%" height="15" fill="rgb(232,229,15)" fg:x="512" fg:w="2"/><text x="26.7373%" y="606.50"></text></g><g><title>pyo3::types::any::PyAny::iter::he899696c713f3bb9 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (2 samples, 0.10%)</title><rect x="26.4873%" y="612" width="0.1035%" height="15" fill="rgb(254,30,23)" fg:x="512" fg:w="2"/><text x="26.7373%" y="622.50"></text></g><g><title>pyo3::types::iterator::PyIterator::from_object::h2ce56ac960032d86 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (2 samples, 0.10%)</title><rect x="26.4873%" y="628" width="0.1035%" height="15" fill="rgb(235,160,14)" fg:x="512" fg:w="2"/><text x="26.7373%" y="638.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:200) (8 samples, 0.41%)</title><rect x="26.5908%" y="516" width="0.4139%" height="15" fill="rgb(212,155,44)" fg:x="514" fg:w="8"/><text x="26.8408%" y="526.50"></text></g><g><title>convert_tokens_to_string (transformers/tokenization_utils_fast.py:612) (8 samples, 0.41%)</title><rect x="26.5908%" y="532" width="0.4139%" height="15" fill="rgb(226,2,50)" fg:x="514" fg:w="8"/><text x="26.8408%" y="542.50"></text></g><g><title>tokenizers::decoders::_::_$LT$impl$u20$pyo3..impl_..pyclass..PyMethods$LT$tokenizers..decoders..PyDecoder$GT$$u20$for$u20$pyo3..impl_..pyclass..PyClassImplCollector$LT$tokenizers..decoders..PyDecoder$GT$$GT$::py_methods::ITEMS::trampoline::hce05bfd696bacf03 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.26%)</title><rect x="26.7460%" y="548" width="0.2587%" height="15" fill="rgb(234,177,6)" fg:x="517" fg:w="5"/><text x="26.9960%" y="558.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline::ha39f8c3f2d85888c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.26%)</title><rect x="26.7460%" y="564" width="0.2587%" height="15" fill="rgb(217,24,9)" fg:x="517" fg:w="5"/><text x="26.9960%" y="574.50"></text></g><g><title>tokenizers::decoders::_::_$LT$impl$u20$tokenizers..decoders..PyDecoder$GT$::__pymethod_decode__::h7bea4643c6a4edbf (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.21%)</title><rect x="26.7977%" y="580" width="0.2069%" height="15" fill="rgb(220,13,46)" fg:x="518" fg:w="4"/><text x="27.0477%" y="590.50"></text></g><g><title>pyo3::types::sequence::extract_sequence::h2a6581dab05ce19b (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (2 samples, 0.10%)</title><rect x="26.9012%" y="596" width="0.1035%" height="15" fill="rgb(239,221,27)" fg:x="520" fg:w="2"/><text x="27.1512%" y="606.50"></text></g><g><title>_decode_sequence (vllm/engine/llm_engine.py:745) (70 samples, 3.62%)</title><rect x="23.4868%" y="500" width="3.6213%" height="15" fill="rgb(222,198,25)" fg:x="454" fg:w="70"/><text x="23.7368%" y="510.50">_dec..</text></g><g><title>_decode_sequence (vllm/engine/llm_engine.py:754) (2 samples, 0.10%)</title><rect x="27.2116%" y="500" width="0.1035%" height="15" fill="rgb(211,99,13)" fg:x="526" fg:w="2"/><text x="27.4616%" y="510.50"></text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:423) (176 samples, 9.11%)</title><rect x="18.4170%" y="484" width="9.1050%" height="15" fill="rgb(232,111,31)" fg:x="356" fg:w="176"/><text x="18.6670%" y="494.50">_process_sequ..</text></g><g><title>_decode_sequence (vllm/engine/llm_engine.py:760) (3 samples, 0.16%)</title><rect x="27.3668%" y="500" width="0.1552%" height="15" fill="rgb(245,82,37)" fg:x="529" fg:w="3"/><text x="27.6168%" y="510.50"></text></g><g><title>unicode_concatenate (python3.10) (2 samples, 0.10%)</title><rect x="27.4185%" y="516" width="0.1035%" height="15" fill="rgb(227,149,46)" fg:x="530" fg:w="2"/><text x="27.6685%" y="526.50"></text></g><g><title>_check_stop (vllm/engine/llm_engine.py:770) (3 samples, 0.16%)</title><rect x="27.5737%" y="500" width="0.1552%" height="15" fill="rgb(218,36,50)" fg:x="533" fg:w="3"/><text x="27.8237%" y="510.50"></text></g><g><title>get_last_token_id (vllm/sequence.py:249) (3 samples, 0.16%)</title><rect x="27.5737%" y="516" width="0.1552%" height="15" fill="rgb(226,80,48)" fg:x="533" fg:w="3"/><text x="27.8237%" y="526.50"></text></g><g><title>_check_stop (vllm/engine/llm_engine.py:778) (4 samples, 0.21%)</title><rect x="27.7289%" y="500" width="0.2069%" height="15" fill="rgb(238,224,15)" fg:x="536" fg:w="4"/><text x="27.9789%" y="510.50"></text></g><g><title>get_len (vllm/sequence.py:234) (4 samples, 0.21%)</title><rect x="27.7289%" y="516" width="0.2069%" height="15" fill="rgb(241,136,10)" fg:x="536" fg:w="4"/><text x="27.9789%" y="526.50"></text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:424) (11 samples, 0.57%)</title><rect x="27.5220%" y="484" width="0.5691%" height="15" fill="rgb(208,32,45)" fg:x="532" fg:w="11"/><text x="27.7720%" y="494.50"></text></g><g><title>_check_stop (vllm/engine/llm_engine.py:783) (3 samples, 0.16%)</title><rect x="27.9359%" y="500" width="0.1552%" height="15" fill="rgb(207,135,9)" fg:x="540" fg:w="3"/><text x="28.1859%" y="510.50"></text></g><g><title>is_finished (vllm/sequence.py:39) (2 samples, 0.10%)</title><rect x="28.2980%" y="516" width="0.1035%" height="15" fill="rgb(206,86,44)" fg:x="547" fg:w="2"/><text x="28.5480%" y="526.50"></text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:441) (5 samples, 0.26%)</title><rect x="28.2462%" y="484" width="0.2587%" height="15" fill="rgb(245,177,15)" fg:x="546" fg:w="5"/><text x="28.4962%" y="494.50"></text></g><g><title>is_finished (vllm/sequence.py:277) (4 samples, 0.21%)</title><rect x="28.2980%" y="500" width="0.2069%" height="15" fill="rgb(206,64,50)" fg:x="547" fg:w="4"/><text x="28.5480%" y="510.50"></text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:558) (245 samples, 12.67%)</title><rect x="15.8820%" y="468" width="12.6746%" height="15" fill="rgb(234,36,40)" fg:x="307" fg:w="245"/><text x="16.1320%" y="478.50">_process_model_outp..</text></g><g><title>is_finished (vllm/sequence.py:41) (2 samples, 0.10%)</title><rect x="29.1774%" y="564" width="0.1035%" height="15" fill="rgb(213,64,8)" fg:x="564" fg:w="2"/><text x="29.4274%" y="574.50"></text></g><g><title>is_finished (vllm/sequence.py:42) (2 samples, 0.10%)</title><rect x="29.2809%" y="564" width="0.1035%" height="15" fill="rgb(210,75,36)" fg:x="566" fg:w="2"/><text x="29.5309%" y="574.50"></text></g><g><title>&lt;genexpr&gt; (vllm/sequence.py:425) (15 samples, 0.78%)</title><rect x="28.7636%" y="532" width="0.7760%" height="15" fill="rgb(229,88,21)" fg:x="556" fg:w="15"/><text x="29.0136%" y="542.50"></text></g><g><title>is_finished (vllm/sequence.py:277) (13 samples, 0.67%)</title><rect x="28.8670%" y="548" width="0.6725%" height="15" fill="rgb(252,204,47)" fg:x="558" fg:w="13"/><text x="29.1170%" y="558.50"></text></g><g><title>is_finished (vllm/sequence.py:43) (3 samples, 0.16%)</title><rect x="29.3844%" y="564" width="0.1552%" height="15" fill="rgb(208,77,27)" fg:x="568" fg:w="3"/><text x="29.6344%" y="574.50"></text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:561) (23 samples, 1.19%)</title><rect x="28.5566%" y="468" width="1.1899%" height="15" fill="rgb(221,76,26)" fg:x="552" fg:w="23"/><text x="28.8066%" y="478.50"></text></g><g><title>free_finished_seq_groups (vllm/core/scheduler.py:394) (23 samples, 1.19%)</title><rect x="28.5566%" y="484" width="1.1899%" height="15" fill="rgb(225,139,18)" fg:x="552" fg:w="23"/><text x="28.8066%" y="494.50"></text></g><g><title>&lt;genexpr&gt; (vllm/core/scheduler.py:394) (22 samples, 1.14%)</title><rect x="28.6084%" y="500" width="1.1381%" height="15" fill="rgb(230,137,11)" fg:x="553" fg:w="22"/><text x="28.8584%" y="510.50"></text></g><g><title>is_finished (vllm/sequence.py:425) (22 samples, 1.14%)</title><rect x="28.6084%" y="516" width="1.1381%" height="15" fill="rgb(212,28,1)" fg:x="553" fg:w="22"/><text x="28.8584%" y="526.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (4 samples, 0.21%)</title><rect x="29.5396%" y="532" width="0.2069%" height="15" fill="rgb(248,164,17)" fg:x="571" fg:w="4"/><text x="29.7896%" y="542.50"></text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:566) (2 samples, 0.10%)</title><rect x="29.7465%" y="468" width="0.1035%" height="15" fill="rgb(222,171,42)" fg:x="575" fg:w="2"/><text x="29.9965%" y="478.50"></text></g><g><title>maybe_set_first_token_time (vllm/sequence.py:353) (2 samples, 0.10%)</title><rect x="29.7465%" y="484" width="0.1035%" height="15" fill="rgb(243,84,45)" fg:x="575" fg:w="2"/><text x="29.9965%" y="494.50"></text></g><g><title>&lt;listcomp&gt; (vllm/outputs.py:110) (3 samples, 0.16%)</title><rect x="30.2121%" y="500" width="0.1552%" height="15" fill="rgb(252,49,23)" fg:x="584" fg:w="3"/><text x="30.4621%" y="510.50"></text></g><g><title>from_seq_group (vllm/outputs.py:109) (7 samples, 0.36%)</title><rect x="30.0569%" y="484" width="0.3621%" height="15" fill="rgb(215,19,7)" fg:x="581" fg:w="7"/><text x="30.3069%" y="494.50"></text></g><g><title>from_seq_group (vllm/outputs.py:119) (2 samples, 0.10%)</title><rect x="30.4190%" y="484" width="0.1035%" height="15" fill="rgb(238,81,41)" fg:x="588" fg:w="2"/><text x="30.6690%" y="494.50"></text></g><g><title>prompt (vllm/sequence.py:333) (2 samples, 0.10%)</title><rect x="30.4190%" y="500" width="0.1035%" height="15" fill="rgb(210,199,37)" fg:x="588" fg:w="2"/><text x="30.6690%" y="510.50"></text></g><g><title>from_seq_group (vllm/outputs.py:120) (4 samples, 0.21%)</title><rect x="30.5225%" y="484" width="0.2069%" height="15" fill="rgb(244,192,49)" fg:x="590" fg:w="4"/><text x="30.7725%" y="494.50"></text></g><g><title>prompt_token_ids (vllm/sequence.py:339) (3 samples, 0.16%)</title><rect x="30.5742%" y="500" width="0.1552%" height="15" fill="rgb(226,211,11)" fg:x="591" fg:w="3"/><text x="30.8242%" y="510.50"></text></g><g><title>is_finished (vllm/sequence.py:39) (2 samples, 0.10%)</title><rect x="31.0916%" y="548" width="0.1035%" height="15" fill="rgb(236,162,54)" fg:x="601" fg:w="2"/><text x="31.3416%" y="558.50"></text></g><g><title>&lt;genexpr&gt; (vllm/sequence.py:425) (7 samples, 0.36%)</title><rect x="31.0398%" y="516" width="0.3621%" height="15" fill="rgb(220,229,9)" fg:x="600" fg:w="7"/><text x="31.2898%" y="526.50"></text></g><g><title>is_finished (vllm/sequence.py:277) (7 samples, 0.36%)</title><rect x="31.0398%" y="532" width="0.3621%" height="15" fill="rgb(250,87,22)" fg:x="600" fg:w="7"/><text x="31.2898%" y="542.50"></text></g><g><title>from_seq_group (vllm/outputs.py:122) (15 samples, 0.78%)</title><rect x="30.7294%" y="484" width="0.7760%" height="15" fill="rgb(239,43,17)" fg:x="594" fg:w="15"/><text x="30.9794%" y="494.50"></text></g><g><title>is_finished (vllm/sequence.py:425) (15 samples, 0.78%)</title><rect x="30.7294%" y="500" width="0.7760%" height="15" fill="rgb(231,177,25)" fg:x="594" fg:w="15"/><text x="30.9794%" y="510.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (2 samples, 0.10%)</title><rect x="31.4020%" y="516" width="0.1035%" height="15" fill="rgb(219,179,1)" fg:x="607" fg:w="2"/><text x="31.6520%" y="526.50"></text></g><g><title>gc_collect_with_callback (python3.10) (2 samples, 0.10%)</title><rect x="31.4020%" y="532" width="0.1035%" height="15" fill="rgb(238,219,53)" fg:x="607" fg:w="2"/><text x="31.6520%" y="542.50"></text></g><g><title>gc_collect_main (python3.10) (2 samples, 0.10%)</title><rect x="31.4020%" y="548" width="0.1035%" height="15" fill="rgb(232,167,36)" fg:x="607" fg:w="2"/><text x="31.6520%" y="558.50"></text></g><g><title>from_seq_group (vllm/outputs.py:125) (6 samples, 0.31%)</title><rect x="31.5054%" y="484" width="0.3104%" height="15" fill="rgb(244,19,51)" fg:x="609" fg:w="6"/><text x="31.7554%" y="494.50"></text></g><g><title>from_seq_group (vllm/outputs.py:90) (3 samples, 0.16%)</title><rect x="31.8158%" y="484" width="0.1552%" height="15" fill="rgb(224,6,22)" fg:x="615" fg:w="3"/><text x="32.0658%" y="494.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (2 samples, 0.10%)</title><rect x="31.8676%" y="500" width="0.1035%" height="15" fill="rgb(224,145,5)" fg:x="616" fg:w="2"/><text x="32.1176%" y="510.50"></text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:567) (44 samples, 2.28%)</title><rect x="29.8500%" y="468" width="2.2763%" height="15" fill="rgb(234,130,49)" fg:x="577" fg:w="44"/><text x="30.1000%" y="478.50">_..</text></g><g><title>from_seq_group (vllm/outputs.py:91) (3 samples, 0.16%)</title><rect x="31.9710%" y="484" width="0.1552%" height="15" fill="rgb(254,6,2)" fg:x="618" fg:w="3"/><text x="32.2210%" y="494.50"></text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:568) (3 samples, 0.16%)</title><rect x="32.1262%" y="468" width="0.1552%" height="15" fill="rgb(208,96,46)" fg:x="621" fg:w="3"/><text x="32.3762%" y="478.50"></text></g><g><title>_get_stats (vllm/engine/llm_engine.py:694) (2 samples, 0.10%)</title><rect x="32.3332%" y="484" width="0.1035%" height="15" fill="rgb(239,3,39)" fg:x="625" fg:w="2"/><text x="32.5832%" y="494.50"></text></g><g><title>get_last_latency (vllm/sequence.py:348) (2 samples, 0.10%)</title><rect x="32.3332%" y="500" width="0.1035%" height="15" fill="rgb(233,210,1)" fg:x="625" fg:w="2"/><text x="32.5832%" y="510.50"></text></g><g><title>_get_stats (vllm/engine/llm_engine.py:696) (8 samples, 0.41%)</title><rect x="32.4366%" y="484" width="0.4139%" height="15" fill="rgb(244,137,37)" fg:x="627" fg:w="8"/><text x="32.6866%" y="494.50"></text></g><g><title>is_finished (vllm/sequence.py:425) (7 samples, 0.36%)</title><rect x="32.4884%" y="500" width="0.3621%" height="15" fill="rgb(240,136,2)" fg:x="628" fg:w="7"/><text x="32.7384%" y="510.50"></text></g><g><title>_get_stats (vllm/engine/llm_engine.py:703) (3 samples, 0.16%)</title><rect x="32.8505%" y="484" width="0.1552%" height="15" fill="rgb(239,18,37)" fg:x="635" fg:w="3"/><text x="33.1005%" y="494.50"></text></g><g><title>_log_prometheus (vllm/engine/metrics.py:154) (4 samples, 0.21%)</title><rect x="33.0574%" y="500" width="0.2069%" height="15" fill="rgb(218,185,22)" fg:x="639" fg:w="4"/><text x="33.3074%" y="510.50"></text></g><g><title>_log_prometheus (vllm/engine/metrics.py:164) (2 samples, 0.10%)</title><rect x="33.3161%" y="500" width="0.1035%" height="15" fill="rgb(225,218,4)" fg:x="644" fg:w="2"/><text x="33.5661%" y="510.50"></text></g><g><title>labels (prometheus_client/metrics.py:194) (2 samples, 0.10%)</title><rect x="33.3161%" y="516" width="0.1035%" height="15" fill="rgb(230,182,32)" fg:x="644" fg:w="2"/><text x="33.5661%" y="526.50"></text></g><g><title>labels (prometheus_client/metrics.py:194) (2 samples, 0.10%)</title><rect x="33.8852%" y="516" width="0.1035%" height="15" fill="rgb(242,56,43)" fg:x="655" fg:w="2"/><text x="34.1352%" y="526.50"></text></g><g><title>labels (prometheus_client/metrics.py:196) (4 samples, 0.21%)</title><rect x="33.9886%" y="516" width="0.2069%" height="15" fill="rgb(233,99,24)" fg:x="657" fg:w="4"/><text x="34.2386%" y="526.50"></text></g><g><title>_log_prometheus (vllm/engine/metrics.py:172) (17 samples, 0.88%)</title><rect x="33.4196%" y="500" width="0.8795%" height="15" fill="rgb(234,209,42)" fg:x="646" fg:w="17"/><text x="33.6696%" y="510.50"></text></g><g><title>inc (prometheus_client/values.py:19) (2 samples, 0.10%)</title><rect x="34.4025%" y="532" width="0.1035%" height="15" fill="rgb(227,7,12)" fg:x="665" fg:w="2"/><text x="34.6525%" y="542.50"></text></g><g><title>observe (prometheus_client/metrics.py:650) (4 samples, 0.21%)</title><rect x="34.3508%" y="516" width="0.2069%" height="15" fill="rgb(245,203,43)" fg:x="664" fg:w="4"/><text x="34.6008%" y="526.50"></text></g><g><title>observe (prometheus_client/metrics.py:651) (6 samples, 0.31%)</title><rect x="34.5577%" y="516" width="0.3104%" height="15" fill="rgb(238,205,33)" fg:x="668" fg:w="6"/><text x="34.8077%" y="526.50"></text></g><g><title>inc (prometheus_client/values.py:19) (2 samples, 0.10%)</title><rect x="34.9198%" y="532" width="0.1035%" height="15" fill="rgb(231,56,7)" fg:x="675" fg:w="2"/><text x="35.1698%" y="542.50"></text></g><g><title>log (vllm/engine/metrics.py:198) (40 samples, 2.07%)</title><rect x="33.0057%" y="484" width="2.0693%" height="15" fill="rgb(244,186,29)" fg:x="638" fg:w="40"/><text x="33.2557%" y="494.50">l..</text></g><g><title>_log_prometheus (vllm/engine/metrics.py:173) (15 samples, 0.78%)</title><rect x="34.2990%" y="500" width="0.7760%" height="15" fill="rgb(234,111,31)" fg:x="663" fg:w="15"/><text x="34.5490%" y="510.50"></text></g><g><title>observe (prometheus_client/metrics.py:653) (3 samples, 0.16%)</title><rect x="34.9198%" y="516" width="0.1552%" height="15" fill="rgb(241,149,10)" fg:x="675" fg:w="3"/><text x="35.1698%" y="526.50"></text></g><g><title>step_async (vllm/engine/async_llm_engine.py:218) (375 samples, 19.40%)</title><rect x="15.7786%" y="452" width="19.3999%" height="15" fill="rgb(249,206,44)" fg:x="305" fg:w="375"/><text x="16.0286%" y="462.50">step_async (vllm/engine/async_..</text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:575) (56 samples, 2.90%)</title><rect x="32.2814%" y="468" width="2.8971%" height="15" fill="rgb(251,153,30)" fg:x="624" fg:w="56"/><text x="32.5314%" y="478.50">_p..</text></g><g><title>engine_step (vllm/engine/async_llm_engine.py:450) (381 samples, 19.71%)</title><rect x="15.5199%" y="436" width="19.7103%" height="15" fill="rgb(239,152,38)" fg:x="300" fg:w="381"/><text x="15.7699%" y="446.50">engine_step (vllm/engine/async_..</text></g><g><title>call_soon (_asynciomodule.c:375) (2 samples, 0.10%)</title><rect x="35.4889%" y="548" width="0.1035%" height="15" fill="rgb(249,139,47)" fg:x="686" fg:w="2"/><text x="35.7389%" y="558.50"></text></g><g><title>_Py_DECREF (object.h:492) (2 samples, 0.10%)</title><rect x="35.4889%" y="564" width="0.1035%" height="15" fill="rgb(244,64,35)" fg:x="686" fg:w="2"/><text x="35.7389%" y="574.50"></text></g><g><title>call_soon (loop.c:26958) (2 samples, 0.10%)</title><rect x="35.4889%" y="580" width="0.1035%" height="15" fill="rgb(216,46,15)" fg:x="686" fg:w="2"/><text x="35.7389%" y="590.50"></text></g><g><title>call_soon (loop.c:27024) (2 samples, 0.10%)</title><rect x="35.4889%" y="596" width="0.1035%" height="15" fill="rgb(250,74,19)" fg:x="686" fg:w="2"/><text x="35.7389%" y="606.50"></text></g><g><title>Loop__call_soon (loop.c:17216) (2 samples, 0.10%)</title><rect x="35.4889%" y="612" width="0.1035%" height="15" fill="rgb(249,42,33)" fg:x="686" fg:w="2"/><text x="35.7389%" y="622.50"></text></g><g><title>Loop__call_soon_handle (loop.c:17345) (2 samples, 0.10%)</title><rect x="35.4889%" y="628" width="0.1035%" height="15" fill="rgb(242,149,17)" fg:x="686" fg:w="2"/><text x="35.7389%" y="638.50"></text></g><g><title>Loop__append_ready_handle (loop.c:17288) (2 samples, 0.10%)</title><rect x="35.4889%" y="644" width="0.1035%" height="15" fill="rgb(244,29,21)" fg:x="686" fg:w="2"/><text x="35.7389%" y="654.50"></text></g><g><title>__Pyx_PyObject_Append (loop.c:173027) (2 samples, 0.10%)</title><rect x="35.4889%" y="660" width="0.1035%" height="15" fill="rgb(220,130,37)" fg:x="686" fg:w="2"/><text x="35.7389%" y="670.50"></text></g><g><title>__Pyx_PyObject_Append (loop.c:173031) (2 samples, 0.10%)</title><rect x="35.4889%" y="676" width="0.1035%" height="15" fill="rgb(211,67,2)" fg:x="686" fg:w="2"/><text x="35.7389%" y="686.50"></text></g><g><title>process_request_output (vllm/engine/async_llm_engine.py:115) (8 samples, 0.41%)</title><rect x="35.2302%" y="452" width="0.4139%" height="15" fill="rgb(235,68,52)" fg:x="681" fg:w="8"/><text x="35.4802%" y="462.50"></text></g><g><title>put (vllm/engine/async_llm_engine.py:59) (5 samples, 0.26%)</title><rect x="35.3854%" y="468" width="0.2587%" height="15" fill="rgb(246,142,3)" fg:x="684" fg:w="5"/><text x="35.6354%" y="478.50"></text></g><g><title>put_nowait (asyncio/queues.py:148) (3 samples, 0.16%)</title><rect x="35.4889%" y="484" width="0.1552%" height="15" fill="rgb(241,25,7)" fg:x="686" fg:w="3"/><text x="35.7389%" y="494.50"></text></g><g><title>_wakeup_next (asyncio/queues.py:64) (3 samples, 0.16%)</title><rect x="35.4889%" y="500" width="0.1552%" height="15" fill="rgb(242,119,39)" fg:x="686" fg:w="3"/><text x="35.7389%" y="510.50"></text></g><g><title>future_set_result (_asynciomodule.c:546) (3 samples, 0.16%)</title><rect x="35.4889%" y="516" width="0.1552%" height="15" fill="rgb(241,98,45)" fg:x="686" fg:w="3"/><text x="35.7389%" y="526.50"></text></g><g><title>future_schedule_callbacks (_asynciomodule.c:427) (3 samples, 0.16%)</title><rect x="35.4889%" y="532" width="0.1552%" height="15" fill="rgb(254,28,30)" fg:x="686" fg:w="3"/><text x="35.7389%" y="542.50"></text></g><g><title>engine_step (vllm/engine/async_llm_engine.py:453) (9 samples, 0.47%)</title><rect x="35.2302%" y="436" width="0.4656%" height="15" fill="rgb(241,142,54)" fg:x="681" fg:w="9"/><text x="35.4802%" y="446.50"></text></g><g><title>get (asyncio/queues.py:155) (3 samples, 0.16%)</title><rect x="35.9545%" y="484" width="0.1552%" height="15" fill="rgb(222,85,15)" fg:x="695" fg:w="3"/><text x="36.2045%" y="494.50"></text></g><g><title>get (asyncio/queues.py:156) (15 samples, 0.78%)</title><rect x="36.1097%" y="484" width="0.7760%" height="15" fill="rgb(210,85,47)" fg:x="698" fg:w="15"/><text x="36.3597%" y="494.50"></text></g><g><title>_get_loop (asyncio/mixins.py:23) (15 samples, 0.78%)</title><rect x="36.1097%" y="500" width="0.7760%" height="15" fill="rgb(224,206,25)" fg:x="698" fg:w="15"/><text x="36.3597%" y="510.50"></text></g><g><title>_asyncio__get_running_loop (_asynciomodule.c.h:632) (14 samples, 0.72%)</title><rect x="36.1614%" y="516" width="0.7243%" height="15" fill="rgb(243,201,19)" fg:x="699" fg:w="14"/><text x="36.4114%" y="526.50"></text></g><g><title>_asyncio__get_running_loop_impl (_asynciomodule.c:3037) (14 samples, 0.72%)</title><rect x="36.1614%" y="532" width="0.7243%" height="15" fill="rgb(236,59,4)" fg:x="699" fg:w="14"/><text x="36.4114%" y="542.50"></text></g><g><title>get_running_loop (_asynciomodule.c:267) (14 samples, 0.72%)</title><rect x="36.1614%" y="548" width="0.7243%" height="15" fill="rgb(254,179,45)" fg:x="699" fg:w="14"/><text x="36.4114%" y="558.50"></text></g><g><title>getpid (libc-2.31.so) (14 samples, 0.72%)</title><rect x="36.1614%" y="564" width="0.7243%" height="15" fill="rgb(226,14,10)" fg:x="699" fg:w="14"/><text x="36.4114%" y="574.50"></text></g><g><title>get (asyncio/queues.py:159) (3 samples, 0.16%)</title><rect x="36.8857%" y="484" width="0.1552%" height="15" fill="rgb(244,27,41)" fg:x="713" fg:w="3"/><text x="37.1357%" y="494.50"></text></g><g><title>get_nowait (asyncio/queues.py:181) (2 samples, 0.10%)</title><rect x="37.0409%" y="500" width="0.1035%" height="15" fill="rgb(235,35,32)" fg:x="716" fg:w="2"/><text x="37.2909%" y="510.50"></text></g><g><title>get_nowait (asyncio/queues.py:184) (2 samples, 0.10%)</title><rect x="37.1961%" y="500" width="0.1035%" height="15" fill="rgb(218,68,31)" fg:x="719" fg:w="2"/><text x="37.4461%" y="510.50"></text></g><g><title>__anext__ (vllm/engine/async_llm_engine.py:73) (29 samples, 1.50%)</title><rect x="35.8510%" y="468" width="1.5003%" height="15" fill="rgb(207,120,37)" fg:x="693" fg:w="29"/><text x="36.1010%" y="478.50"></text></g><g><title>get (asyncio/queues.py:174) (6 samples, 0.31%)</title><rect x="37.0409%" y="484" width="0.3104%" height="15" fill="rgb(227,98,0)" fg:x="716" fg:w="6"/><text x="37.2909%" y="494.50"></text></g><g><title>generate (vllm/engine/async_llm_engine.py:624) (30 samples, 1.55%)</title><rect x="35.8510%" y="452" width="1.5520%" height="15" fill="rgb(207,7,3)" fg:x="693" fg:w="30"/><text x="36.1010%" y="462.50"></text></g><g><title>producer (vllm/entrypoints/openai/serving_completion.py:67) (34 samples, 1.76%)</title><rect x="35.6958%" y="436" width="1.7589%" height="15" fill="rgb(206,98,19)" fg:x="690" fg:w="34"/><text x="35.9458%" y="446.50"></text></g><g><title>put_nowait (asyncio/queues.py:145) (2 samples, 0.10%)</title><rect x="37.6617%" y="468" width="0.1035%" height="15" fill="rgb(217,5,26)" fg:x="728" fg:w="2"/><text x="37.9117%" y="478.50"></text></g><g><title>_put (asyncio/queues.py:55) (2 samples, 0.10%)</title><rect x="37.6617%" y="484" width="0.1035%" height="15" fill="rgb(235,190,38)" fg:x="728" fg:w="2"/><text x="37.9117%" y="494.50"></text></g><g><title>_wakeup_next (asyncio/queues.py:63) (2 samples, 0.10%)</title><rect x="37.9721%" y="484" width="0.1035%" height="15" fill="rgb(247,86,24)" fg:x="734" fg:w="2"/><text x="38.2221%" y="494.50"></text></g><g><title>producer (vllm/entrypoints/openai/serving_completion.py:68) (15 samples, 0.78%)</title><rect x="37.4547%" y="436" width="0.7760%" height="15" fill="rgb(205,101,16)" fg:x="724" fg:w="15"/><text x="37.7047%" y="446.50"></text></g><g><title>put (asyncio/queues.py:136) (12 samples, 0.62%)</title><rect x="37.6099%" y="452" width="0.6208%" height="15" fill="rgb(246,168,33)" fg:x="727" fg:w="12"/><text x="37.8599%" y="462.50"></text></g><g><title>put_nowait (asyncio/queues.py:148) (8 samples, 0.41%)</title><rect x="37.8169%" y="468" width="0.4139%" height="15" fill="rgb(231,114,1)" fg:x="731" fg:w="8"/><text x="38.0669%" y="478.50"></text></g><g><title>_wakeup_next (asyncio/queues.py:64) (3 samples, 0.16%)</title><rect x="38.0755%" y="484" width="0.1552%" height="15" fill="rgb(207,184,53)" fg:x="736" fg:w="3"/><text x="38.3255%" y="494.50"></text></g><g><title>future_set_result (_asynciomodule.c:546) (3 samples, 0.16%)</title><rect x="38.0755%" y="500" width="0.1552%" height="15" fill="rgb(224,95,51)" fg:x="736" fg:w="3"/><text x="38.3255%" y="510.50"></text></g><g><title>future_schedule_callbacks (_asynciomodule.c:427) (3 samples, 0.16%)</title><rect x="38.0755%" y="516" width="0.1552%" height="15" fill="rgb(212,188,45)" fg:x="736" fg:w="3"/><text x="38.3255%" y="526.50"></text></g><g><title>call_soon (_asynciomodule.c:375) (3 samples, 0.16%)</title><rect x="38.0755%" y="532" width="0.1552%" height="15" fill="rgb(223,154,38)" fg:x="736" fg:w="3"/><text x="38.3255%" y="542.50"></text></g><g><title>_Py_DECREF (object.h:492) (3 samples, 0.16%)</title><rect x="38.0755%" y="548" width="0.1552%" height="15" fill="rgb(251,22,52)" fg:x="736" fg:w="3"/><text x="38.3255%" y="558.50"></text></g><g><title>call_soon (loop.c:26958) (2 samples, 0.10%)</title><rect x="38.1273%" y="564" width="0.1035%" height="15" fill="rgb(229,209,22)" fg:x="737" fg:w="2"/><text x="38.3773%" y="574.50"></text></g><g><title>call_soon (loop.c:27024) (2 samples, 0.10%)</title><rect x="38.1273%" y="580" width="0.1035%" height="15" fill="rgb(234,138,34)" fg:x="737" fg:w="2"/><text x="38.3773%" y="590.50"></text></g><g><title>app (starlette/routing.py:66) (2 samples, 0.10%)</title><rect x="38.2307%" y="596" width="0.1035%" height="15" fill="rgb(212,95,11)" fg:x="739" fg:w="2"/><text x="38.4807%" y="606.50"></text></g><g><title>app (fastapi/routing.py:278) (2 samples, 0.10%)</title><rect x="38.2307%" y="612" width="0.1035%" height="15" fill="rgb(240,179,47)" fg:x="739" fg:w="2"/><text x="38.4807%" y="622.50"></text></g><g><title>run_endpoint_function (fastapi/routing.py:190) (2 samples, 0.10%)</title><rect x="38.2307%" y="628" width="0.1035%" height="15" fill="rgb(240,163,11)" fg:x="739" fg:w="2"/><text x="38.4807%" y="638.50"></text></g><g><title>create_completion (vllm/entrypoints/openai/api_server.py:103) (2 samples, 0.10%)</title><rect x="38.2307%" y="644" width="0.1035%" height="15" fill="rgb(236,37,12)" fg:x="739" fg:w="2"/><text x="38.4807%" y="654.50"></text></g><g><title>run_asgi (uvicorn/protocols/http/httptools_impl.py:426) (4 samples, 0.21%)</title><rect x="38.2307%" y="436" width="0.2069%" height="15" fill="rgb(232,164,16)" fg:x="739" fg:w="4"/><text x="38.4807%" y="446.50"></text></g><g><title>__call__ (uvicorn/middleware/proxy_headers.py:84) (4 samples, 0.21%)</title><rect x="38.2307%" y="452" width="0.2069%" height="15" fill="rgb(244,205,15)" fg:x="739" fg:w="4"/><text x="38.4807%" y="462.50"></text></g><g><title>__call__ (fastapi/applications.py:292) (4 samples, 0.21%)</title><rect x="38.2307%" y="468" width="0.2069%" height="15" fill="rgb(223,117,47)" fg:x="739" fg:w="4"/><text x="38.4807%" y="478.50"></text></g><g><title>__call__ (starlette/applications.py:122) (4 samples, 0.21%)</title><rect x="38.2307%" y="484" width="0.2069%" height="15" fill="rgb(244,107,35)" fg:x="739" fg:w="4"/><text x="38.4807%" y="494.50"></text></g><g><title>__call__ (starlette/middleware/errors.py:162) (4 samples, 0.21%)</title><rect x="38.2307%" y="500" width="0.2069%" height="15" fill="rgb(205,140,8)" fg:x="739" fg:w="4"/><text x="38.4807%" y="510.50"></text></g><g><title>__call__ (starlette/middleware/cors.py:83) (4 samples, 0.21%)</title><rect x="38.2307%" y="516" width="0.2069%" height="15" fill="rgb(228,84,46)" fg:x="739" fg:w="4"/><text x="38.4807%" y="526.50"></text></g><g><title>__call__ (starlette/middleware/exceptions.py:68) (4 samples, 0.21%)</title><rect x="38.2307%" y="532" width="0.2069%" height="15" fill="rgb(254,188,9)" fg:x="739" fg:w="4"/><text x="38.4807%" y="542.50"></text></g><g><title>__call__ (fastapi/middleware/asyncexitstack.py:17) (4 samples, 0.21%)</title><rect x="38.2307%" y="548" width="0.2069%" height="15" fill="rgb(206,112,54)" fg:x="739" fg:w="4"/><text x="38.4807%" y="558.50"></text></g><g><title>__call__ (starlette/routing.py:718) (4 samples, 0.21%)</title><rect x="38.2307%" y="564" width="0.2069%" height="15" fill="rgb(216,84,49)" fg:x="739" fg:w="4"/><text x="38.4807%" y="574.50"></text></g><g><title>handle (starlette/routing.py:276) (4 samples, 0.21%)</title><rect x="38.2307%" y="580" width="0.2069%" height="15" fill="rgb(214,194,35)" fg:x="739" fg:w="4"/><text x="38.4807%" y="590.50"></text></g><g><title>app (starlette/routing.py:69) (2 samples, 0.10%)</title><rect x="38.3342%" y="596" width="0.1035%" height="15" fill="rgb(249,28,3)" fg:x="741" fg:w="2"/><text x="38.5842%" y="606.50"></text></g><g><title>__call__ (starlette/responses.py:277) (2 samples, 0.10%)</title><rect x="38.3342%" y="612" width="0.1035%" height="15" fill="rgb(222,56,52)" fg:x="741" fg:w="2"/><text x="38.5842%" y="622.50"></text></g><g><title>wrap (starlette/responses.py:273) (2 samples, 0.10%)</title><rect x="38.3342%" y="628" width="0.1035%" height="15" fill="rgb(245,217,50)" fg:x="741" fg:w="2"/><text x="38.5842%" y="638.50"></text></g><g><title>gc_collect_with_callback (python3.10) (2 samples, 0.10%)</title><rect x="38.3342%" y="644" width="0.1035%" height="15" fill="rgb(213,201,24)" fg:x="741" fg:w="2"/><text x="38.5842%" y="654.50"></text></g><g><title>gc_collect_main (python3.10) (2 samples, 0.10%)</title><rect x="38.3342%" y="660" width="0.1035%" height="15" fill="rgb(248,116,28)" fg:x="741" fg:w="2"/><text x="38.5842%" y="670.50"></text></g><g><title>completion_stream_generator (vllm/entrypoints/openai/serving_completion.py:219) (5 samples, 0.26%)</title><rect x="38.4377%" y="468" width="0.2587%" height="15" fill="rgb(219,72,43)" fg:x="743" fg:w="5"/><text x="38.6877%" y="478.50"></text></g><g><title>consumer (vllm/entrypoints/openai/serving_completion.py:80) (3 samples, 0.16%)</title><rect x="38.5411%" y="484" width="0.1552%" height="15" fill="rgb(209,138,14)" fg:x="745" fg:w="3"/><text x="38.7911%" y="494.50"></text></g><g><title>__enter__ (anyio/_backends/_asyncio.py:246) (11 samples, 0.57%)</title><rect x="38.9550%" y="500" width="0.5691%" height="15" fill="rgb(222,18,33)" fg:x="753" fg:w="11"/><text x="39.2050%" y="510.50"></text></g><g><title>current_task (asyncio/tasks.py:38) (10 samples, 0.52%)</title><rect x="39.0067%" y="516" width="0.5173%" height="15" fill="rgb(213,199,7)" fg:x="754" fg:w="10"/><text x="39.2567%" y="526.50"></text></g><g><title>_asyncio_get_running_loop (_asynciomodule.c.h:728) (10 samples, 0.52%)</title><rect x="39.0067%" y="532" width="0.5173%" height="15" fill="rgb(250,110,10)" fg:x="754" fg:w="10"/><text x="39.2567%" y="542.50"></text></g><g><title>_asyncio_get_running_loop_impl (_asynciomodule.c:3118) (10 samples, 0.52%)</title><rect x="39.0067%" y="548" width="0.5173%" height="15" fill="rgb(248,123,6)" fg:x="754" fg:w="10"/><text x="39.2567%" y="558.50"></text></g><g><title>get_running_loop (_asynciomodule.c:267) (10 samples, 0.52%)</title><rect x="39.0067%" y="564" width="0.5173%" height="15" fill="rgb(206,91,31)" fg:x="754" fg:w="10"/><text x="39.2567%" y="574.50"></text></g><g><title>getpid (libc-2.31.so) (10 samples, 0.52%)</title><rect x="39.0067%" y="580" width="0.5173%" height="15" fill="rgb(211,154,13)" fg:x="754" fg:w="10"/><text x="39.2567%" y="590.50"></text></g><g><title>is_disconnected (starlette/requests.py:299) (29 samples, 1.50%)</title><rect x="38.8515%" y="484" width="1.5003%" height="15" fill="rgb(225,148,7)" fg:x="751" fg:w="29"/><text x="39.1015%" y="494.50"></text></g><g><title>__new__ (anyio/_core/_tasks.py:35) (14 samples, 0.72%)</title><rect x="39.6275%" y="500" width="0.7243%" height="15" fill="rgb(220,160,43)" fg:x="766" fg:w="14"/><text x="39.8775%" y="510.50"></text></g><g><title>get_asynclib (anyio/_core/_eventloop.py:147) (9 samples, 0.47%)</title><rect x="39.8862%" y="516" width="0.4656%" height="15" fill="rgb(213,52,39)" fg:x="771" fg:w="9"/><text x="40.1362%" y="526.50"></text></g><g><title>current_async_library (sniffio/_impl.py:82) (8 samples, 0.41%)</title><rect x="39.9379%" y="532" width="0.4139%" height="15" fill="rgb(243,137,7)" fg:x="772" fg:w="8"/><text x="40.1879%" y="542.50"></text></g><g><title>current_task (asyncio/tasks.py:38) (7 samples, 0.36%)</title><rect x="39.9897%" y="548" width="0.3621%" height="15" fill="rgb(230,79,13)" fg:x="773" fg:w="7"/><text x="40.2397%" y="558.50"></text></g><g><title>_asyncio_get_running_loop (_asynciomodule.c.h:728) (7 samples, 0.36%)</title><rect x="39.9897%" y="564" width="0.3621%" height="15" fill="rgb(247,105,23)" fg:x="773" fg:w="7"/><text x="40.2397%" y="574.50"></text></g><g><title>_asyncio_get_running_loop_impl (_asynciomodule.c:3118) (7 samples, 0.36%)</title><rect x="39.9897%" y="580" width="0.3621%" height="15" fill="rgb(223,179,41)" fg:x="773" fg:w="7"/><text x="40.2397%" y="590.50"></text></g><g><title>get_running_loop (_asynciomodule.c:267) (7 samples, 0.36%)</title><rect x="39.9897%" y="596" width="0.3621%" height="15" fill="rgb(218,9,34)" fg:x="773" fg:w="7"/><text x="40.2397%" y="606.50"></text></g><g><title>getpid (libc-2.31.so) (7 samples, 0.36%)</title><rect x="39.9897%" y="612" width="0.3621%" height="15" fill="rgb(222,106,8)" fg:x="773" fg:w="7"/><text x="40.2397%" y="622.50"></text></g><g><title>_deliver_cancellation (anyio/_backends/_asyncio.py:347) (6 samples, 0.31%)</title><rect x="40.3518%" y="516" width="0.3104%" height="15" fill="rgb(211,220,0)" fg:x="780" fg:w="6"/><text x="40.6018%" y="526.50"></text></g><g><title>current_task (asyncio/tasks.py:38) (6 samples, 0.31%)</title><rect x="40.3518%" y="532" width="0.3104%" height="15" fill="rgb(229,52,16)" fg:x="780" fg:w="6"/><text x="40.6018%" y="542.50"></text></g><g><title>_asyncio_get_running_loop (_asynciomodule.c.h:728) (6 samples, 0.31%)</title><rect x="40.3518%" y="548" width="0.3104%" height="15" fill="rgb(212,155,18)" fg:x="780" fg:w="6"/><text x="40.6018%" y="558.50"></text></g><g><title>_asyncio_get_running_loop_impl (_asynciomodule.c:3118) (6 samples, 0.31%)</title><rect x="40.3518%" y="564" width="0.3104%" height="15" fill="rgb(242,21,14)" fg:x="780" fg:w="6"/><text x="40.6018%" y="574.50"></text></g><g><title>get_running_loop (_asynciomodule.c:267) (6 samples, 0.31%)</title><rect x="40.3518%" y="580" width="0.3104%" height="15" fill="rgb(222,19,48)" fg:x="780" fg:w="6"/><text x="40.6018%" y="590.50"></text></g><g><title>getpid (libc-2.31.so) (6 samples, 0.31%)</title><rect x="40.3518%" y="596" width="0.3104%" height="15" fill="rgb(232,45,27)" fg:x="780" fg:w="6"/><text x="40.6018%" y="606.50"></text></g><g><title>cancel (anyio/_backends/_asyncio.py:412) (13 samples, 0.67%)</title><rect x="40.3518%" y="500" width="0.6725%" height="15" fill="rgb(249,103,42)" fg:x="780" fg:w="13"/><text x="40.6018%" y="510.50"></text></g><g><title>_deliver_cancellation (anyio/_backends/_asyncio.py:370) (7 samples, 0.36%)</title><rect x="40.6622%" y="516" width="0.3621%" height="15" fill="rgb(246,81,33)" fg:x="786" fg:w="7"/><text x="40.9122%" y="526.50"></text></g><g><title>_asyncio_get_running_loop (_asynciomodule.c.h:728) (7 samples, 0.36%)</title><rect x="40.6622%" y="532" width="0.3621%" height="15" fill="rgb(252,33,42)" fg:x="786" fg:w="7"/><text x="40.9122%" y="542.50"></text></g><g><title>_asyncio_get_running_loop_impl (_asynciomodule.c:3118) (7 samples, 0.36%)</title><rect x="40.6622%" y="548" width="0.3621%" height="15" fill="rgb(209,212,41)" fg:x="786" fg:w="7"/><text x="40.9122%" y="558.50"></text></g><g><title>get_running_loop (_asynciomodule.c:267) (7 samples, 0.36%)</title><rect x="40.6622%" y="564" width="0.3621%" height="15" fill="rgb(207,154,6)" fg:x="786" fg:w="7"/><text x="40.9122%" y="574.50"></text></g><g><title>getpid (libc-2.31.so) (7 samples, 0.36%)</title><rect x="40.6622%" y="580" width="0.3621%" height="15" fill="rgb(223,64,47)" fg:x="786" fg:w="7"/><text x="40.9122%" y="590.50"></text></g><g><title>is_disconnected (starlette/requests.py:300) (14 samples, 0.72%)</title><rect x="40.3518%" y="484" width="0.7243%" height="15" fill="rgb(211,161,38)" fg:x="780" fg:w="14"/><text x="40.6018%" y="494.50"></text></g><g><title>receive (uvicorn/protocols/http/httptools_impl.py:581) (2 samples, 0.10%)</title><rect x="41.0760%" y="500" width="0.1035%" height="15" fill="rgb(219,138,40)" fg:x="794" fg:w="2"/><text x="41.3260%" y="510.50"></text></g><g><title>wrap (starlette/responses.py:273) (64 samples, 3.31%)</title><rect x="38.4377%" y="436" width="3.3109%" height="15" fill="rgb(241,228,46)" fg:x="743" fg:w="64"/><text x="38.6877%" y="446.50">wra..</text></g><g><title>stream_response (starlette/responses.py:262) (64 samples, 3.31%)</title><rect x="38.4377%" y="452" width="3.3109%" height="15" fill="rgb(223,209,38)" fg:x="743" fg:w="64"/><text x="38.6877%" y="462.50">str..</text></g><g><title>completion_stream_generator (vllm/entrypoints/openai/serving_completion.py:222) (59 samples, 3.05%)</title><rect x="38.6963%" y="468" width="3.0523%" height="15" fill="rgb(236,164,45)" fg:x="748" fg:w="59"/><text x="38.9463%" y="478.50">com..</text></g><g><title>is_disconnected (starlette/requests.py:301) (13 samples, 0.67%)</title><rect x="41.0760%" y="484" width="0.6725%" height="15" fill="rgb(231,15,5)" fg:x="794" fg:w="13"/><text x="41.3260%" y="494.50"></text></g><g><title>receive (uvicorn/protocols/http/httptools_impl.py:587) (10 samples, 0.52%)</title><rect x="41.2312%" y="500" width="0.5173%" height="15" fill="rgb(252,35,15)" fg:x="797" fg:w="10"/><text x="41.4812%" y="510.50"></text></g><g><title>wait (asyncio/locks.py:211) (9 samples, 0.47%)</title><rect x="41.2830%" y="516" width="0.4656%" height="15" fill="rgb(248,181,18)" fg:x="798" fg:w="9"/><text x="41.5330%" y="526.50"></text></g><g><title>_get_loop (asyncio/mixins.py:23) (9 samples, 0.47%)</title><rect x="41.2830%" y="532" width="0.4656%" height="15" fill="rgb(233,39,42)" fg:x="798" fg:w="9"/><text x="41.5330%" y="542.50"></text></g><g><title>_asyncio__get_running_loop (_asynciomodule.c.h:632) (8 samples, 0.41%)</title><rect x="41.3347%" y="548" width="0.4139%" height="15" fill="rgb(238,110,33)" fg:x="799" fg:w="8"/><text x="41.5847%" y="558.50"></text></g><g><title>_asyncio__get_running_loop_impl (_asynciomodule.c:3037) (8 samples, 0.41%)</title><rect x="41.3347%" y="564" width="0.4139%" height="15" fill="rgb(233,195,10)" fg:x="799" fg:w="8"/><text x="41.5847%" y="574.50"></text></g><g><title>get_running_loop (_asynciomodule.c:267) (8 samples, 0.41%)</title><rect x="41.3347%" y="580" width="0.4139%" height="15" fill="rgb(254,105,3)" fg:x="799" fg:w="8"/><text x="41.5847%" y="590.50"></text></g><g><title>getpid (libc-2.31.so) (8 samples, 0.41%)</title><rect x="41.3347%" y="596" width="0.4139%" height="15" fill="rgb(221,225,9)" fg:x="799" fg:w="8"/><text x="41.5847%" y="606.50"></text></g><g><title>task_step_impl (_asynciomodule.c:2653) (509 samples, 26.33%)</title><rect x="15.5199%" y="420" width="26.3321%" height="15" fill="rgb(224,227,45)" fg:x="300" fg:w="509"/><text x="15.7699%" y="430.50">task_step_impl (_asynciomodule.c:2653)</text></g><g><title>wrap (starlette/responses.py:274) (2 samples, 0.10%)</title><rect x="41.7486%" y="436" width="0.1035%" height="15" fill="rgb(229,198,43)" fg:x="807" fg:w="2"/><text x="41.9986%" y="446.50"></text></g><g><title>task_step (_asynciomodule.c:2950) (510 samples, 26.38%)</title><rect x="15.5199%" y="404" width="26.3839%" height="15" fill="rgb(206,209,35)" fg:x="300" fg:w="510"/><text x="15.7699%" y="414.50">task_step (_asynciomodule.c:2950)</text></g><g><title>task_wakeup (_asynciomodule.c:3011) (2 samples, 0.10%)</title><rect x="41.9038%" y="404" width="0.1035%" height="15" fill="rgb(245,195,53)" fg:x="810" fg:w="2"/><text x="42.1538%" y="414.50"></text></g><g><title>task_step (_asynciomodule.c:2950) (2 samples, 0.10%)</title><rect x="41.9038%" y="420" width="0.1035%" height="15" fill="rgb(240,92,26)" fg:x="810" fg:w="2"/><text x="42.1538%" y="430.50"></text></g><g><title>task_step_impl (_asynciomodule.c:2656) (2 samples, 0.10%)</title><rect x="41.9038%" y="436" width="0.1035%" height="15" fill="rgb(207,40,23)" fg:x="810" fg:w="2"/><text x="42.1538%" y="446.50"></text></g><g><title>Handle__run (loop.c:60747) (515 samples, 26.64%)</title><rect x="15.4682%" y="388" width="26.6425%" height="15" fill="rgb(223,111,35)" fg:x="299" fg:w="515"/><text x="15.7182%" y="398.50">Handle__run (loop.c:60747)</text></g><g><title>task_wakeup (_asynciomodule.c:3016) (2 samples, 0.10%)</title><rect x="42.0072%" y="404" width="0.1035%" height="15" fill="rgb(229,147,28)" fg:x="812" fg:w="2"/><text x="42.2572%" y="414.50"></text></g><g><title>Loop__on_idle (loop.c:14597) (812 samples, 42.01%)</title><rect x="0.1552%" y="372" width="42.0072%" height="15" fill="rgb(211,29,28)" fg:x="3" fg:w="812"/><text x="0.4052%" y="382.50">Loop__on_idle (loop.c:14597)</text></g><g><title>Loop__on_idle (loop.c:14778) (55 samples, 2.85%)</title><rect x="42.1624%" y="372" width="2.8453%" height="15" fill="rgb(228,72,33)" fg:x="815" fg:w="55"/><text x="42.4124%" y="382.50">Lo..</text></g><g><title>Loop__exec_queued_writes (loop.c:17021) (55 samples, 2.85%)</title><rect x="42.1624%" y="388" width="2.8453%" height="15" fill="rgb(205,214,31)" fg:x="815" fg:w="55"/><text x="42.4124%" y="398.50">Lo..</text></g><g><title>UVStream__exec_write (loop.c:93679) (55 samples, 2.85%)</title><rect x="42.1624%" y="404" width="2.8453%" height="15" fill="rgb(224,111,15)" fg:x="815" fg:w="55"/><text x="42.4124%" y="414.50">UV..</text></g><g><title>UVStream__try_write (loop.c:92780) (55 samples, 2.85%)</title><rect x="42.1624%" y="420" width="2.8453%" height="15" fill="rgb(253,21,26)" fg:x="815" fg:w="55"/><text x="42.4124%" y="430.50">UV..</text></g><g><title>write (libpthread-2.31.so) (55 samples, 2.85%)</title><rect x="42.1624%" y="436" width="2.8453%" height="15" fill="rgb(245,139,43)" fg:x="815" fg:w="55"/><text x="42.4124%" y="446.50">wr..</text></g><g><title>uv_run (core.c:439) (873 samples, 45.16%)</title><rect x="0.0000%" y="292" width="45.1630%" height="15" fill="rgb(252,170,7)" fg:x="0" fg:w="873"/><text x="0.2500%" y="302.50">uv_run (core.c:439)</text></g><g><title>uv__run_idle (loop-watcher.c:68) (873 samples, 45.16%)</title><rect x="0.0000%" y="308" width="45.1630%" height="15" fill="rgb(231,118,14)" fg:x="0" fg:w="873"/><text x="0.2500%" y="318.50">uv__run_idle (loop-watcher.c:68)</text></g><g><title>uv__queue_empty (queue.h:33) (873 samples, 45.16%)</title><rect x="0.0000%" y="324" width="45.1630%" height="15" fill="rgb(238,83,0)" fg:x="0" fg:w="873"/><text x="0.2500%" y="334.50">uv__queue_empty (queue.h:33)</text></g><g><title>loop_cb_idle_callback (loop.c:79836) (873 samples, 45.16%)</title><rect x="0.0000%" y="340" width="45.1630%" height="15" fill="rgb(221,39,39)" fg:x="0" fg:w="873"/><text x="0.2500%" y="350.50">loop_cb_idle_callback (loop.c:79836)</text></g><g><title>Handle__run (loop.c:60773) (873 samples, 45.16%)</title><rect x="0.0000%" y="356" width="45.1630%" height="15" fill="rgb(222,119,46)" fg:x="0" fg:w="873"/><text x="0.2500%" y="366.50">Handle__run (loop.c:60773)</text></g><g><title>Loop__on_idle (loop.c:14891) (2 samples, 0.10%)</title><rect x="45.0595%" y="372" width="0.1035%" height="15" fill="rgb(222,165,49)" fg:x="871" fg:w="2"/><text x="45.3095%" y="382.50"></text></g><g><title>_Py_XDECREF (object.h:567) (2 samples, 0.10%)</title><rect x="45.0595%" y="388" width="0.1035%" height="15" fill="rgb(219,113,52)" fg:x="871" fg:w="2"/><text x="45.3095%" y="398.50"></text></g><g><title>_Py_DECREF (object.h:500) (2 samples, 0.10%)</title><rect x="45.0595%" y="404" width="0.1035%" height="15" fill="rgb(214,7,15)" fg:x="871" fg:w="2"/><text x="45.3095%" y="414.50"></text></g><g><title>run (asyncio/runners.py:44) (875 samples, 45.27%)</title><rect x="0.0000%" y="148" width="45.2664%" height="15" fill="rgb(235,32,4)" fg:x="0" fg:w="875"/><text x="0.2500%" y="158.50">run (asyncio/runners.py:44)</text></g><g><title>run_until_complete (loop.c:29633) (875 samples, 45.27%)</title><rect x="0.0000%" y="164" width="45.2664%" height="15" fill="rgb(238,90,54)" fg:x="0" fg:w="875"/><text x="0.2500%" y="174.50">run_until_complete (loop.c:29633)</text></g><g><title>run_until_complete (loop.c:30035) (875 samples, 45.27%)</title><rect x="0.0000%" y="180" width="45.2664%" height="15" fill="rgb(213,208,19)" fg:x="0" fg:w="875"/><text x="0.2500%" y="190.50">run_until_complete (loop.c:30035)</text></g><g><title>__Pyx_PyObject_CallNoArg (loop.c:171493) (875 samples, 45.27%)</title><rect x="0.0000%" y="196" width="45.2664%" height="15" fill="rgb(233,156,4)" fg:x="0" fg:w="875"/><text x="0.2500%" y="206.50">__Pyx_PyObject_CallNoArg (loop.c:171493)</text></g><g><title>__Pyx_PyObject_CallMethO (loop.c:171467) (875 samples, 45.27%)</title><rect x="0.0000%" y="212" width="45.2664%" height="15" fill="rgb(207,194,5)" fg:x="0" fg:w="875"/><text x="0.2500%" y="222.50">__Pyx_PyObject_CallMethO (loop.c:171467)</text></g><g><title>run_forever (loop.c:27987) (875 samples, 45.27%)</title><rect x="0.0000%" y="228" width="45.2664%" height="15" fill="rgb(206,111,30)" fg:x="0" fg:w="875"/><text x="0.2500%" y="238.50">run_forever (loop.c:27987)</text></g><g><title>run_forever (loop.c:28166) (875 samples, 45.27%)</title><rect x="0.0000%" y="244" width="45.2664%" height="15" fill="rgb(243,70,54)" fg:x="0" fg:w="875"/><text x="0.2500%" y="254.50">run_forever (loop.c:28166)</text></g><g><title>Loop__run (loop.c:15471) (875 samples, 45.27%)</title><rect x="0.0000%" y="260" width="45.2664%" height="15" fill="rgb(242,28,8)" fg:x="0" fg:w="875"/><text x="0.2500%" y="270.50">Loop__run (loop.c:15471)</text></g><g><title>Loop___run (loop.c:15106) (875 samples, 45.27%)</title><rect x="0.0000%" y="276" width="45.2664%" height="15" fill="rgb(219,106,18)" fg:x="0" fg:w="875"/><text x="0.2500%" y="286.50">Loop___run (loop.c:15106)</text></g><g><title>uv_run (core.c:451) (2 samples, 0.10%)</title><rect x="45.1630%" y="292" width="0.1035%" height="15" fill="rgb(244,222,10)" fg:x="873" fg:w="2"/><text x="45.4130%" y="302.50"></text></g><g><title>uv__io_poll (linux.c:1479) (2 samples, 0.10%)</title><rect x="45.1630%" y="308" width="0.1035%" height="15" fill="rgb(236,179,52)" fg:x="873" fg:w="2"/><text x="45.4130%" y="318.50"></text></g><g><title>uv__stream_io (stream.c:1205) (2 samples, 0.10%)</title><rect x="45.1630%" y="324" width="0.1035%" height="15" fill="rgb(213,23,39)" fg:x="873" fg:w="2"/><text x="45.4130%" y="334.50"></text></g><g><title>uv__read (stream.c:1146) (2 samples, 0.10%)</title><rect x="45.1630%" y="340" width="0.1035%" height="15" fill="rgb(238,48,10)" fg:x="873" fg:w="2"/><text x="45.4130%" y="350.50"></text></g><g><title>loop___uv_stream_on_read (loop.c:98506) (2 samples, 0.10%)</title><rect x="45.1630%" y="356" width="0.1035%" height="15" fill="rgb(251,196,23)" fg:x="873" fg:w="2"/><text x="45.4130%" y="366.50"></text></g><g><title>loop___uv_stream_on_read_impl (loop.c:97876) (2 samples, 0.10%)</title><rect x="45.1630%" y="372" width="0.1035%" height="15" fill="rgb(250,152,24)" fg:x="873" fg:w="2"/><text x="45.4130%" y="382.50"></text></g><g><title>loop_run_in_context1 (loop.c:10098) (2 samples, 0.10%)</title><rect x="45.1630%" y="388" width="0.1035%" height="15" fill="rgb(209,150,17)" fg:x="873" fg:w="2"/><text x="45.4130%" y="398.50"></text></g><g><title>data_received (uvicorn/protocols/http/httptools_impl.py:186) (2 samples, 0.10%)</title><rect x="45.1630%" y="404" width="0.1035%" height="15" fill="rgb(234,202,34)" fg:x="873" fg:w="2"/><text x="45.4130%" y="414.50"></text></g><g><title>feed_data (parser.c:3357) (2 samples, 0.10%)</title><rect x="45.1630%" y="420" width="0.1035%" height="15" fill="rgb(253,148,53)" fg:x="873" fg:w="2"/><text x="45.4130%" y="430.50"></text></g><g><title>feed_data (parser.c:3513) (2 samples, 0.10%)</title><rect x="45.1630%" y="436" width="0.1035%" height="15" fill="rgb(218,129,16)" fg:x="873" fg:w="2"/><text x="45.4130%" y="446.50"></text></g><g><title>llhttp__internal_execute (llhttp.c:18661) (2 samples, 0.10%)</title><rect x="45.1630%" y="452" width="0.1035%" height="15" fill="rgb(216,85,19)" fg:x="873" fg:w="2"/><text x="45.4130%" y="462.50"></text></g><g><title>llhttp__internal__run (llhttp.c:17226) (2 samples, 0.10%)</title><rect x="45.1630%" y="468" width="0.1035%" height="15" fill="rgb(235,228,7)" fg:x="873" fg:w="2"/><text x="45.4130%" y="478.50"></text></g><g><title>llhttp__on_header_field (api.c:354) (2 samples, 0.10%)</title><rect x="45.1630%" y="484" width="0.1035%" height="15" fill="rgb(245,175,0)" fg:x="873" fg:w="2"/><text x="45.4130%" y="494.50"></text></g><g><title>parser_cb_on_header_field (parser.c:5310) (2 samples, 0.10%)</title><rect x="45.1630%" y="500" width="0.1035%" height="15" fill="rgb(208,168,36)" fg:x="873" fg:w="2"/><text x="45.4130%" y="510.50"></text></g><g><title>Handle__run (loop.c:60720) (2 samples, 0.10%)</title><rect x="45.2664%" y="372" width="0.1035%" height="15" fill="rgb(246,171,24)" fg:x="875" fg:w="2"/><text x="45.5164%" y="382.50"></text></g><g><title>_run_module_as_main (runpy.py:196) (879 samples, 45.47%)</title><rect x="0.0000%" y="68" width="45.4734%" height="15" fill="rgb(215,142,24)" fg:x="0" fg:w="879"/><text x="0.2500%" y="78.50">_run_module_as_main (runpy.py:196)</text></g><g><title>_run_code (runpy.py:86) (879 samples, 45.47%)</title><rect x="0.0000%" y="84" width="45.4734%" height="15" fill="rgb(250,187,7)" fg:x="0" fg:w="879"/><text x="0.2500%" y="94.50">_run_code (runpy.py:86)</text></g><g><title>&lt;module&gt; (vllm/entrypoints/openai/api_server.py:166) (879 samples, 45.47%)</title><rect x="0.0000%" y="100" width="45.4734%" height="15" fill="rgb(228,66,33)" fg:x="0" fg:w="879"/><text x="0.2500%" y="110.50">&lt;module&gt; (vllm/entrypoints/openai/api_server.py:166)</text></g><g><title>run (uvicorn/main.py:587) (879 samples, 45.47%)</title><rect x="0.0000%" y="116" width="45.4734%" height="15" fill="rgb(234,215,21)" fg:x="0" fg:w="879"/><text x="0.2500%" y="126.50">run (uvicorn/main.py:587)</text></g><g><title>run (uvicorn/server.py:61) (879 samples, 45.47%)</title><rect x="0.0000%" y="132" width="45.4734%" height="15" fill="rgb(222,191,20)" fg:x="0" fg:w="879"/><text x="0.2500%" y="142.50">run (uvicorn/server.py:61)</text></g><g><title>run_until_complete (loop.c:29633) (4 samples, 0.21%)</title><rect x="45.2664%" y="148" width="0.2069%" height="15" fill="rgb(245,79,54)" fg:x="875" fg:w="4"/><text x="45.5164%" y="158.50"></text></g><g><title>run_until_complete (loop.c:30035) (4 samples, 0.21%)</title><rect x="45.2664%" y="164" width="0.2069%" height="15" fill="rgb(240,10,37)" fg:x="875" fg:w="4"/><text x="45.5164%" y="174.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (loop.c:171493) (4 samples, 0.21%)</title><rect x="45.2664%" y="180" width="0.2069%" height="15" fill="rgb(214,192,32)" fg:x="875" fg:w="4"/><text x="45.5164%" y="190.50"></text></g><g><title>__Pyx_PyObject_CallMethO (loop.c:171467) (4 samples, 0.21%)</title><rect x="45.2664%" y="196" width="0.2069%" height="15" fill="rgb(209,36,54)" fg:x="875" fg:w="4"/><text x="45.5164%" y="206.50"></text></g><g><title>run_forever (loop.c:27987) (4 samples, 0.21%)</title><rect x="45.2664%" y="212" width="0.2069%" height="15" fill="rgb(220,10,11)" fg:x="875" fg:w="4"/><text x="45.5164%" y="222.50"></text></g><g><title>run_forever (loop.c:28166) (4 samples, 0.21%)</title><rect x="45.2664%" y="228" width="0.2069%" height="15" fill="rgb(221,106,17)" fg:x="875" fg:w="4"/><text x="45.5164%" y="238.50"></text></g><g><title>Loop__run (loop.c:15471) (4 samples, 0.21%)</title><rect x="45.2664%" y="244" width="0.2069%" height="15" fill="rgb(251,142,44)" fg:x="875" fg:w="4"/><text x="45.5164%" y="254.50"></text></g><g><title>Loop___run (loop.c:15106) (4 samples, 0.21%)</title><rect x="45.2664%" y="260" width="0.2069%" height="15" fill="rgb(238,13,15)" fg:x="875" fg:w="4"/><text x="45.5164%" y="270.50"></text></g><g><title>uv_run (core.c:439) (4 samples, 0.21%)</title><rect x="45.2664%" y="276" width="0.2069%" height="15" fill="rgb(208,107,27)" fg:x="875" fg:w="4"/><text x="45.5164%" y="286.50"></text></g><g><title>uv__run_idle (loop-watcher.c:68) (4 samples, 0.21%)</title><rect x="45.2664%" y="292" width="0.2069%" height="15" fill="rgb(205,136,37)" fg:x="875" fg:w="4"/><text x="45.5164%" y="302.50"></text></g><g><title>uv__queue_empty (queue.h:33) (4 samples, 0.21%)</title><rect x="45.2664%" y="308" width="0.2069%" height="15" fill="rgb(250,205,27)" fg:x="875" fg:w="4"/><text x="45.5164%" y="318.50"></text></g><g><title>loop_cb_idle_callback (loop.c:79836) (4 samples, 0.21%)</title><rect x="45.2664%" y="324" width="0.2069%" height="15" fill="rgb(210,80,43)" fg:x="875" fg:w="4"/><text x="45.5164%" y="334.50"></text></g><g><title>Handle__run (loop.c:60773) (4 samples, 0.21%)</title><rect x="45.2664%" y="340" width="0.2069%" height="15" fill="rgb(247,160,36)" fg:x="875" fg:w="4"/><text x="45.5164%" y="350.50"></text></g><g><title>Loop__on_idle (loop.c:14597) (4 samples, 0.21%)</title><rect x="45.2664%" y="356" width="0.2069%" height="15" fill="rgb(234,13,49)" fg:x="875" fg:w="4"/><text x="45.5164%" y="366.50"></text></g><g><title>Handle__run (loop.c:60747) (2 samples, 0.10%)</title><rect x="45.3699%" y="372" width="0.1035%" height="15" fill="rgb(234,122,0)" fg:x="877" fg:w="2"/><text x="45.6199%" y="382.50"></text></g><g><title>task_step (_asynciomodule.c:2950) (2 samples, 0.10%)</title><rect x="45.3699%" y="388" width="0.1035%" height="15" fill="rgb(207,146,38)" fg:x="877" fg:w="2"/><text x="45.6199%" y="398.50"></text></g><g><title>task_step_impl (_asynciomodule.c:2653) (2 samples, 0.10%)</title><rect x="45.3699%" y="404" width="0.1035%" height="15" fill="rgb(207,177,25)" fg:x="877" fg:w="2"/><text x="45.6199%" y="414.50"></text></g><g><title>run (asyncio/runners.py:44) (2 samples, 0.10%)</title><rect x="45.3699%" y="420" width="0.1035%" height="15" fill="rgb(211,178,42)" fg:x="877" fg:w="2"/><text x="45.6199%" y="430.50"></text></g><g><title>prepare_input_tensors (vllm/worker/model_runner.py:535) (3 samples, 0.16%)</title><rect x="45.4734%" y="244" width="0.1552%" height="15" fill="rgb(230,69,54)" fg:x="879" fg:w="3"/><text x="45.7234%" y="254.50"></text></g><g><title>prepare_input_tensors (vllm/worker/model_runner.py:539) (2 samples, 0.10%)</title><rect x="45.6286%" y="244" width="0.1035%" height="15" fill="rgb(214,135,41)" fg:x="882" fg:w="2"/><text x="45.8786%" y="254.50"></text></g><g><title>_prepare_sample (vllm/worker/model_runner.py:499) (3 samples, 0.16%)</title><rect x="45.9390%" y="260" width="0.1552%" height="15" fill="rgb(237,67,25)" fg:x="888" fg:w="3"/><text x="46.1890%" y="270.50"></text></g><g><title>async_tensor_h2d (vllm/utils.py:414) (2 samples, 0.10%)</title><rect x="45.9907%" y="276" width="0.1035%" height="15" fill="rgb(222,189,50)" fg:x="889" fg:w="2"/><text x="46.2407%" y="286.50"></text></g><g><title>&lt;dictcomp&gt; (vllm/worker/model_runner.py:500) (4 samples, 0.21%)</title><rect x="46.0942%" y="276" width="0.2069%" height="15" fill="rgb(245,148,34)" fg:x="891" fg:w="4"/><text x="46.3442%" y="286.50"></text></g><g><title>maybe_expand_dim (vllm/utils.py:422) (3 samples, 0.16%)</title><rect x="46.1459%" y="292" width="0.1552%" height="15" fill="rgb(222,29,6)" fg:x="892" fg:w="3"/><text x="46.3959%" y="302.50"></text></g><g><title>torch::autograd::THPVariable_view (libtorch_python.so) (2 samples, 0.10%)</title><rect x="46.1976%" y="308" width="0.1035%" height="15" fill="rgb(221,189,43)" fg:x="893" fg:w="2"/><text x="46.4476%" y="318.50"></text></g><g><title>_prepare_sample (vllm/worker/model_runner.py:508) (6 samples, 0.31%)</title><rect x="46.0942%" y="260" width="0.3104%" height="15" fill="rgb(207,36,27)" fg:x="891" fg:w="6"/><text x="46.3442%" y="270.50"></text></g><g><title>&lt;dictcomp&gt; (vllm/worker/model_runner.py:501) (2 samples, 0.10%)</title><rect x="46.3011%" y="276" width="0.1035%" height="15" fill="rgb(217,90,24)" fg:x="895" fg:w="2"/><text x="46.5511%" y="286.50"></text></g><g><title>async_tensor_h2d (vllm/utils.py:413) (2 samples, 0.10%)</title><rect x="46.3011%" y="292" width="0.1035%" height="15" fill="rgb(224,66,35)" fg:x="895" fg:w="2"/><text x="46.5511%" y="302.50"></text></g><g><title>torch::autograd::THPVariable_tensor (libtorch_python.so) (2 samples, 0.10%)</title><rect x="46.3011%" y="308" width="0.1035%" height="15" fill="rgb(221,13,50)" fg:x="895" fg:w="2"/><text x="46.5511%" y="318.50"></text></g><g><title>prepare_input_tensors (vllm/worker/model_runner.py:542) (15 samples, 0.78%)</title><rect x="45.7320%" y="244" width="0.7760%" height="15" fill="rgb(236,68,49)" fg:x="884" fg:w="15"/><text x="45.9820%" y="254.50"></text></g><g><title>prepare_input_tensors (vllm/worker/model_runner.py:563) (2 samples, 0.10%)</title><rect x="46.5080%" y="244" width="0.1035%" height="15" fill="rgb(229,146,28)" fg:x="899" fg:w="2"/><text x="46.7580%" y="254.50"></text></g><g><title>asdict_zerocopy (vllm/model_executor/input_metadata.py:98) (2 samples, 0.10%)</title><rect x="46.5080%" y="260" width="0.1035%" height="15" fill="rgb(225,31,38)" fg:x="899" fg:w="2"/><text x="46.7580%" y="270.50"></text></g><g><title>execute_model (vllm/worker/model_runner.py:595) (23 samples, 1.19%)</title><rect x="45.4734%" y="228" width="1.1899%" height="15" fill="rgb(250,208,3)" fg:x="879" fg:w="23"/><text x="45.7234%" y="238.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:247) (3 samples, 0.16%)</title><rect x="46.7150%" y="372" width="0.1552%" height="15" fill="rgb(246,54,23)" fg:x="903" fg:w="3"/><text x="46.9650%" y="382.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (3 samples, 0.16%)</title><rect x="46.7150%" y="388" width="0.1552%" height="15" fill="rgb(243,76,11)" fg:x="903" fg:w="3"/><text x="46.9650%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (3 samples, 0.16%)</title><rect x="46.7150%" y="404" width="0.1552%" height="15" fill="rgb(245,21,50)" fg:x="903" fg:w="3"/><text x="46.9650%" y="414.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:248) (2 samples, 0.10%)</title><rect x="46.8702%" y="372" width="0.1035%" height="15" fill="rgb(228,9,43)" fg:x="906" fg:w="2"/><text x="47.1202%" y="382.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (2 samples, 0.10%)</title><rect x="46.8702%" y="388" width="0.1035%" height="15" fill="rgb(208,100,47)" fg:x="906" fg:w="2"/><text x="47.1202%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (2 samples, 0.10%)</title><rect x="46.8702%" y="404" width="0.1035%" height="15" fill="rgb(232,26,8)" fg:x="906" fg:w="2"/><text x="47.1202%" y="414.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:58) (2 samples, 0.10%)</title><rect x="46.8702%" y="420" width="0.1035%" height="15" fill="rgb(216,166,38)" fg:x="906" fg:w="2"/><text x="47.1202%" y="430.50"></text></g><g><title>forward (torch/nn/modules/sparse.py:162) (2 samples, 0.10%)</title><rect x="46.8702%" y="436" width="0.1035%" height="15" fill="rgb(251,202,51)" fg:x="906" fg:w="2"/><text x="47.1202%" y="446.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:254) (5 samples, 0.26%)</title><rect x="47.0771%" y="372" width="0.2587%" height="15" fill="rgb(254,216,34)" fg:x="910" fg:w="5"/><text x="47.3271%" y="382.50"></text></g><g><title>__getitem__ (torch/nn/modules/container.py:293) (2 samples, 0.10%)</title><rect x="47.2323%" y="388" width="0.1035%" height="15" fill="rgb(251,32,27)" fg:x="913" fg:w="2"/><text x="47.4823%" y="398.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:196) (6 samples, 0.31%)</title><rect x="47.6461%" y="468" width="0.3104%" height="15" fill="rgb(208,127,28)" fg:x="921" fg:w="6"/><text x="47.8961%" y="478.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2543) (5 samples, 0.26%)</title><rect x="47.6979%" y="484" width="0.2587%" height="15" fill="rgb(224,137,22)" fg:x="922" fg:w="5"/><text x="47.9479%" y="494.50"></text></g><g><title>torch::autograd::THPVariable_layer_norm (libtorch_python.so) (3 samples, 0.16%)</title><rect x="47.8013%" y="500" width="0.1552%" height="15" fill="rgb(254,70,32)" fg:x="924" fg:w="3"/><text x="48.0513%" y="510.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:162) (9 samples, 0.47%)</title><rect x="47.5427%" y="420" width="0.4656%" height="15" fill="rgb(229,75,37)" fg:x="919" fg:w="9"/><text x="47.7927%" y="430.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (8 samples, 0.41%)</title><rect x="47.5944%" y="436" width="0.4139%" height="15" fill="rgb(252,64,23)" fg:x="920" fg:w="8"/><text x="47.8444%" y="446.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (8 samples, 0.41%)</title><rect x="47.5944%" y="452" width="0.4139%" height="15" fill="rgb(232,162,48)" fg:x="920" fg:w="8"/><text x="47.8444%" y="462.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:103) (6 samples, 0.31%)</title><rect x="48.3187%" y="468" width="0.3104%" height="15" fill="rgb(246,160,12)" fg:x="934" fg:w="6"/><text x="48.5687%" y="478.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (5 samples, 0.26%)</title><rect x="48.3704%" y="484" width="0.2587%" height="15" fill="rgb(247,166,0)" fg:x="935" fg:w="5"/><text x="48.6204%" y="494.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (2 samples, 0.10%)</title><rect x="48.5256%" y="500" width="0.1035%" height="15" fill="rgb(249,219,21)" fg:x="938" fg:w="2"/><text x="48.7756%" y="510.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:104) (5 samples, 0.26%)</title><rect x="48.6291%" y="468" width="0.2587%" height="15" fill="rgb(205,209,3)" fg:x="940" fg:w="5"/><text x="48.8791%" y="478.50"></text></g><g><title>torch::autograd::THPVariable_chunk (libtorch_python.so) (2 samples, 0.10%)</title><rect x="48.7843%" y="484" width="0.1035%" height="15" fill="rgb(243,44,1)" fg:x="943" fg:w="2"/><text x="49.0343%" y="494.50"></text></g><g><title>forward (vllm/model_executor/layers/attention/backends/xformers.py:102) (2 samples, 0.10%)</title><rect x="49.0947%" y="532" width="0.1035%" height="15" fill="rgb(206,159,16)" fg:x="949" fg:w="2"/><text x="49.3447%" y="542.50"></text></g><g><title>_run_memory_efficient_xformer_forward (vllm/model_executor/layers/attention/backends/xformers.py:196) (2 samples, 0.10%)</title><rect x="49.3016%" y="548" width="0.1035%" height="15" fill="rgb(244,77,30)" fg:x="953" fg:w="2"/><text x="49.5516%" y="558.50"></text></g><g><title>from_seqlens (xformers/ops/fmha/attn_bias.py:565) (2 samples, 0.10%)</title><rect x="49.3016%" y="564" width="0.1035%" height="15" fill="rgb(218,69,12)" fg:x="953" fg:w="2"/><text x="49.5516%" y="574.50"></text></g><g><title>validate_inputs (xformers/ops/fmha/common.py:116) (3 samples, 0.16%)</title><rect x="49.6637%" y="596" width="0.1552%" height="15" fill="rgb(212,87,7)" fg:x="960" fg:w="3"/><text x="49.9137%" y="606.50"></text></g><g><title>&lt;genexpr&gt; (xformers/ops/fmha/common.py:116) (2 samples, 0.10%)</title><rect x="49.7155%" y="612" width="0.1035%" height="15" fill="rgb(245,114,25)" fg:x="961" fg:w="2"/><text x="49.9655%" y="622.50"></text></g><g><title>_memory_efficient_attention_forward (xformers/ops/fmha/__init__.py:334) (7 samples, 0.36%)</title><rect x="49.6120%" y="580" width="0.3621%" height="15" fill="rgb(210,61,42)" fg:x="959" fg:w="7"/><text x="49.8620%" y="590.50"></text></g><g><title>std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (sstream.tcc:129) (2 samples, 0.10%)</title><rect x="50.2328%" y="740" width="0.1035%" height="15" fill="rgb(211,52,33)" fg:x="971" fg:w="2"/><text x="50.4828%" y="750.50"></text></g><g><title>std::max&lt;unsigned long&gt; (stl_algobase.h:262) (2 samples, 0.10%)</title><rect x="50.2328%" y="756" width="0.1035%" height="15" fill="rgb(234,58,33)" fg:x="971" fg:w="2"/><text x="50.4828%" y="766.50"></text></g><g><title>not_supported_reasons (xformers/ops/fmha/common.py:297) (5 samples, 0.26%)</title><rect x="50.1293%" y="644" width="0.2587%" height="15" fill="rgb(220,115,36)" fg:x="969" fg:w="5"/><text x="50.3793%" y="654.50"></text></g><g><title>THPDevice_type (libtorch_python.so) (5 samples, 0.26%)</title><rect x="50.1293%" y="660" width="0.2587%" height="15" fill="rgb(243,153,54)" fg:x="969" fg:w="5"/><text x="50.3793%" y="670.50"></text></g><g><title>c10::operator&lt;&lt; (libc10.so) (3 samples, 0.16%)</title><rect x="50.2328%" y="676" width="0.1552%" height="15" fill="rgb(251,47,18)" fg:x="971" fg:w="3"/><text x="50.4828%" y="686.50"></text></g><g><title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (ostream_insert.h:105) (3 samples, 0.16%)</title><rect x="50.2328%" y="692" width="0.1552%" height="15" fill="rgb(242,102,42)" fg:x="971" fg:w="3"/><text x="50.4828%" y="702.50"></text></g><g><title>std::__ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (ostream_insert.h:54) (3 samples, 0.16%)</title><rect x="50.2328%" y="708" width="0.1552%" height="15" fill="rgb(234,31,38)" fg:x="971" fg:w="3"/><text x="50.4828%" y="718.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (streambuf.tcc:99) (3 samples, 0.16%)</title><rect x="50.2328%" y="724" width="0.1552%" height="15" fill="rgb(221,117,51)" fg:x="971" fg:w="3"/><text x="50.4828%" y="734.50"></text></g><g><title>not_supported_reasons (xformers/ops/fmha/common.py:298) (2 samples, 0.10%)</title><rect x="50.3880%" y="644" width="0.1035%" height="15" fill="rgb(212,20,18)" fg:x="974" fg:w="2"/><text x="50.6380%" y="654.50"></text></g><g><title>_get_device_index (torch/cuda/_utils.py:36) (3 samples, 0.16%)</title><rect x="50.7501%" y="692" width="0.1552%" height="15" fill="rgb(245,133,36)" fg:x="981" fg:w="3"/><text x="51.0001%" y="702.50"></text></g><g><title>get_device_properties (torch/cuda/__init__.py:450) (8 samples, 0.41%)</title><rect x="50.5949%" y="676" width="0.4139%" height="15" fill="rgb(212,6,19)" fg:x="978" fg:w="8"/><text x="50.8449%" y="686.50"></text></g><g><title>_get_device_index (torch/cuda/_utils.py:39) (2 samples, 0.10%)</title><rect x="50.9053%" y="692" width="0.1035%" height="15" fill="rgb(218,1,36)" fg:x="984" fg:w="2"/><text x="51.1553%" y="702.50"></text></g><g><title>get_device_properties (torch/cuda/__init__.py:451) (3 samples, 0.16%)</title><rect x="51.0088%" y="676" width="0.1552%" height="15" fill="rgb(246,84,54)" fg:x="986" fg:w="3"/><text x="51.2588%" y="686.50"></text></g><g><title>not_supported_reasons (xformers/ops/fmha/common.py:304) (13 samples, 0.67%)</title><rect x="50.5949%" y="644" width="0.6725%" height="15" fill="rgb(242,110,6)" fg:x="978" fg:w="13"/><text x="50.8449%" y="654.50"></text></g><g><title>get_device_capability (torch/cuda/__init__.py:435) (13 samples, 0.67%)</title><rect x="50.5949%" y="660" width="0.6725%" height="15" fill="rgb(214,47,5)" fg:x="978" fg:w="13"/><text x="50.8449%" y="670.50"></text></g><g><title>get_device_properties (torch/cuda/__init__.py:453) (2 samples, 0.10%)</title><rect x="51.1640%" y="676" width="0.1035%" height="15" fill="rgb(218,159,25)" fg:x="989" fg:w="2"/><text x="51.4140%" y="686.50"></text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (2 samples, 0.10%)</title><rect x="51.1640%" y="692" width="0.1035%" height="15" fill="rgb(215,211,28)" fg:x="989" fg:w="2"/><text x="51.4140%" y="702.50"></text></g><g><title>not_supported_reasons (xformers/ops/fmha/common.py:313) (2 samples, 0.10%)</title><rect x="51.2675%" y="644" width="0.1035%" height="15" fill="rgb(238,59,32)" fg:x="991" fg:w="2"/><text x="51.5175%" y="654.50"></text></g><g><title>not_supported_reasons (xformers/ops/fmha/decoder.py:41) (25 samples, 1.29%)</title><rect x="50.1293%" y="628" width="1.2933%" height="15" fill="rgb(226,82,3)" fg:x="969" fg:w="25"/><text x="50.3793%" y="638.50"></text></g><g><title>not_supported_reasons (xformers/ops/fmha/flash.py:430) (3 samples, 0.16%)</title><rect x="51.4227%" y="628" width="0.1552%" height="15" fill="rgb(240,164,32)" fg:x="994" fg:w="3"/><text x="51.6727%" y="638.50"></text></g><g><title>not_supported_reasons (xformers/ops/fmha/common.py:304) (3 samples, 0.16%)</title><rect x="51.4227%" y="644" width="0.1552%" height="15" fill="rgb(232,46,7)" fg:x="994" fg:w="3"/><text x="51.6727%" y="654.50"></text></g><g><title>get_device_capability (torch/cuda/__init__.py:435) (3 samples, 0.16%)</title><rect x="51.4227%" y="660" width="0.1552%" height="15" fill="rgb(229,129,53)" fg:x="994" fg:w="3"/><text x="51.6727%" y="670.50"></text></g><g><title>get_device_properties (torch/cuda/__init__.py:450) (3 samples, 0.16%)</title><rect x="51.4227%" y="676" width="0.1552%" height="15" fill="rgb(234,188,29)" fg:x="994" fg:w="3"/><text x="51.6727%" y="686.50"></text></g><g><title>_get_device_index (torch/cuda/_utils.py:39) (2 samples, 0.10%)</title><rect x="51.4744%" y="692" width="0.1035%" height="15" fill="rgb(246,141,4)" fg:x="995" fg:w="2"/><text x="51.7244%" y="702.50"></text></g><g><title>not_supported_reasons (xformers/ops/fmha/flash.py:431) (3 samples, 0.16%)</title><rect x="51.5779%" y="628" width="0.1552%" height="15" fill="rgb(229,23,39)" fg:x="997" fg:w="3"/><text x="51.8279%" y="638.50"></text></g><g><title>_dispatch_fw (xformers/ops/fmha/dispatch.py:120) (36 samples, 1.86%)</title><rect x="49.9741%" y="596" width="1.8624%" height="15" fill="rgb(206,12,3)" fg:x="966" fg:w="36"/><text x="50.2241%" y="606.50">_..</text></g><g><title>_run_priority_list (xformers/ops/fmha/dispatch.py:53) (35 samples, 1.81%)</title><rect x="50.0259%" y="612" width="1.8107%" height="15" fill="rgb(252,226,20)" fg:x="967" fg:w="35"/><text x="50.2759%" y="622.50">_..</text></g><g><title>_memory_efficient_attention_forward (xformers/ops/fmha/__init__.py:337) (38 samples, 1.97%)</title><rect x="49.9741%" y="580" width="1.9659%" height="15" fill="rgb(216,123,35)" fg:x="966" fg:w="38"/><text x="50.2241%" y="590.50">_..</text></g><g><title>_dispatch_fw (xformers/ops/fmha/dispatch.py:122) (2 samples, 0.10%)</title><rect x="51.8365%" y="596" width="0.1035%" height="15" fill="rgb(212,68,40)" fg:x="1002" fg:w="2"/><text x="52.0865%" y="606.50"></text></g><g><title>_dispatch_fw_priority_list (xformers/ops/fmha/dispatch.py:85) (2 samples, 0.10%)</title><rect x="51.8365%" y="612" width="0.1035%" height="15" fill="rgb(254,125,32)" fg:x="1002" fg:w="2"/><text x="52.0865%" y="622.50"></text></g><g><title>torch::autograd::THPVariable_stride (libtorch_python.so) (2 samples, 0.10%)</title><rect x="51.8365%" y="628" width="0.1035%" height="15" fill="rgb(253,97,22)" fg:x="1002" fg:w="2"/><text x="52.0865%" y="638.50"></text></g><g><title>_convert_input_format (xformers/ops/fmha/flash.py:246) (6 samples, 0.31%)</title><rect x="52.1469%" y="612" width="0.3104%" height="15" fill="rgb(241,101,14)" fg:x="1008" fg:w="6"/><text x="52.3969%" y="622.50"></text></g><g><title>torch::autograd::THPVariable_to (libtorch_python.so) (3 samples, 0.16%)</title><rect x="52.3021%" y="628" width="0.1552%" height="15" fill="rgb(238,103,29)" fg:x="1011" fg:w="3"/><text x="52.5521%" y="638.50"></text></g><g><title>torch::PythonArgs::toBool (libtorch_python.so) (2 samples, 0.10%)</title><rect x="52.3539%" y="644" width="0.1035%" height="15" fill="rgb(233,195,47)" fg:x="1012" fg:w="2"/><text x="52.6039%" y="654.50"></text></g><g><title>_convert_input_format (xformers/ops/fmha/flash.py:311) (3 samples, 0.16%)</title><rect x="52.6125%" y="612" width="0.1552%" height="15" fill="rgb(246,218,30)" fg:x="1017" fg:w="3"/><text x="52.8625%" y="622.50"></text></g><g><title>apply (xformers/ops/fmha/flash.py:455) (14 samples, 0.72%)</title><rect x="52.0952%" y="596" width="0.7243%" height="15" fill="rgb(219,145,47)" fg:x="1007" fg:w="14"/><text x="52.3452%" y="606.50"></text></g><g><title>torch::PythonArgParser::raw_parse (libtorch_python.so) (2 samples, 0.10%)</title><rect x="53.1816%" y="756" width="0.1035%" height="15" fill="rgb(243,12,26)" fg:x="1028" fg:w="2"/><text x="53.4316%" y="766.50"></text></g><g><title>torch::FunctionSignature::parse (libtorch_python.so) (2 samples, 0.10%)</title><rect x="53.1816%" y="772" width="0.1035%" height="15" fill="rgb(214,87,16)" fg:x="1028" fg:w="2"/><text x="53.4316%" y="782.50"></text></g><g><title>torch::is_int_or_symint_list (libtorch_python.so) (2 samples, 0.10%)</title><rect x="53.1816%" y="788" width="0.1035%" height="15" fill="rgb(208,99,42)" fg:x="1028" fg:w="2"/><text x="53.4316%" y="798.50"></text></g><g><title>_flash_fwd (xformers/ops/fmha/flash.py:120) (4 samples, 0.21%)</title><rect x="53.1298%" y="724" width="0.2069%" height="15" fill="rgb(253,99,2)" fg:x="1027" fg:w="4"/><text x="53.3798%" y="734.50"></text></g><g><title>torch::autograd::THPVariable_new_empty (libtorch_python.so) (3 samples, 0.16%)</title><rect x="53.1816%" y="740" width="0.1552%" height="15" fill="rgb(220,168,23)" fg:x="1028" fg:w="3"/><text x="53.4316%" y="750.50"></text></g><g><title>mha_varlen_fwd (flash_api.cpp:584) (2 samples, 0.10%)</title><rect x="53.4920%" y="820" width="0.1035%" height="15" fill="rgb(242,38,24)" fg:x="1034" fg:w="2"/><text x="53.7420%" y="830.50"></text></g><g><title>at::TensorBase::data_ptr (TensorBase.h:582) (2 samples, 0.10%)</title><rect x="53.4920%" y="836" width="0.1035%" height="15" fill="rgb(225,182,9)" fg:x="1034" fg:w="2"/><text x="53.7420%" y="846.50"></text></g><g><title>at::TensorBase::mutable_data_ptr (TensorBase.h:574) (2 samples, 0.10%)</title><rect x="53.4920%" y="852" width="0.1035%" height="15" fill="rgb(243,178,37)" fg:x="1034" fg:w="2"/><text x="53.7420%" y="862.50"></text></g><g><title>at::TensorBase::unsafeGetTensorImpl (TensorBase.h:187) (2 samples, 0.10%)</title><rect x="53.4920%" y="868" width="0.1035%" height="15" fill="rgb(232,139,19)" fg:x="1034" fg:w="2"/><text x="53.7420%" y="878.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::get (intrusive_ptr.h:400) (2 samples, 0.10%)</title><rect x="53.4920%" y="884" width="0.1035%" height="15" fill="rgb(225,201,24)" fg:x="1034" fg:w="2"/><text x="53.7420%" y="894.50"></text></g><g><title>torch::empty (variable_factories.h:263) (2 samples, 0.10%)</title><rect x="53.4920%" y="900" width="0.1035%" height="15" fill="rgb(221,47,46)" fg:x="1034" fg:w="2"/><text x="53.7420%" y="910.50"></text></g><g><title>at::empty (empty.h:36) (2 samples, 0.10%)</title><rect x="53.4920%" y="916" width="0.1035%" height="15" fill="rgb(249,23,13)" fg:x="1034" fg:w="2"/><text x="53.7420%" y="926.50"></text></g><g><title>at::_ops::empty_memory_format::call (libtorch_cpu.so) (2 samples, 0.10%)</title><rect x="53.4920%" y="932" width="0.1035%" height="15" fill="rgb(219,9,5)" fg:x="1034" fg:w="2"/><text x="53.7420%" y="942.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::empty_memory_format(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (2 samples, 0.10%)</title><rect x="53.4920%" y="948" width="0.1035%" height="15" fill="rgb(254,171,16)" fg:x="1034" fg:w="2"/><text x="53.7420%" y="958.50"></text></g><g><title>at::_ops::empty_memory_format::redispatch (libtorch_cpu.so) (2 samples, 0.10%)</title><rect x="53.4920%" y="964" width="0.1035%" height="15" fill="rgb(230,171,20)" fg:x="1034" fg:w="2"/><text x="53.7420%" y="974.50"></text></g><g><title>cudaFuncSetAttribute (nvidia/cuda_runtime/lib/libcudart.so.12) (2 samples, 0.10%)</title><rect x="53.6472%" y="900" width="0.1035%" height="15" fill="rgb(210,71,41)" fg:x="1037" fg:w="2"/><text x="53.8972%" y="910.50"></text></g><g><title>_flash_fwd (xformers/ops/fmha/flash.py:130) (12 samples, 0.62%)</title><rect x="53.3368%" y="724" width="0.6208%" height="15" fill="rgb(206,173,20)" fg:x="1031" fg:w="12"/><text x="53.5868%" y="734.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:946) (11 samples, 0.57%)</title><rect x="53.3885%" y="740" width="0.5691%" height="15" fill="rgb(233,88,34)" fg:x="1032" fg:w="11"/><text x="53.6385%" y="750.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (*&amp;)(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;), std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;, pybind11::name, pybind11::scope, pybind11::sibling, char [31]&gt;(std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (*&amp;)(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;), std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (*)(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;), pybind11::name const, pybind11::scope&amp;, pybind11::sibling, char [31])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:224) (11 samples, 0.57%)</title><rect x="53.3885%" y="756" width="0.5691%" height="15" fill="rgb(223,209,46)" fg:x="1032" fg:w="11"/><text x="53.6385%" y="766.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (*&amp;)(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;), std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;, pybind11::name, pybind11::scope, pybind11::sibling, char [31]&gt;(std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (*&amp;)(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;), std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (*)(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;), pybind11::name const, pybind11::scope&amp;, pybind11::sibling, char [31])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:254) (11 samples, 0.57%)</title><rect x="53.3885%" y="772" width="0.5691%" height="15" fill="rgb(250,43,18)" fg:x="1032" fg:w="11"/><text x="53.6385%" y="782.50"></text></g><g><title>pybind11::detail::argument_loader&lt;at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt; &gt;::call&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;, pybind11::detail::void_type, std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (*&amp;)(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;)&gt; &amp;&amp; (cast.h:1449) (11 samples, 0.57%)</title><rect x="53.3885%" y="788" width="0.5691%" height="15" fill="rgb(208,13,10)" fg:x="1032" fg:w="11"/><text x="53.6385%" y="798.50"></text></g><g><title>pybind11::detail::argument_loader&lt;at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt; &gt;::call_impl&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;, std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (*&amp;)(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;), (unsigned long)0, (unsigned long)1, (unsigned long)2, (unsigned long)3, (unsigned long)4, (unsigned long)5, (unsigned long)6, (unsigned long)7, (unsigned long)8, (unsigned long)9, (unsigned long)10, (unsigned long)11, (unsigned long)12, (unsigned long)13, (unsigned long)14, (unsigned long)15, (unsigned long)16, pybind11::detail::void_type&gt; &amp;&amp; (cast.h:1480) (11 samples, 0.57%)</title><rect x="53.3885%" y="804" width="0.5691%" height="15" fill="rgb(212,200,36)" fg:x="1032" fg:w="11"/><text x="53.6385%" y="814.50"></text></g><g><title>mha_varlen_fwd (flash_api.cpp:597) (7 samples, 0.36%)</title><rect x="53.5954%" y="820" width="0.3621%" height="15" fill="rgb(225,90,30)" fg:x="1036" fg:w="7"/><text x="53.8454%" y="830.50"></text></g><g><title>at::Tensor::Tensor (TensorBody.h:109) (7 samples, 0.36%)</title><rect x="53.5954%" y="836" width="0.3621%" height="15" fill="rgb(236,182,39)" fg:x="1036" fg:w="7"/><text x="53.8454%" y="846.50"></text></g><g><title>at::TensorBase::TensorBase (TensorBase.h:104) (7 samples, 0.36%)</title><rect x="53.5954%" y="852" width="0.3621%" height="15" fill="rgb(212,144,35)" fg:x="1036" fg:w="7"/><text x="53.8454%" y="862.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (intrusive_ptr.h:353) (7 samples, 0.36%)</title><rect x="53.5954%" y="868" width="0.3621%" height="15" fill="rgb(228,63,44)" fg:x="1036" fg:w="7"/><text x="53.8454%" y="878.50"></text></g><g><title>run_flash_fwd&lt;Flash_fwd_kernel_traits&lt;64, 128, 128, 4, false, false, cutlass::half_t, Flash_kernel_traits&lt;64, 128, 128, 4, cutlass::half_t&gt; &gt;, false, true&gt; (xformers/_C_flashattention.so) (7 samples, 0.36%)</title><rect x="53.5954%" y="884" width="0.3621%" height="15" fill="rgb(228,109,6)" fg:x="1036" fg:w="7"/><text x="53.8454%" y="894.50"></text></g><g><title>cudaLaunchKernel (nvidia/cuda_runtime/lib/libcudart.so.12) (4 samples, 0.21%)</title><rect x="53.7506%" y="900" width="0.2069%" height="15" fill="rgb(238,117,24)" fg:x="1039" fg:w="4"/><text x="54.0006%" y="910.50"></text></g><g><title>0x7f8fa059598c (nvidia/cuda_runtime/lib/libcudart.so.12) (3 samples, 0.16%)</title><rect x="53.8024%" y="916" width="0.1552%" height="15" fill="rgb(242,26,26)" fg:x="1040" fg:w="3"/><text x="54.0524%" y="926.50"></text></g><g><title>0x7f8f9e5f03e0 (libcuda.so.545.23.08) (3 samples, 0.16%)</title><rect x="53.8024%" y="932" width="0.1552%" height="15" fill="rgb(221,92,48)" fg:x="1040" fg:w="3"/><text x="54.0524%" y="942.50"></text></g><g><title>0x7f8f9e3eedcc (libcuda.so.545.23.08) (3 samples, 0.16%)</title><rect x="53.8024%" y="948" width="0.1552%" height="15" fill="rgb(209,209,32)" fg:x="1040" fg:w="3"/><text x="54.0524%" y="958.50"></text></g><g><title>0x7f8f9e3ec230 (libcuda.so.545.23.08) (3 samples, 0.16%)</title><rect x="53.8024%" y="964" width="0.1552%" height="15" fill="rgb(221,70,22)" fg:x="1040" fg:w="3"/><text x="54.0524%" y="974.50"></text></g><g><title>0x7f8f9e3eba26 (libcuda.so.545.23.08) (3 samples, 0.16%)</title><rect x="53.8024%" y="980" width="0.1552%" height="15" fill="rgb(248,145,5)" fg:x="1040" fg:w="3"/><text x="54.0524%" y="990.50"></text></g><g><title>c10::Dispatcher::callBoxed (libtorch_python.so) (22 samples, 1.14%)</title><rect x="52.9747%" y="692" width="1.1381%" height="15" fill="rgb(226,116,26)" fg:x="1024" fg:w="22"/><text x="53.2247%" y="702.50"></text></g><g><title>torch::impl::dispatch::PythonKernelHolder::operator() (libtorch_python.so) (22 samples, 1.14%)</title><rect x="52.9747%" y="708" width="1.1381%" height="15" fill="rgb(244,5,17)" fg:x="1024" fg:w="22"/><text x="53.2247%" y="718.50"></text></g><g><title>torch::jit::getOpWithStack (libtorch_python.so) (2 samples, 0.10%)</title><rect x="54.1128%" y="692" width="0.1035%" height="15" fill="rgb(252,159,33)" fg:x="1046" fg:w="2"/><text x="54.3628%" y="702.50"></text></g><g><title>torch::jit::createStackForSchema (libtorch_python.so) (2 samples, 0.10%)</title><rect x="54.1128%" y="708" width="0.1035%" height="15" fill="rgb(206,71,0)" fg:x="1046" fg:w="2"/><text x="54.3628%" y="718.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;torch::jit::initJITBindings(_object*)::{lambda(std::string const&amp;)#195}::operator()(std::string const&amp;) const::{lambda(pybind11::args, pybind11::kwargs)#3}, pybind11::object, pybind11::args, pybind11::kwargs, pybind11::name, pybind11::doc&gt;(torch::jit::initJITBindings(_object*)::{lambda(std::string const&amp;)#195}::operator()(std::string const&amp;) const::{lambda(pybind11::args&amp;&amp;, pybind11::kwargs)#3}, pybind11::object (*)(pybind11::args, pybind11::kwargs), pybind11::name const, pybind11::doc&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (libtorch_python.so) (26 samples, 1.35%)</title><rect x="52.9229%" y="644" width="1.3451%" height="15" fill="rgb(233,118,54)" fg:x="1023" fg:w="26"/><text x="53.1729%" y="654.50"></text></g><g><title>torch::jit::_get_operation_for_overload_or_packet (libtorch_python.so) (25 samples, 1.29%)</title><rect x="52.9747%" y="660" width="1.2933%" height="15" fill="rgb(234,83,48)" fg:x="1024" fg:w="25"/><text x="53.2247%" y="670.50"></text></g><g><title>torch::jit::invokeOperatorFromPython (libtorch_python.so) (25 samples, 1.29%)</title><rect x="52.9747%" y="676" width="1.2933%" height="15" fill="rgb(228,3,54)" fg:x="1024" fg:w="25"/><text x="53.2247%" y="686.50"></text></g><g><title>apply (xformers/ops/fmha/flash.py:458) (28 samples, 1.45%)</title><rect x="52.8712%" y="596" width="1.4485%" height="15" fill="rgb(226,155,13)" fg:x="1022" fg:w="28"/><text x="53.1212%" y="606.50"></text></g><g><title>__call__ (torch/_ops.py:692) (28 samples, 1.45%)</title><rect x="52.8712%" y="612" width="1.4485%" height="15" fill="rgb(241,28,37)" fg:x="1022" fg:w="28"/><text x="53.1212%" y="622.50"></text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (28 samples, 1.45%)</title><rect x="52.8712%" y="628" width="1.4485%" height="15" fill="rgb(233,93,10)" fg:x="1022" fg:w="28"/><text x="53.1212%" y="638.50"></text></g><g><title>apply (xformers/ops/fmha/flash.py:483) (2 samples, 0.10%)</title><rect x="54.4749%" y="596" width="0.1035%" height="15" fill="rgb(225,113,19)" fg:x="1053" fg:w="2"/><text x="54.7249%" y="606.50"></text></g><g><title>memory_efficient_attention_forward (xformers/ops/fmha/__init__.py:244) (99 samples, 5.12%)</title><rect x="49.5085%" y="564" width="5.1216%" height="15" fill="rgb(241,2,18)" fg:x="957" fg:w="99"/><text x="49.7585%" y="574.50">memory..</text></g><g><title>_memory_efficient_attention_forward (xformers/ops/fmha/__init__.py:341) (52 samples, 2.69%)</title><rect x="51.9400%" y="580" width="2.6901%" height="15" fill="rgb(228,207,21)" fg:x="1004" fg:w="52"/><text x="52.1900%" y="590.50">_m..</text></g><g><title>forward (vllm/model_executor/layers/attention/backends/xformers.py:146) (108 samples, 5.59%)</title><rect x="49.2499%" y="532" width="5.5872%" height="15" fill="rgb(213,211,35)" fg:x="952" fg:w="108"/><text x="49.4999%" y="542.50">forward..</text></g><g><title>_run_memory_efficient_xformer_forward (vllm/model_executor/layers/attention/backends/xformers.py:216) (103 samples, 5.33%)</title><rect x="49.5085%" y="548" width="5.3285%" height="15" fill="rgb(209,83,10)" fg:x="957" fg:w="103"/><text x="49.7585%" y="558.50">_run_me..</text></g><g><title>memory_efficient_attention_forward (xformers/ops/fmha/__init__.py:245) (4 samples, 0.21%)</title><rect x="54.6301%" y="564" width="0.2069%" height="15" fill="rgb(209,164,1)" fg:x="1056" fg:w="4"/><text x="54.8801%" y="574.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:945) (2 samples, 0.10%)</title><rect x="55.0957%" y="564" width="0.1035%" height="15" fill="rgb(213,184,43)" fg:x="1065" fg:w="2"/><text x="55.3457%" y="574.50"></text></g><g><title>pybind11::detail::loader_life_support::loader_life_support (type_caster_base.h:66) (2 samples, 0.10%)</title><rect x="55.0957%" y="580" width="0.1035%" height="15" fill="rgb(231,61,34)" fg:x="1065" fg:w="2"/><text x="55.3457%" y="590.50"></text></g><g><title>pybind11::detail::loader_life_support::get_stack_top (type_caster_base.h:49) (2 samples, 0.10%)</title><rect x="55.0957%" y="596" width="0.1035%" height="15" fill="rgb(235,75,3)" fg:x="1065" fg:w="2"/><text x="55.3457%" y="606.50"></text></g><g><title>pybind11::detail::get_local_internals (internals.h:590) (2 samples, 0.10%)</title><rect x="55.0957%" y="612" width="0.1035%" height="15" fill="rgb(220,106,47)" fg:x="1065" fg:w="2"/><text x="55.3457%" y="622.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:106) (127 samples, 6.57%)</title><rect x="48.8877%" y="468" width="6.5701%" height="15" fill="rgb(210,196,33)" fg:x="945" fg:w="127"/><text x="49.1377%" y="478.50">forward (..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (125 samples, 6.47%)</title><rect x="48.9912%" y="484" width="6.4666%" height="15" fill="rgb(229,154,42)" fg:x="947" fg:w="125"/><text x="49.2412%" y="494.50">_wrapped..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (124 samples, 6.41%)</title><rect x="49.0429%" y="500" width="6.4149%" height="15" fill="rgb(228,114,26)" fg:x="948" fg:w="124"/><text x="49.2929%" y="510.50">_call_im..</text></g><g><title>forward (vllm/model_executor/layers/attention/attention.py:58) (123 samples, 6.36%)</title><rect x="49.0947%" y="516" width="6.3632%" height="15" fill="rgb(208,144,1)" fg:x="949" fg:w="123"/><text x="49.3447%" y="526.50">forward ..</text></g><g><title>forward (vllm/model_executor/layers/attention/backends/xformers.py:94) (10 samples, 0.52%)</title><rect x="54.9405%" y="532" width="0.5173%" height="15" fill="rgb(239,112,37)" fg:x="1062" fg:w="10"/><text x="55.1905%" y="542.50"></text></g><g><title>reshape_and_cache (vllm/model_executor/layers/attention/ops/paged_attn.py:29) (10 samples, 0.52%)</title><rect x="54.9405%" y="548" width="0.5173%" height="15" fill="rgb(210,96,50)" fg:x="1062" fg:w="10"/><text x="55.1905%" y="558.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:946) (5 samples, 0.26%)</title><rect x="55.1992%" y="564" width="0.2587%" height="15" fill="rgb(222,178,2)" fg:x="1067" fg:w="5"/><text x="55.4492%" y="574.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;void (*&amp;)(at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, std::string const&amp;), void, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, std::string const&amp;, pybind11::name, pybind11::scope, pybind11::sibling, char [49]&gt;(void (*&amp;)(at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, std::string const&amp;), void (*)(at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, std::string const&amp;), pybind11::name const, pybind11::scope&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:224) (5 samples, 0.26%)</title><rect x="55.1992%" y="580" width="0.2587%" height="15" fill="rgb(226,74,18)" fg:x="1067" fg:w="5"/><text x="55.4492%" y="590.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;void (*&amp;)(at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, std::string const&amp;), void, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, std::string const&amp;, pybind11::name, pybind11::scope, pybind11::sibling, char [49]&gt;(void (*&amp;)(at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, std::string const&amp;), void (*)(at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, std::string const&amp;), pybind11::name const, pybind11::scope&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:253) (4 samples, 0.21%)</title><rect x="55.2509%" y="596" width="0.2069%" height="15" fill="rgb(225,67,54)" fg:x="1068" fg:w="4"/><text x="55.5009%" y="606.50"></text></g><g><title>pybind11::detail::void_caster&lt;pybind11::detail::void_type&gt;::cast (cast.h:255) (4 samples, 0.21%)</title><rect x="55.2509%" y="612" width="0.2069%" height="15" fill="rgb(251,92,32)" fg:x="1068" fg:w="4"/><text x="55.5009%" y="622.50"></text></g><g><title>pybind11::none::none (pytypes.h:1747) (4 samples, 0.21%)</title><rect x="55.2509%" y="628" width="0.2069%" height="15" fill="rgb(228,149,22)" fg:x="1068" fg:w="4"/><text x="55.5009%" y="638.50"></text></g><g><title>pybind11::object::object (pytypes.h:432) (4 samples, 0.21%)</title><rect x="55.2509%" y="644" width="0.2069%" height="15" fill="rgb(243,54,13)" fg:x="1068" fg:w="4"/><text x="55.5009%" y="654.50"></text></g><g><title>pybind11::handle::inc_ref &amp; (pytypes.h:258) (4 samples, 0.21%)</title><rect x="55.2509%" y="660" width="0.2069%" height="15" fill="rgb(243,180,28)" fg:x="1068" fg:w="4"/><text x="55.5009%" y="670.50"></text></g><g><title>_Py_XINCREF (object.h:558) (4 samples, 0.21%)</title><rect x="55.2509%" y="676" width="0.2069%" height="15" fill="rgb(208,167,24)" fg:x="1068" fg:w="4"/><text x="55.5009%" y="686.50"></text></g><g><title>_Py_INCREF (object.h:472) (4 samples, 0.21%)</title><rect x="55.2509%" y="692" width="0.2069%" height="15" fill="rgb(245,73,45)" fg:x="1068" fg:w="4"/><text x="55.5009%" y="702.50"></text></g><g><title>reshape_and_cache (cache_kernels.cu:253) (3 samples, 0.16%)</title><rect x="55.3026%" y="708" width="0.1552%" height="15" fill="rgb(237,203,48)" fg:x="1069" fg:w="3"/><text x="55.5526%" y="718.50"></text></g><g><title>vllm::reshape_and_cache_kernel&lt;unsigned short, unsigned short, false&gt; (cache_kernels.cu:166) (3 samples, 0.16%)</title><rect x="55.3026%" y="724" width="0.1552%" height="15" fill="rgb(211,197,16)" fg:x="1069" fg:w="3"/><text x="55.5526%" y="734.50"></text></g><g><title>__wrapper__device_stub_reshape_and_cache_kernel&lt;short unsigned int, short unsigned int, false&gt; (tmpxft_001e5b9a_00000000-6_cache_kernels.cudafe1.stub.c:63) (3 samples, 0.16%)</title><rect x="55.3026%" y="740" width="0.1552%" height="15" fill="rgb(243,99,51)" fg:x="1069" fg:w="3"/><text x="55.5526%" y="750.50"></text></g><g><title>__device_stub__ZN4vllm24reshape_and_cache_kernelIttLb0EEEvPKT_S3_PT0_S5_PKliiiiii (tmpxft_001e5b9a_00000000-6_cache_kernels.cudafe1.stub.c:61) (3 samples, 0.16%)</title><rect x="55.3026%" y="756" width="0.1552%" height="15" fill="rgb(215,123,29)" fg:x="1069" fg:w="3"/><text x="55.5526%" y="766.50"></text></g><g><title>cudaLaunchKernel (nvidia/cuda_runtime/lib/libcudart.so.12) (3 samples, 0.16%)</title><rect x="55.3026%" y="772" width="0.1552%" height="15" fill="rgb(239,186,37)" fg:x="1069" fg:w="3"/><text x="55.5526%" y="782.50"></text></g><g><title>0x7f8fa059598c (nvidia/cuda_runtime/lib/libcudart.so.12) (3 samples, 0.16%)</title><rect x="55.3026%" y="788" width="0.1552%" height="15" fill="rgb(252,136,39)" fg:x="1069" fg:w="3"/><text x="55.5526%" y="798.50"></text></g><g><title>0x7f8f9e5f03e0 (libcuda.so.545.23.08) (3 samples, 0.16%)</title><rect x="55.3026%" y="804" width="0.1552%" height="15" fill="rgb(223,213,32)" fg:x="1069" fg:w="3"/><text x="55.5526%" y="814.50"></text></g><g><title>0x7f8f9e3eedcc (libcuda.so.545.23.08) (3 samples, 0.16%)</title><rect x="55.3026%" y="820" width="0.1552%" height="15" fill="rgb(233,115,5)" fg:x="1069" fg:w="3"/><text x="55.5526%" y="830.50"></text></g><g><title>0x7f8f9e3ec230 (libcuda.so.545.23.08) (3 samples, 0.16%)</title><rect x="55.3026%" y="836" width="0.1552%" height="15" fill="rgb(207,226,44)" fg:x="1069" fg:w="3"/><text x="55.5526%" y="846.50"></text></g><g><title>0x7f8f9e3eba26 (libcuda.so.545.23.08) (3 samples, 0.16%)</title><rect x="55.3026%" y="852" width="0.1552%" height="15" fill="rgb(208,126,0)" fg:x="1069" fg:w="3"/><text x="55.5526%" y="862.50"></text></g><g><title>0x7f8f9e7b8acf (libcuda.so.545.23.08) (2 samples, 0.10%)</title><rect x="55.3544%" y="868" width="0.1035%" height="15" fill="rgb(244,66,21)" fg:x="1070" fg:w="2"/><text x="55.6044%" y="878.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1521) (4 samples, 0.21%)</title><rect x="55.5613%" y="500" width="0.2069%" height="15" fill="rgb(222,97,12)" fg:x="1074" fg:w="4"/><text x="55.8113%" y="510.50"></text></g><g><title>forward (vllm/model_executor/layers/linear.py:572) (2 samples, 0.10%)</title><rect x="55.8717%" y="516" width="0.1035%" height="15" fill="rgb(219,213,19)" fg:x="1080" fg:w="2"/><text x="56.1217%" y="526.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (13 samples, 0.67%)</title><rect x="55.5613%" y="484" width="0.6725%" height="15" fill="rgb(252,169,30)" fg:x="1074" fg:w="13"/><text x="55.8113%" y="494.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (9 samples, 0.47%)</title><rect x="55.7682%" y="500" width="0.4656%" height="15" fill="rgb(206,32,51)" fg:x="1078" fg:w="9"/><text x="56.0182%" y="510.50"></text></g><g><title>forward (vllm/model_executor/layers/linear.py:580) (5 samples, 0.26%)</title><rect x="55.9752%" y="516" width="0.2587%" height="15" fill="rgb(250,172,42)" fg:x="1082" fg:w="5"/><text x="56.2252%" y="526.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:163) (160 samples, 8.28%)</title><rect x="48.0083%" y="420" width="8.2773%" height="15" fill="rgb(209,34,43)" fg:x="928" fg:w="160"/><text x="48.2583%" y="430.50">forward (vll..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (158 samples, 8.17%)</title><rect x="48.1117%" y="436" width="8.1738%" height="15" fill="rgb(223,11,35)" fg:x="930" fg:w="158"/><text x="48.3617%" y="446.50">_wrapped_ca..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (156 samples, 8.07%)</title><rect x="48.2152%" y="452" width="8.0704%" height="15" fill="rgb(251,219,26)" fg:x="932" fg:w="156"/><text x="48.4652%" y="462.50">_call_impl ..</text></g><g><title>forward (vllm/model_executor/models/opt.py:108) (16 samples, 0.83%)</title><rect x="55.4578%" y="468" width="0.8277%" height="15" fill="rgb(231,119,3)" fg:x="1072" fg:w="16"/><text x="55.7078%" y="478.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1521) (2 samples, 0.10%)</title><rect x="56.3890%" y="452" width="0.1035%" height="15" fill="rgb(216,97,11)" fg:x="1090" fg:w="2"/><text x="56.6390%" y="462.50"></text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (2 samples, 0.10%)</title><rect x="56.3890%" y="468" width="0.1035%" height="15" fill="rgb(223,59,9)" fg:x="1090" fg:w="2"/><text x="56.6390%" y="478.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:196) (6 samples, 0.31%)</title><rect x="56.5960%" y="468" width="0.3104%" height="15" fill="rgb(233,93,31)" fg:x="1094" fg:w="6"/><text x="56.8460%" y="478.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2543) (5 samples, 0.26%)</title><rect x="56.6477%" y="484" width="0.2587%" height="15" fill="rgb(239,81,33)" fg:x="1095" fg:w="5"/><text x="56.8977%" y="494.50"></text></g><g><title>torch::autograd::THPVariable_layer_norm (libtorch_python.so) (3 samples, 0.16%)</title><rect x="56.7512%" y="500" width="0.1552%" height="15" fill="rgb(213,120,34)" fg:x="1097" fg:w="3"/><text x="57.0012%" y="510.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:175) (13 samples, 0.67%)</title><rect x="56.3890%" y="420" width="0.6725%" height="15" fill="rgb(243,49,53)" fg:x="1090" fg:w="13"/><text x="56.6390%" y="430.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (13 samples, 0.67%)</title><rect x="56.3890%" y="436" width="0.6725%" height="15" fill="rgb(247,216,33)" fg:x="1090" fg:w="13"/><text x="56.6390%" y="446.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (10 samples, 0.52%)</title><rect x="56.5442%" y="452" width="0.5173%" height="15" fill="rgb(226,26,14)" fg:x="1093" fg:w="10"/><text x="56.7942%" y="462.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:197) (3 samples, 0.16%)</title><rect x="56.9064%" y="468" width="0.1552%" height="15" fill="rgb(215,49,53)" fg:x="1100" fg:w="3"/><text x="57.1564%" y="478.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (4 samples, 0.21%)</title><rect x="57.1650%" y="436" width="0.2069%" height="15" fill="rgb(245,162,40)" fg:x="1105" fg:w="4"/><text x="57.4150%" y="446.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (3 samples, 0.16%)</title><rect x="57.2168%" y="452" width="0.1552%" height="15" fill="rgb(229,68,17)" fg:x="1106" fg:w="3"/><text x="57.4668%" y="462.50"></text></g><g><title>forward (vllm/model_executor/layers/linear.py:215) (2 samples, 0.10%)</title><rect x="57.2685%" y="468" width="0.1035%" height="15" fill="rgb(213,182,10)" fg:x="1107" fg:w="2"/><text x="57.5185%" y="478.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:176) (7 samples, 0.36%)</title><rect x="57.0616%" y="420" width="0.3621%" height="15" fill="rgb(245,125,30)" fg:x="1103" fg:w="7"/><text x="57.3116%" y="430.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:177) (4 samples, 0.21%)</title><rect x="57.4237%" y="420" width="0.2069%" height="15" fill="rgb(232,202,2)" fg:x="1110" fg:w="4"/><text x="57.6737%" y="430.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (2 samples, 0.10%)</title><rect x="57.5272%" y="436" width="0.1035%" height="15" fill="rgb(237,140,51)" fg:x="1112" fg:w="2"/><text x="57.7772%" y="446.50"></text></g><g><title>forward (vllm/model_executor/layers/linear.py:572) (4 samples, 0.21%)</title><rect x="57.7341%" y="468" width="0.2069%" height="15" fill="rgb(236,157,25)" fg:x="1116" fg:w="4"/><text x="57.9841%" y="478.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:178) (7 samples, 0.36%)</title><rect x="57.6306%" y="420" width="0.3621%" height="15" fill="rgb(219,209,0)" fg:x="1114" fg:w="7"/><text x="57.8806%" y="430.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (6 samples, 0.31%)</title><rect x="57.6824%" y="436" width="0.3104%" height="15" fill="rgb(240,116,54)" fg:x="1115" fg:w="6"/><text x="57.9324%" y="446.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (5 samples, 0.26%)</title><rect x="57.7341%" y="452" width="0.2587%" height="15" fill="rgb(216,10,36)" fg:x="1116" fg:w="5"/><text x="57.9841%" y="462.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:179) (4 samples, 0.21%)</title><rect x="57.9928%" y="420" width="0.2069%" height="15" fill="rgb(222,72,44)" fg:x="1121" fg:w="4"/><text x="58.2428%" y="430.50"></text></g><g><title>torch::autograd::TypeError_to_NotImplemented_&lt;&amp;torch::autograd::THPVariable_add(_object*, _object*, _object*)&gt; (libtorch_python.so) (2 samples, 0.10%)</title><rect x="58.0962%" y="436" width="0.1035%" height="15" fill="rgb(232,159,9)" fg:x="1123" fg:w="2"/><text x="58.3462%" y="446.50"></text></g><g><title>torch::autograd::THPVariable_add (libtorch_python.so) (2 samples, 0.10%)</title><rect x="58.0962%" y="452" width="0.1035%" height="15" fill="rgb(210,39,32)" fg:x="1123" fg:w="2"/><text x="58.3462%" y="462.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:255) (211 samples, 10.92%)</title><rect x="47.3357%" y="372" width="10.9157%" height="15" fill="rgb(216,194,45)" fg:x="915" fg:w="211"/><text x="47.5857%" y="382.50">forward (vllm/mo..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (210 samples, 10.86%)</title><rect x="47.3875%" y="388" width="10.8639%" height="15" fill="rgb(218,18,35)" fg:x="916" fg:w="210"/><text x="47.6375%" y="398.50">_wrapped_call_im..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (207 samples, 10.71%)</title><rect x="47.5427%" y="404" width="10.7087%" height="15" fill="rgb(207,83,51)" fg:x="919" fg:w="207"/><text x="47.7927%" y="414.50">_call_impl (torc..</text></g><g><title>execute_model (vllm/worker/model_runner.py:606) (225 samples, 11.64%)</title><rect x="46.6632%" y="228" width="11.6399%" height="15" fill="rgb(225,63,43)" fg:x="902" fg:w="225"/><text x="46.9132%" y="238.50">execute_model (vl..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (225 samples, 11.64%)</title><rect x="46.6632%" y="244" width="11.6399%" height="15" fill="rgb(207,57,36)" fg:x="902" fg:w="225"/><text x="46.9132%" y="254.50">_wrapped_call_imp..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (225 samples, 11.64%)</title><rect x="46.6632%" y="260" width="11.6399%" height="15" fill="rgb(216,99,33)" fg:x="902" fg:w="225"/><text x="46.9132%" y="270.50">_call_impl (torch..</text></g><g><title>forward (vllm/model_executor/models/opt.py:306) (225 samples, 11.64%)</title><rect x="46.6632%" y="276" width="11.6399%" height="15" fill="rgb(225,42,16)" fg:x="902" fg:w="225"/><text x="46.9132%" y="286.50">forward (vllm/mod..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (224 samples, 11.59%)</title><rect x="46.7150%" y="292" width="11.5882%" height="15" fill="rgb(220,201,45)" fg:x="903" fg:w="224"/><text x="46.9650%" y="302.50">_wrapped_call_imp..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (224 samples, 11.59%)</title><rect x="46.7150%" y="308" width="11.5882%" height="15" fill="rgb(225,33,4)" fg:x="903" fg:w="224"/><text x="46.9650%" y="318.50">_call_impl (torch..</text></g><g><title>forward (vllm/model_executor/models/opt.py:281) (224 samples, 11.59%)</title><rect x="46.7150%" y="324" width="11.5882%" height="15" fill="rgb(224,33,50)" fg:x="903" fg:w="224"/><text x="46.9650%" y="334.50">forward (vllm/mod..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (224 samples, 11.59%)</title><rect x="46.7150%" y="340" width="11.5882%" height="15" fill="rgb(246,198,51)" fg:x="903" fg:w="224"/><text x="46.9650%" y="350.50">_wrapped_call_imp..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (224 samples, 11.59%)</title><rect x="46.7150%" y="356" width="11.5882%" height="15" fill="rgb(205,22,4)" fg:x="903" fg:w="224"/><text x="46.9650%" y="366.50">_call_impl (torch..</text></g><g><title>torch::autograd::applySlicing (libtorch_python.so) (3 samples, 0.16%)</title><rect x="58.4584%" y="340" width="0.1552%" height="15" fill="rgb(206,3,8)" fg:x="1130" fg:w="3"/><text x="58.7084%" y="350.50"></text></g><g><title>at::indexing::handleDimInMultiDimIndexing (libtorch_python.so) (3 samples, 0.16%)</title><rect x="58.4584%" y="356" width="0.1552%" height="15" fill="rgb(251,23,15)" fg:x="1130" fg:w="3"/><text x="58.7084%" y="366.50"></text></g><g><title>at::indexing::impl::applySlice (libtorch_python.so) (3 samples, 0.16%)</title><rect x="58.4584%" y="372" width="0.1552%" height="15" fill="rgb(252,88,28)" fg:x="1130" fg:w="3"/><text x="58.7084%" y="382.50"></text></g><g><title>at::_ops::slice_Tensor::call (libtorch_cpu.so) (3 samples, 0.16%)</title><rect x="58.4584%" y="388" width="0.1552%" height="15" fill="rgb(212,127,14)" fg:x="1130" fg:w="3"/><text x="58.7084%" y="398.50"></text></g><g><title>c10::callUnboxedKernelFunction&lt;at::Tensor, at::Tensor const&amp;, long, c10::optional&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;, c10::SymInt&gt; (libtorch_cpu.so) (3 samples, 0.16%)</title><rect x="58.4584%" y="404" width="0.1552%" height="15" fill="rgb(247,145,37)" fg:x="1130" fg:w="3"/><text x="58.7084%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::optional&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_Tensor_slice(at::Tensor const&amp;, long, c10::optional&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::optional&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::optional&lt;c10::SymInt&gt;, c10::optional&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (2 samples, 0.10%)</title><rect x="58.5101%" y="420" width="0.1035%" height="15" fill="rgb(209,117,53)" fg:x="1131" fg:w="2"/><text x="58.7601%" y="430.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_Tensor_slice (libtorch_cpu.so) (2 samples, 0.10%)</title><rect x="58.5101%" y="436" width="0.1035%" height="15" fill="rgb(212,90,42)" fg:x="1131" fg:w="2"/><text x="58.7601%" y="446.50"></text></g><g><title>at::native::slice (libtorch_cpu.so) (2 samples, 0.10%)</title><rect x="58.5101%" y="452" width="0.1035%" height="15" fill="rgb(218,164,37)" fg:x="1131" fg:w="2"/><text x="58.7601%" y="462.50"></text></g><g><title>forward (vllm/model_executor/layers/logits_processor.py:52) (5 samples, 0.26%)</title><rect x="58.4066%" y="292" width="0.2587%" height="15" fill="rgb(246,65,34)" fg:x="1129" fg:w="5"/><text x="58.6566%" y="302.50"></text></g><g><title>_get_logits (vllm/model_executor/layers/logits_processor.py:71) (4 samples, 0.21%)</title><rect x="58.4584%" y="308" width="0.2069%" height="15" fill="rgb(231,100,33)" fg:x="1130" fg:w="4"/><text x="58.7084%" y="318.50"></text></g><g><title>torch::autograd::THPVariable_getitem (libtorch_python.so) (4 samples, 0.21%)</title><rect x="58.4584%" y="324" width="0.2069%" height="15" fill="rgb(228,126,14)" fg:x="1130" fg:w="4"/><text x="58.7084%" y="334.50"></text></g><g><title>execute_model (vllm/worker/model_runner.py:614) (9 samples, 0.47%)</title><rect x="58.3032%" y="228" width="0.4656%" height="15" fill="rgb(215,173,21)" fg:x="1127" fg:w="9"/><text x="58.5532%" y="238.50"></text></g><g><title>compute_logits (vllm/model_executor/models/opt.py:312) (8 samples, 0.41%)</title><rect x="58.3549%" y="244" width="0.4139%" height="15" fill="rgb(210,6,40)" fg:x="1128" fg:w="8"/><text x="58.6049%" y="254.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (8 samples, 0.41%)</title><rect x="58.3549%" y="260" width="0.4139%" height="15" fill="rgb(212,48,18)" fg:x="1128" fg:w="8"/><text x="58.6049%" y="270.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (8 samples, 0.41%)</title><rect x="58.3549%" y="276" width="0.4139%" height="15" fill="rgb(230,214,11)" fg:x="1128" fg:w="8"/><text x="58.6049%" y="286.50"></text></g><g><title>forward (vllm/model_executor/layers/logits_processor.py:55) (2 samples, 0.10%)</title><rect x="58.6653%" y="292" width="0.1035%" height="15" fill="rgb(254,105,39)" fg:x="1134" fg:w="2"/><text x="58.9153%" y="302.50"></text></g><g><title>from_sampling_metadata (vllm/model_executor/sampling_metadata.py:130) (3 samples, 0.16%)</title><rect x="59.0274%" y="308" width="0.1552%" height="15" fill="rgb(245,158,5)" fg:x="1141" fg:w="3"/><text x="59.2774%" y="318.50"></text></g><g><title>from_sampling_metadata (vllm/model_executor/sampling_metadata.py:132) (2 samples, 0.10%)</title><rect x="59.1826%" y="308" width="0.1035%" height="15" fill="rgb(249,208,11)" fg:x="1144" fg:w="2"/><text x="59.4326%" y="318.50"></text></g><g><title>from_sampling_metadata (vllm/model_executor/sampling_metadata.py:164) (2 samples, 0.10%)</title><rect x="59.4413%" y="308" width="0.1035%" height="15" fill="rgb(210,39,28)" fg:x="1149" fg:w="2"/><text x="59.6913%" y="318.50"></text></g><g><title>from_sampling_metadata (vllm/model_executor/sampling_metadata.py:169) (2 samples, 0.10%)</title><rect x="59.7517%" y="308" width="0.1035%" height="15" fill="rgb(211,56,53)" fg:x="1155" fg:w="2"/><text x="60.0017%" y="318.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:218) (21 samples, 1.09%)</title><rect x="60.6311%" y="324" width="1.0864%" height="15" fill="rgb(226,201,30)" fg:x="1172" fg:w="21"/><text x="60.8811%" y="334.50"></text></g><g><title>&lt;listcomp&gt; (vllm/model_executor/sampling_metadata.py:219) (21 samples, 1.09%)</title><rect x="60.6311%" y="340" width="1.0864%" height="15" fill="rgb(239,101,34)" fg:x="1172" fg:w="21"/><text x="60.8811%" y="350.50"></text></g><g><title>gc_collect_with_callback (python3.10) (3 samples, 0.16%)</title><rect x="62.4935%" y="356" width="0.1552%" height="15" fill="rgb(226,209,5)" fg:x="1208" fg:w="3"/><text x="62.7435%" y="366.50"></text></g><g><title>gc_collect_main (python3.10) (3 samples, 0.16%)</title><rect x="62.4935%" y="372" width="0.1552%" height="15" fill="rgb(250,105,47)" fg:x="1208" fg:w="3"/><text x="62.7435%" y="382.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:223) (20 samples, 1.03%)</title><rect x="61.7175%" y="324" width="1.0347%" height="15" fill="rgb(230,72,3)" fg:x="1193" fg:w="20"/><text x="61.9675%" y="334.50"></text></g><g><title>&lt;listcomp&gt; (vllm/model_executor/sampling_metadata.py:224) (20 samples, 1.03%)</title><rect x="61.7175%" y="340" width="1.0347%" height="15" fill="rgb(232,218,39)" fg:x="1193" fg:w="20"/><text x="61.9675%" y="350.50"></text></g><g><title>malloc (libc-2.31.so) (2 samples, 0.10%)</title><rect x="62.6487%" y="356" width="0.1035%" height="15" fill="rgb(248,166,6)" fg:x="1211" fg:w="2"/><text x="62.8987%" y="366.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:228) (3 samples, 0.16%)</title><rect x="62.7522%" y="324" width="0.1552%" height="15" fill="rgb(247,89,20)" fg:x="1213" fg:w="3"/><text x="63.0022%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_tensor (libtorch_python.so) (3 samples, 0.16%)</title><rect x="62.7522%" y="340" width="0.1552%" height="15" fill="rgb(248,130,54)" fg:x="1213" fg:w="3"/><text x="63.0022%" y="350.50"></text></g><g><title>torch::utils::tensor_ctor (libtorch_python.so) (2 samples, 0.10%)</title><rect x="62.8039%" y="356" width="0.1035%" height="15" fill="rgb(234,196,4)" fg:x="1214" fg:w="2"/><text x="63.0539%" y="366.50"></text></g><g><title>torch::utils::(anonymous namespace)::internal_new_from_data (libtorch_python.so) (2 samples, 0.10%)</title><rect x="62.8039%" y="372" width="0.1035%" height="15" fill="rgb(250,143,31)" fg:x="1214" fg:w="2"/><text x="63.0539%" y="382.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:234) (3 samples, 0.16%)</title><rect x="62.9074%" y="324" width="0.1552%" height="15" fill="rgb(211,110,34)" fg:x="1216" fg:w="3"/><text x="63.1574%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_tensor (libtorch_python.so) (2 samples, 0.10%)</title><rect x="62.9591%" y="340" width="0.1035%" height="15" fill="rgb(215,124,48)" fg:x="1217" fg:w="2"/><text x="63.2091%" y="350.50"></text></g><g><title>torch::utils::tensor_ctor (libtorch_python.so) (2 samples, 0.10%)</title><rect x="62.9591%" y="356" width="0.1035%" height="15" fill="rgb(216,46,13)" fg:x="1217" fg:w="2"/><text x="63.2091%" y="366.50"></text></g><g><title>torch::utils::(anonymous namespace)::internal_new_from_data (libtorch_python.so) (2 samples, 0.10%)</title><rect x="62.9591%" y="372" width="0.1035%" height="15" fill="rgb(205,184,25)" fg:x="1217" fg:w="2"/><text x="63.2091%" y="382.50"></text></g><g><title>torch::utils::(anonymous namespace)::recursive_store (libtorch_python.so) (2 samples, 0.10%)</title><rect x="62.9591%" y="388" width="0.1035%" height="15" fill="rgb(228,1,10)" fg:x="1217" fg:w="2"/><text x="63.2091%" y="398.50"></text></g><g><title>torch::utils::(anonymous namespace)::recursive_store (libtorch_python.so) (2 samples, 0.10%)</title><rect x="62.9591%" y="404" width="0.1035%" height="15" fill="rgb(213,116,27)" fg:x="1217" fg:w="2"/><text x="63.2091%" y="414.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:240) (2 samples, 0.10%)</title><rect x="63.0626%" y="324" width="0.1035%" height="15" fill="rgb(241,95,50)" fg:x="1219" fg:w="2"/><text x="63.3126%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_tensor (libtorch_python.so) (2 samples, 0.10%)</title><rect x="63.0626%" y="340" width="0.1035%" height="15" fill="rgb(238,48,32)" fg:x="1219" fg:w="2"/><text x="63.3126%" y="350.50"></text></g><g><title>torch::utils::tensor_ctor (libtorch_python.so) (2 samples, 0.10%)</title><rect x="63.0626%" y="356" width="0.1035%" height="15" fill="rgb(235,113,49)" fg:x="1219" fg:w="2"/><text x="63.3126%" y="366.50"></text></g><g><title>torch::utils::(anonymous namespace)::internal_new_from_data (libtorch_python.so) (2 samples, 0.10%)</title><rect x="63.0626%" y="372" width="0.1035%" height="15" fill="rgb(205,127,43)" fg:x="1219" fg:w="2"/><text x="63.3126%" y="382.50"></text></g><g><title>0x7f8f9d2eada0 (libtorch_python.so) (2 samples, 0.10%)</title><rect x="77.5996%" y="436" width="0.1035%" height="15" fill="rgb(250,162,2)" fg:x="1500" fg:w="2"/><text x="77.8496%" y="446.50"></text></g><g><title>0x7f8f9d2f1600 (libtorch_python.so) (2 samples, 0.10%)</title><rect x="77.7031%" y="436" width="0.1035%" height="15" fill="rgb(220,13,41)" fg:x="1502" fg:w="2"/><text x="77.9531%" y="446.50"></text></g><g><title>torch::get_symfloat_class (libtorch_python.so) (3 samples, 0.16%)</title><rect x="77.8065%" y="436" width="0.1552%" height="15" fill="rgb(249,221,25)" fg:x="1504" fg:w="3"/><text x="78.0565%" y="446.50"></text></g><g><title>torch::utils::(anonymous namespace)::recursive_store (libtorch_python.so) (257 samples, 13.30%)</title><rect x="66.6839%" y="420" width="13.2954%" height="15" fill="rgb(215,208,19)" fg:x="1289" fg:w="257"/><text x="66.9339%" y="430.50">torch::utils::(anony..</text></g><g><title>torch::utils::store_scalar (libtorch_python.so) (39 samples, 2.02%)</title><rect x="77.9617%" y="436" width="2.0176%" height="15" fill="rgb(236,175,2)" fg:x="1507" fg:w="39"/><text x="78.2117%" y="446.50">t..</text></g><g><title>THPUtils_unpackLong (libtorch_python.so) (18 samples, 0.93%)</title><rect x="79.0481%" y="452" width="0.9312%" height="15" fill="rgb(241,52,2)" fg:x="1528" fg:w="18"/><text x="79.2981%" y="462.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:276) (324 samples, 16.76%)</title><rect x="63.2695%" y="324" width="16.7615%" height="15" fill="rgb(248,140,14)" fg:x="1223" fg:w="324"/><text x="63.5195%" y="334.50">from_lists (vllm/model_exe..</text></g><g><title>torch::autograd::THPVariable_tensor (libtorch_python.so) (324 samples, 16.76%)</title><rect x="63.2695%" y="340" width="16.7615%" height="15" fill="rgb(253,22,42)" fg:x="1223" fg:w="324"/><text x="63.5195%" y="350.50">torch::autograd::THPVariab..</text></g><g><title>torch::utils::tensor_ctor (libtorch_python.so) (324 samples, 16.76%)</title><rect x="63.2695%" y="356" width="16.7615%" height="15" fill="rgb(234,61,47)" fg:x="1223" fg:w="324"/><text x="63.5195%" y="366.50">torch::utils::tensor_ctor ..</text></g><g><title>torch::utils::(anonymous namespace)::internal_new_from_data (libtorch_python.so) (323 samples, 16.71%)</title><rect x="63.3213%" y="372" width="16.7098%" height="15" fill="rgb(208,226,15)" fg:x="1224" fg:w="323"/><text x="63.5713%" y="382.50">torch::utils::(anonymous n..</text></g><g><title>torch::utils::(anonymous namespace)::recursive_store (libtorch_python.so) (323 samples, 16.71%)</title><rect x="63.3213%" y="388" width="16.7098%" height="15" fill="rgb(217,221,4)" fg:x="1224" fg:w="323"/><text x="63.5713%" y="398.50">torch::utils::(anonymous n..</text></g><g><title>torch::utils::(anonymous namespace)::recursive_store (libtorch_python.so) (323 samples, 16.71%)</title><rect x="63.3213%" y="404" width="16.7098%" height="15" fill="rgb(212,174,34)" fg:x="1224" fg:w="323"/><text x="63.5713%" y="414.50">torch::utils::(anonymous n..</text></g><g><title>0x7f8f9d2f9570 (libtorch_python.so) (2 samples, 0.10%)</title><rect x="83.0833%" y="420" width="0.1035%" height="15" fill="rgb(253,83,4)" fg:x="1606" fg:w="2"/><text x="83.3333%" y="430.50"></text></g><g><title>0x7f8f9d2f1600 (libtorch_python.so) (3 samples, 0.16%)</title><rect x="93.3264%" y="436" width="0.1552%" height="15" fill="rgb(250,195,49)" fg:x="1804" fg:w="3"/><text x="93.5764%" y="446.50"></text></g><g><title>torch::utils::(anonymous namespace)::recursive_store (libtorch_python.so) (242 samples, 12.52%)</title><rect x="83.1868%" y="420" width="12.5194%" height="15" fill="rgb(241,192,25)" fg:x="1608" fg:w="242"/><text x="83.4368%" y="430.50">torch::utils::(anon..</text></g><g><title>torch::utils::store_scalar (libtorch_python.so) (41 samples, 2.12%)</title><rect x="93.5851%" y="436" width="2.1211%" height="15" fill="rgb(208,124,10)" fg:x="1809" fg:w="41"/><text x="93.8351%" y="446.50">t..</text></g><g><title>THPUtils_unpackLong (libtorch_python.so) (14 samples, 0.72%)</title><rect x="94.9819%" y="452" width="0.7243%" height="15" fill="rgb(222,33,0)" fg:x="1836" fg:w="14"/><text x="95.2319%" y="462.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:282) (304 samples, 15.73%)</title><rect x="80.0310%" y="324" width="15.7268%" height="15" fill="rgb(234,209,28)" fg:x="1547" fg:w="304"/><text x="80.2810%" y="334.50">from_lists (vllm/model_e..</text></g><g><title>torch::autograd::THPVariable_tensor (libtorch_python.so) (304 samples, 15.73%)</title><rect x="80.0310%" y="340" width="15.7268%" height="15" fill="rgb(224,11,23)" fg:x="1547" fg:w="304"/><text x="80.2810%" y="350.50">torch::autograd::THPVari..</text></g><g><title>torch::utils::tensor_ctor (libtorch_python.so) (304 samples, 15.73%)</title><rect x="80.0310%" y="356" width="15.7268%" height="15" fill="rgb(232,99,1)" fg:x="1547" fg:w="304"/><text x="80.2810%" y="366.50">torch::utils::tensor_cto..</text></g><g><title>torch::utils::(anonymous namespace)::internal_new_from_data (libtorch_python.so) (304 samples, 15.73%)</title><rect x="80.0310%" y="372" width="15.7268%" height="15" fill="rgb(237,95,45)" fg:x="1547" fg:w="304"/><text x="80.2810%" y="382.50">torch::utils::(anonymous..</text></g><g><title>torch::utils::(anonymous namespace)::recursive_store (libtorch_python.so) (304 samples, 15.73%)</title><rect x="80.0310%" y="388" width="15.7268%" height="15" fill="rgb(208,109,11)" fg:x="1547" fg:w="304"/><text x="80.2810%" y="398.50">torch::utils::(anonymous..</text></g><g><title>torch::utils::(anonymous namespace)::recursive_store (libtorch_python.so) (304 samples, 15.73%)</title><rect x="80.0310%" y="404" width="15.7268%" height="15" fill="rgb(216,190,48)" fg:x="1547" fg:w="304"/><text x="80.2810%" y="414.50">torch::utils::(anonymous..</text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:296) (2 samples, 0.10%)</title><rect x="95.7579%" y="324" width="0.1035%" height="15" fill="rgb(251,171,36)" fg:x="1851" fg:w="2"/><text x="96.0079%" y="334.50"></text></g><g><title>GetterBase&lt;PropertyT&gt;::getter (libtorch_python.so) (2 samples, 0.10%)</title><rect x="95.7579%" y="340" width="0.1035%" height="15" fill="rgb(230,62,22)" fg:x="1851" fg:w="2"/><text x="96.0079%" y="350.50"></text></g><g><title>forward (vllm/model_executor/layers/sampler.py:41) (717 samples, 37.09%)</title><rect x="58.8722%" y="292" width="37.0926%" height="15" fill="rgb(225,114,35)" fg:x="1138" fg:w="717"/><text x="59.1222%" y="302.50">forward (vllm/model_executor/layers/sampler.py:41)</text></g><g><title>from_sampling_metadata (vllm/model_executor/sampling_metadata.py:196) (696 samples, 36.01%)</title><rect x="59.9586%" y="308" width="36.0062%" height="15" fill="rgb(215,118,42)" fg:x="1159" fg:w="696"/><text x="60.2086%" y="318.50">from_sampling_metadata (vllm/model_executor/sampling_metada..</text></g><g><title>_sample_with_torch (vllm/model_executor/layers/sampler.py:319) (3 samples, 0.16%)</title><rect x="96.1718%" y="324" width="0.1552%" height="15" fill="rgb(243,119,21)" fg:x="1859" fg:w="3"/><text x="96.4218%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_getitem (libtorch_python.so) (2 samples, 0.10%)</title><rect x="96.2235%" y="340" width="0.1035%" height="15" fill="rgb(252,177,53)" fg:x="1860" fg:w="2"/><text x="96.4735%" y="350.50"></text></g><g><title>torch::autograd::applySlicing (libtorch_python.so) (2 samples, 0.10%)</title><rect x="96.2235%" y="356" width="0.1035%" height="15" fill="rgb(237,209,29)" fg:x="1860" fg:w="2"/><text x="96.4735%" y="366.50"></text></g><g><title>at::indexing::handleDimInMultiDimIndexing (libtorch_python.so) (2 samples, 0.10%)</title><rect x="96.2235%" y="372" width="0.1035%" height="15" fill="rgb(212,65,23)" fg:x="1860" fg:w="2"/><text x="96.4735%" y="382.50"></text></g><g><title>_sample_with_torch (vllm/model_executor/layers/sampler.py:320) (2 samples, 0.10%)</title><rect x="96.3270%" y="324" width="0.1035%" height="15" fill="rgb(230,222,46)" fg:x="1862" fg:w="2"/><text x="96.5770%" y="334.50"></text></g><g><title>__len__ (torch/_tensor.py:978) (2 samples, 0.10%)</title><rect x="96.3270%" y="340" width="0.1035%" height="15" fill="rgb(215,135,32)" fg:x="1862" fg:w="2"/><text x="96.5770%" y="350.50"></text></g><g><title>_sample_with_torch (vllm/model_executor/layers/sampler.py:329) (2 samples, 0.10%)</title><rect x="96.4304%" y="324" width="0.1035%" height="15" fill="rgb(246,101,22)" fg:x="1864" fg:w="2"/><text x="96.6804%" y="334.50"></text></g><g><title>forward (vllm/model_executor/layers/sampler.py:71) (11 samples, 0.57%)</title><rect x="96.0166%" y="292" width="0.5691%" height="15" fill="rgb(206,107,13)" fg:x="1856" fg:w="11"/><text x="96.2666%" y="302.50"></text></g><g><title>_sample (vllm/model_executor/layers/sampler.py:461) (11 samples, 0.57%)</title><rect x="96.0166%" y="308" width="0.5691%" height="15" fill="rgb(250,100,44)" fg:x="1856" fg:w="11"/><text x="96.2666%" y="318.50"></text></g><g><title>_get_logprobs (vllm/model_executor/layers/sampler.py:498) (2 samples, 0.10%)</title><rect x="96.6891%" y="308" width="0.1035%" height="15" fill="rgb(231,147,38)" fg:x="1869" fg:w="2"/><text x="96.9391%" y="318.50"></text></g><g><title>_get_logprobs (vllm/model_executor/layers/sampler.py:506) (2 samples, 0.10%)</title><rect x="96.7926%" y="308" width="0.1035%" height="15" fill="rgb(229,8,40)" fg:x="1871" fg:w="2"/><text x="97.0426%" y="318.50"></text></g><g><title>torch::autograd::THPVariable_getitem (libtorch_python.so) (2 samples, 0.10%)</title><rect x="96.7926%" y="324" width="0.1035%" height="15" fill="rgb(221,135,30)" fg:x="1871" fg:w="2"/><text x="97.0426%" y="334.50"></text></g><g><title>torch::autograd::applySlicing (libtorch_python.so) (2 samples, 0.10%)</title><rect x="96.7926%" y="340" width="0.1035%" height="15" fill="rgb(249,193,18)" fg:x="1871" fg:w="2"/><text x="97.0426%" y="350.50"></text></g><g><title>torch::utils::indexing_tensor_from_data (libtorch_python.so) (2 samples, 0.10%)</title><rect x="96.7926%" y="356" width="0.1035%" height="15" fill="rgb(209,133,39)" fg:x="1871" fg:w="2"/><text x="97.0426%" y="366.50"></text></g><g><title>torch::autograd::THPVariable_getitem (libtorch_python.so) (6 samples, 0.31%)</title><rect x="97.2064%" y="324" width="0.3104%" height="15" fill="rgb(232,100,14)" fg:x="1879" fg:w="6"/><text x="97.4564%" y="334.50"></text></g><g><title>at::indexing::get_item (libtorch_python.so) (4 samples, 0.21%)</title><rect x="97.3099%" y="340" width="0.2069%" height="15" fill="rgb(224,185,1)" fg:x="1881" fg:w="4"/><text x="97.5599%" y="350.50"></text></g><g><title>at::indexing::impl::applySelect (libtorch_python.so) (4 samples, 0.21%)</title><rect x="97.3099%" y="356" width="0.2069%" height="15" fill="rgb(223,139,8)" fg:x="1881" fg:w="4"/><text x="97.5599%" y="366.50"></text></g><g><title>at::_ops::select_int::call (libtorch_cpu.so) (4 samples, 0.21%)</title><rect x="97.3099%" y="372" width="0.2069%" height="15" fill="rgb(232,213,38)" fg:x="1881" fg:w="4"/><text x="97.5599%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select(at::Tensor const&amp;, long, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt)&gt;::call (libtorch_cpu.so) (3 samples, 0.16%)</title><rect x="97.3616%" y="388" width="0.1552%" height="15" fill="rgb(207,94,22)" fg:x="1882" fg:w="3"/><text x="97.6116%" y="398.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_int_select (libtorch_cpu.so) (3 samples, 0.16%)</title><rect x="97.3616%" y="404" width="0.1552%" height="15" fill="rgb(219,183,54)" fg:x="1882" fg:w="3"/><text x="97.6116%" y="414.50"></text></g><g><title>at::native::select_symint (libtorch_cpu.so) (3 samples, 0.16%)</title><rect x="97.3616%" y="420" width="0.1552%" height="15" fill="rgb(216,185,54)" fg:x="1882" fg:w="3"/><text x="97.6116%" y="430.50"></text></g><g><title>operator new (new_op.cc:50) (2 samples, 0.10%)</title><rect x="97.4133%" y="436" width="0.1035%" height="15" fill="rgb(254,217,39)" fg:x="1883" fg:w="2"/><text x="97.6633%" y="446.50"></text></g><g><title>malloc (libc-2.31.so) (2 samples, 0.10%)</title><rect x="97.4133%" y="452" width="0.1035%" height="15" fill="rgb(240,178,23)" fg:x="1883" fg:w="2"/><text x="97.6633%" y="462.50"></text></g><g><title>_get_logprobs (vllm/model_executor/layers/sampler.py:567) (9 samples, 0.47%)</title><rect x="97.1547%" y="308" width="0.4656%" height="15" fill="rgb(218,11,47)" fg:x="1878" fg:w="9"/><text x="97.4047%" y="318.50"></text></g><g><title>torch::autograd::THPVariable_item (libtorch_python.so) (2 samples, 0.10%)</title><rect x="97.5168%" y="324" width="0.1035%" height="15" fill="rgb(218,51,51)" fg:x="1885" fg:w="2"/><text x="97.7668%" y="334.50"></text></g><g><title>torch::check_has_torch_function (libtorch_python.so) (2 samples, 0.10%)</title><rect x="97.5168%" y="340" width="0.1035%" height="15" fill="rgb(238,126,27)" fg:x="1885" fg:w="2"/><text x="97.7668%" y="350.50"></text></g><g><title>&lt;dictcomp&gt; (vllm/model_executor/layers/sampler.py:578) (2 samples, 0.10%)</title><rect x="97.7755%" y="324" width="0.1035%" height="15" fill="rgb(249,202,22)" fg:x="1890" fg:w="2"/><text x="98.0255%" y="334.50"></text></g><g><title>_get_logprobs (vllm/model_executor/layers/sampler.py:577) (6 samples, 0.31%)</title><rect x="97.6203%" y="308" width="0.3104%" height="15" fill="rgb(254,195,49)" fg:x="1887" fg:w="6"/><text x="97.8703%" y="318.50"></text></g><g><title>_get_logprobs (vllm/model_executor/layers/sampler.py:579) (14 samples, 0.72%)</title><rect x="97.9307%" y="308" width="0.7243%" height="15" fill="rgb(208,123,14)" fg:x="1893" fg:w="14"/><text x="98.1807%" y="318.50"></text></g><g><title>gc_collect_with_callback (python3.10) (14 samples, 0.72%)</title><rect x="97.9307%" y="324" width="0.7243%" height="15" fill="rgb(224,200,8)" fg:x="1893" fg:w="14"/><text x="98.1807%" y="334.50"></text></g><g><title>gc_collect_main (python3.10) (14 samples, 0.72%)</title><rect x="97.9307%" y="340" width="0.7243%" height="15" fill="rgb(217,61,36)" fg:x="1893" fg:w="14"/><text x="98.1807%" y="350.50"></text></g><g><title>forward (vllm/model_executor/layers/sampler.py:74) (42 samples, 2.17%)</title><rect x="96.5856%" y="292" width="2.1728%" height="15" fill="rgb(206,35,45)" fg:x="1867" fg:w="42"/><text x="96.8356%" y="302.50">f..</text></g><g><title>_build_sampler_output (vllm/model_executor/layers/sampler.py:601) (9 samples, 0.47%)</title><rect x="98.7584%" y="308" width="0.4656%" height="15" fill="rgb(217,65,33)" fg:x="1909" fg:w="9"/><text x="99.0084%" y="318.50"></text></g><g><title>gc_collect_with_callback (python3.10) (7 samples, 0.36%)</title><rect x="98.8619%" y="324" width="0.3621%" height="15" fill="rgb(222,158,48)" fg:x="1911" fg:w="7"/><text x="99.1119%" y="334.50"></text></g><g><title>gc_collect_main (python3.10) (7 samples, 0.36%)</title><rect x="98.8619%" y="340" width="0.3621%" height="15" fill="rgb(254,2,54)" fg:x="1911" fg:w="7"/><text x="99.1119%" y="350.50"></text></g><g><title>__init__ (vllm/sequence.py:489) (3 samples, 0.16%)</title><rect x="99.3275%" y="324" width="0.1552%" height="15" fill="rgb(250,143,38)" fg:x="1920" fg:w="3"/><text x="99.5775%" y="334.50"></text></g><g><title>gc_collect_with_callback (python3.10) (3 samples, 0.16%)</title><rect x="99.3275%" y="340" width="0.1552%" height="15" fill="rgb(248,25,0)" fg:x="1920" fg:w="3"/><text x="99.5775%" y="350.50"></text></g><g><title>gc_collect_main (python3.10) (3 samples, 0.16%)</title><rect x="99.3275%" y="356" width="0.1552%" height="15" fill="rgb(206,152,27)" fg:x="1920" fg:w="3"/><text x="99.5775%" y="366.50"></text></g><g><title>_build_sampler_output (vllm/model_executor/layers/sampler.py:605) (7 samples, 0.36%)</title><rect x="99.2240%" y="308" width="0.3621%" height="15" fill="rgb(240,77,30)" fg:x="1918" fg:w="7"/><text x="99.4740%" y="318.50"></text></g><g><title>gc_collect_with_callback (python3.10) (2 samples, 0.10%)</title><rect x="99.4827%" y="324" width="0.1035%" height="15" fill="rgb(231,5,3)" fg:x="1923" fg:w="2"/><text x="99.7327%" y="334.50"></text></g><g><title>gc_collect_main (python3.10) (2 samples, 0.10%)</title><rect x="99.4827%" y="340" width="0.1035%" height="15" fill="rgb(207,226,32)" fg:x="1923" fg:w="2"/><text x="99.7327%" y="350.50"></text></g><g><title>run (concurrent/futures/thread.py:58) (1,049 samples, 54.27%)</title><rect x="45.4734%" y="164" width="54.2680%" height="15" fill="rgb(222,207,47)" fg:x="879" fg:w="1049"/><text x="45.7234%" y="174.50">run (concurrent/futures/thread.py:58)</text></g><g><title>decorate_context (torch/utils/_contextlib.py:115) (1,049 samples, 54.27%)</title><rect x="45.4734%" y="180" width="54.2680%" height="15" fill="rgb(229,115,45)" fg:x="879" fg:w="1049"/><text x="45.7234%" y="190.50">decorate_context (torch/utils/_contextlib.py:115)</text></g><g><title>execute_model (vllm/worker/worker.py:209) (1,049 samples, 54.27%)</title><rect x="45.4734%" y="196" width="54.2680%" height="15" fill="rgb(224,191,6)" fg:x="879" fg:w="1049"/><text x="45.7234%" y="206.50">execute_model (vllm/worker/worker.py:209)</text></g><g><title>decorate_context (torch/utils/_contextlib.py:115) (1,049 samples, 54.27%)</title><rect x="45.4734%" y="212" width="54.2680%" height="15" fill="rgb(230,227,24)" fg:x="879" fg:w="1049"/><text x="45.7234%" y="222.50">decorate_context (torch/utils/_contextlib.py:115)</text></g><g><title>execute_model (vllm/worker/model_runner.py:621) (792 samples, 40.97%)</title><rect x="58.7688%" y="228" width="40.9726%" height="15" fill="rgb(228,80,19)" fg:x="1136" fg:w="792"/><text x="59.0188%" y="238.50">execute_model (vllm/worker/model_runner.py:621)</text></g><g><title>sample (vllm/model_executor/models/opt.py:321) (792 samples, 40.97%)</title><rect x="58.7688%" y="244" width="40.9726%" height="15" fill="rgb(247,229,0)" fg:x="1136" fg:w="792"/><text x="59.0188%" y="254.50">sample (vllm/model_executor/models/opt.py:321)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (790 samples, 40.87%)</title><rect x="58.8722%" y="260" width="40.8691%" height="15" fill="rgb(237,194,15)" fg:x="1138" fg:w="790"/><text x="59.1222%" y="270.50">_wrapped_call_impl (torch/nn/modules/module.py:1518)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (790 samples, 40.87%)</title><rect x="58.8722%" y="276" width="40.8691%" height="15" fill="rgb(219,203,20)" fg:x="1138" fg:w="790"/><text x="59.1222%" y="286.50">_call_impl (torch/nn/modules/module.py:1527)</text></g><g><title>forward (vllm/model_executor/layers/sampler.py:76) (19 samples, 0.98%)</title><rect x="98.7584%" y="292" width="0.9829%" height="15" fill="rgb(234,128,8)" fg:x="1909" fg:w="19"/><text x="99.0084%" y="302.50"></text></g><g><title>_build_sampler_output (vllm/model_executor/layers/sampler.py:607) (3 samples, 0.16%)</title><rect x="99.5861%" y="308" width="0.1552%" height="15" fill="rgb(248,202,8)" fg:x="1925" fg:w="3"/><text x="99.8361%" y="318.50"></text></g><g><title>_worker (concurrent/futures/thread.py:83) (1,052 samples, 54.42%)</title><rect x="45.4734%" y="148" width="54.4232%" height="15" fill="rgb(206,104,37)" fg:x="879" fg:w="1052"/><text x="45.7234%" y="158.50">_worker (concurrent/futures/thread.py:83)</text></g><g><title>run (concurrent/futures/thread.py:64) (3 samples, 0.16%)</title><rect x="99.7413%" y="164" width="0.1552%" height="15" fill="rgb(223,8,27)" fg:x="1928" fg:w="3"/><text x="99.9913%" y="174.50"></text></g><g><title>set_result (concurrent/futures/_base.py:544) (3 samples, 0.16%)</title><rect x="99.7413%" y="180" width="0.1552%" height="15" fill="rgb(216,217,28)" fg:x="1928" fg:w="3"/><text x="99.9913%" y="190.50"></text></g><g><title>all (1,933 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(249,199,1)" fg:x="0" fg:w="1933"/><text x="0.2500%" y="62.50"></text></g><g><title>clone (libc-2.31.so) (1,054 samples, 54.53%)</title><rect x="45.4734%" y="68" width="54.5266%" height="15" fill="rgb(240,85,17)" fg:x="879" fg:w="1054"/><text x="45.7234%" y="78.50">clone (libc-2.31.so)</text></g><g><title>thread_run (python3.10) (1,054 samples, 54.53%)</title><rect x="45.4734%" y="84" width="54.5266%" height="15" fill="rgb(206,108,45)" fg:x="879" fg:w="1054"/><text x="45.7234%" y="94.50">thread_run (python3.10)</text></g><g><title>_bootstrap (threading.py:973) (1,054 samples, 54.53%)</title><rect x="45.4734%" y="100" width="54.5266%" height="15" fill="rgb(245,210,41)" fg:x="879" fg:w="1054"/><text x="45.7234%" y="110.50">_bootstrap (threading.py:973)</text></g><g><title>_bootstrap_inner (threading.py:1016) (1,054 samples, 54.53%)</title><rect x="45.4734%" y="116" width="54.5266%" height="15" fill="rgb(206,13,37)" fg:x="879" fg:w="1054"/><text x="45.7234%" y="126.50">_bootstrap_inner (threading.py:1016)</text></g><g><title>run (threading.py:953) (1,054 samples, 54.53%)</title><rect x="45.4734%" y="132" width="54.5266%" height="15" fill="rgb(250,61,18)" fg:x="879" fg:w="1054"/><text x="45.7234%" y="142.50">run (threading.py:953)</text></g><g><title>_worker (concurrent/futures/thread.py:90) (2 samples, 0.10%)</title><rect x="99.8965%" y="148" width="0.1035%" height="15" fill="rgb(235,172,48)" fg:x="1931" fg:w="2"/><text x="100.1465%" y="158.50"></text></g></svg></svg>