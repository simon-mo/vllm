<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="650" onload="init(evt)" viewBox="0 0 1200 650" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="650" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record --pid 2098035</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="639.00"> </text><svg id="frames" x="10" width="1180" total_samples="4133"><g><title>_worker (concurrent/futures/thread.py:81) (1,018 samples, 24.63%)</title><rect x="0.0000%" y="116" width="24.6310%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1018"/><text x="0.2500%" y="126.50">_worker (concurrent/futures/thread.py:8..</text></g><g><title>decorate_context (torch/utils/_contextlib.py:114) (6 samples, 0.15%)</title><rect x="24.6552%" y="180" width="0.1452%" height="15" fill="rgb(217,0,24)" fg:x="1019" fg:w="6"/><text x="24.9052%" y="190.50"></text></g><g><title>execute_model (vllm/worker/model_runner.py:595) (6 samples, 0.15%)</title><rect x="24.9456%" y="196" width="0.1452%" height="15" fill="rgb(221,193,54)" fg:x="1031" fg:w="6"/><text x="25.1956%" y="206.50"></text></g><g><title>prepare_input_tensors (vllm/worker/model_runner.py:539) (6 samples, 0.15%)</title><rect x="24.9456%" y="212" width="0.1452%" height="15" fill="rgb(248,212,6)" fg:x="1031" fg:w="6"/><text x="25.1956%" y="222.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:196) (5 samples, 0.12%)</title><rect x="25.1875%" y="436" width="0.1210%" height="15" fill="rgb(208,68,35)" fg:x="1041" fg:w="5"/><text x="25.4375%" y="446.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2543) (5 samples, 0.12%)</title><rect x="25.1875%" y="452" width="0.1210%" height="15" fill="rgb(232,128,0)" fg:x="1041" fg:w="5"/><text x="25.4375%" y="462.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:162) (7 samples, 0.17%)</title><rect x="25.1633%" y="388" width="0.1694%" height="15" fill="rgb(207,160,47)" fg:x="1040" fg:w="7"/><text x="25.4133%" y="398.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (7 samples, 0.17%)</title><rect x="25.1633%" y="404" width="0.1694%" height="15" fill="rgb(228,23,34)" fg:x="1040" fg:w="7"/><text x="25.4133%" y="414.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (7 samples, 0.17%)</title><rect x="25.1633%" y="420" width="0.1694%" height="15" fill="rgb(218,30,26)" fg:x="1040" fg:w="7"/><text x="25.4133%" y="430.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:103) (6 samples, 0.15%)</title><rect x="25.3811%" y="436" width="0.1452%" height="15" fill="rgb(220,122,19)" fg:x="1049" fg:w="6"/><text x="25.6311%" y="446.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (6 samples, 0.15%)</title><rect x="25.3811%" y="452" width="0.1452%" height="15" fill="rgb(250,228,42)" fg:x="1049" fg:w="6"/><text x="25.6311%" y="462.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (6 samples, 0.15%)</title><rect x="25.3811%" y="468" width="0.1452%" height="15" fill="rgb(240,193,28)" fg:x="1049" fg:w="6"/><text x="25.6311%" y="478.50"></text></g><g><title>forward (vllm/model_executor/layers/linear.py:215) (6 samples, 0.15%)</title><rect x="25.3811%" y="484" width="0.1452%" height="15" fill="rgb(216,20,37)" fg:x="1049" fg:w="6"/><text x="25.6311%" y="494.50"></text></g><g><title>apply_weights (vllm/model_executor/layers/linear.py:79) (6 samples, 0.15%)</title><rect x="25.3811%" y="500" width="0.1452%" height="15" fill="rgb(206,188,39)" fg:x="1049" fg:w="6"/><text x="25.6311%" y="510.50"></text></g><g><title>_memory_efficient_attention_forward (xformers/ops/fmha/__init__.py:334) (8 samples, 0.19%)</title><rect x="25.6230%" y="548" width="0.1936%" height="15" fill="rgb(217,207,13)" fg:x="1059" fg:w="8"/><text x="25.8730%" y="558.50"></text></g><g><title>not_supported_reasons (xformers/ops/fmha/common.py:304) (5 samples, 0.12%)</title><rect x="25.8650%" y="612" width="0.1210%" height="15" fill="rgb(231,73,38)" fg:x="1069" fg:w="5"/><text x="26.1150%" y="622.50"></text></g><g><title>not_supported_reasons (xformers/ops/fmha/decoder.py:41) (7 samples, 0.17%)</title><rect x="25.8408%" y="596" width="0.1694%" height="15" fill="rgb(225,20,46)" fg:x="1068" fg:w="7"/><text x="26.0908%" y="606.50"></text></g><g><title>_dispatch_fw (xformers/ops/fmha/dispatch.py:120) (12 samples, 0.29%)</title><rect x="25.8166%" y="564" width="0.2903%" height="15" fill="rgb(210,31,41)" fg:x="1067" fg:w="12"/><text x="26.0666%" y="574.50"></text></g><g><title>_run_priority_list (xformers/ops/fmha/dispatch.py:53) (11 samples, 0.27%)</title><rect x="25.8408%" y="580" width="0.2662%" height="15" fill="rgb(221,200,47)" fg:x="1068" fg:w="11"/><text x="26.0908%" y="590.50"></text></g><g><title>_memory_efficient_attention_forward (xformers/ops/fmha/__init__.py:337) (13 samples, 0.31%)</title><rect x="25.8166%" y="548" width="0.3145%" height="15" fill="rgb(226,26,5)" fg:x="1067" fg:w="13"/><text x="26.0666%" y="558.50"></text></g><g><title>_convert_input_format (xformers/ops/fmha/flash.py:308) (5 samples, 0.12%)</title><rect x="26.1553%" y="580" width="0.1210%" height="15" fill="rgb(249,33,26)" fg:x="1081" fg:w="5"/><text x="26.4053%" y="590.50"></text></g><g><title>apply (xformers/ops/fmha/flash.py:455) (10 samples, 0.24%)</title><rect x="26.1311%" y="564" width="0.2420%" height="15" fill="rgb(235,183,28)" fg:x="1080" fg:w="10"/><text x="26.3811%" y="574.50"></text></g><g><title>apply (xformers/ops/fmha/flash.py:458) (15 samples, 0.36%)</title><rect x="26.3731%" y="564" width="0.3629%" height="15" fill="rgb(221,5,38)" fg:x="1090" fg:w="15"/><text x="26.6231%" y="574.50"></text></g><g><title>__call__ (torch/_ops.py:692) (15 samples, 0.36%)</title><rect x="26.3731%" y="580" width="0.3629%" height="15" fill="rgb(247,18,42)" fg:x="1090" fg:w="15"/><text x="26.6231%" y="590.50"></text></g><g><title>_flash_fwd (xformers/ops/fmha/flash.py:130) (6 samples, 0.15%)</title><rect x="26.5909%" y="596" width="0.1452%" height="15" fill="rgb(241,131,45)" fg:x="1099" fg:w="6"/><text x="26.8409%" y="606.50"></text></g><g><title>_run_memory_efficient_xformer_forward (vllm/model_executor/layers/attention/backends/xformers.py:216) (50 samples, 1.21%)</title><rect x="25.6230%" y="516" width="1.2098%" height="15" fill="rgb(249,31,29)" fg:x="1059" fg:w="50"/><text x="25.8730%" y="526.50"></text></g><g><title>memory_efficient_attention_forward (xformers/ops/fmha/__init__.py:244) (50 samples, 1.21%)</title><rect x="25.6230%" y="532" width="1.2098%" height="15" fill="rgb(225,111,53)" fg:x="1059" fg:w="50"/><text x="25.8730%" y="542.50"></text></g><g><title>_memory_efficient_attention_forward (xformers/ops/fmha/__init__.py:341) (29 samples, 0.70%)</title><rect x="26.1311%" y="548" width="0.7017%" height="15" fill="rgb(238,160,17)" fg:x="1080" fg:w="29"/><text x="26.3811%" y="558.50"></text></g><g><title>forward (vllm/model_executor/layers/attention/backends/xformers.py:146) (52 samples, 1.26%)</title><rect x="25.5988%" y="500" width="1.2582%" height="15" fill="rgb(214,148,48)" fg:x="1058" fg:w="52"/><text x="25.8488%" y="510.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:106) (57 samples, 1.38%)</title><rect x="25.5746%" y="436" width="1.3791%" height="15" fill="rgb(232,36,49)" fg:x="1057" fg:w="57"/><text x="25.8246%" y="446.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (56 samples, 1.35%)</title><rect x="25.5988%" y="452" width="1.3549%" height="15" fill="rgb(209,103,24)" fg:x="1058" fg:w="56"/><text x="25.8488%" y="462.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (56 samples, 1.35%)</title><rect x="25.5988%" y="468" width="1.3549%" height="15" fill="rgb(229,88,8)" fg:x="1058" fg:w="56"/><text x="25.8488%" y="478.50"></text></g><g><title>forward (vllm/model_executor/layers/attention/attention.py:58) (56 samples, 1.35%)</title><rect x="25.5988%" y="484" width="1.3549%" height="15" fill="rgb(213,181,19)" fg:x="1058" fg:w="56"/><text x="25.8488%" y="494.50"></text></g><g><title>forward (vllm/model_executor/layers/linear.py:572) (12 samples, 0.29%)</title><rect x="26.9780%" y="484" width="0.2903%" height="15" fill="rgb(254,191,54)" fg:x="1115" fg:w="12"/><text x="27.2280%" y="494.50"></text></g><g><title>apply_weights (vllm/model_executor/layers/linear.py:79) (12 samples, 0.29%)</title><rect x="26.9780%" y="500" width="0.2903%" height="15" fill="rgb(241,83,37)" fg:x="1115" fg:w="12"/><text x="27.2280%" y="510.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:163) (87 samples, 2.11%)</title><rect x="25.3327%" y="388" width="2.1050%" height="15" fill="rgb(233,36,39)" fg:x="1047" fg:w="87"/><text x="25.5827%" y="398.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (86 samples, 2.08%)</title><rect x="25.3569%" y="404" width="2.0808%" height="15" fill="rgb(226,3,54)" fg:x="1048" fg:w="86"/><text x="25.6069%" y="414.50">_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (86 samples, 2.08%)</title><rect x="25.3569%" y="420" width="2.0808%" height="15" fill="rgb(245,192,40)" fg:x="1048" fg:w="86"/><text x="25.6069%" y="430.50">_..</text></g><g><title>forward (vllm/model_executor/models/opt.py:108) (20 samples, 0.48%)</title><rect x="26.9538%" y="436" width="0.4839%" height="15" fill="rgb(238,167,29)" fg:x="1114" fg:w="20"/><text x="27.2038%" y="446.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (19 samples, 0.46%)</title><rect x="26.9780%" y="452" width="0.4597%" height="15" fill="rgb(232,182,51)" fg:x="1115" fg:w="19"/><text x="27.2280%" y="462.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (19 samples, 0.46%)</title><rect x="26.9780%" y="468" width="0.4597%" height="15" fill="rgb(231,60,39)" fg:x="1115" fg:w="19"/><text x="27.2280%" y="478.50"></text></g><g><title>forward (vllm/model_executor/layers/linear.py:580) (7 samples, 0.17%)</title><rect x="27.2683%" y="484" width="0.1694%" height="15" fill="rgb(208,69,12)" fg:x="1127" fg:w="7"/><text x="27.5183%" y="494.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:196) (12 samples, 0.29%)</title><rect x="27.5103%" y="436" width="0.2903%" height="15" fill="rgb(235,93,37)" fg:x="1137" fg:w="12"/><text x="27.7603%" y="446.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2543) (12 samples, 0.29%)</title><rect x="27.5103%" y="452" width="0.2903%" height="15" fill="rgb(213,116,39)" fg:x="1137" fg:w="12"/><text x="27.7603%" y="462.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:175) (14 samples, 0.34%)</title><rect x="27.4861%" y="388" width="0.3387%" height="15" fill="rgb(222,207,29)" fg:x="1136" fg:w="14"/><text x="27.7361%" y="398.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (14 samples, 0.34%)</title><rect x="27.4861%" y="404" width="0.3387%" height="15" fill="rgb(206,96,30)" fg:x="1136" fg:w="14"/><text x="27.7361%" y="414.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (13 samples, 0.31%)</title><rect x="27.5103%" y="420" width="0.3145%" height="15" fill="rgb(218,138,4)" fg:x="1137" fg:w="13"/><text x="27.7603%" y="430.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:176) (7 samples, 0.17%)</title><rect x="27.8248%" y="388" width="0.1694%" height="15" fill="rgb(250,191,14)" fg:x="1150" fg:w="7"/><text x="28.0748%" y="398.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (6 samples, 0.15%)</title><rect x="27.8490%" y="404" width="0.1452%" height="15" fill="rgb(239,60,40)" fg:x="1151" fg:w="6"/><text x="28.0990%" y="414.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (6 samples, 0.15%)</title><rect x="27.8490%" y="420" width="0.1452%" height="15" fill="rgb(206,27,48)" fg:x="1151" fg:w="6"/><text x="28.0990%" y="430.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:177) (7 samples, 0.17%)</title><rect x="27.9942%" y="388" width="0.1694%" height="15" fill="rgb(225,35,8)" fg:x="1157" fg:w="7"/><text x="28.2442%" y="398.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (7 samples, 0.17%)</title><rect x="27.9942%" y="404" width="0.1694%" height="15" fill="rgb(250,213,24)" fg:x="1157" fg:w="7"/><text x="28.2442%" y="414.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (6 samples, 0.15%)</title><rect x="28.0184%" y="420" width="0.1452%" height="15" fill="rgb(247,123,22)" fg:x="1158" fg:w="6"/><text x="28.2684%" y="430.50"></text></g><g><title>forward (torch/nn/modules/activation.py:101) (6 samples, 0.15%)</title><rect x="28.0184%" y="436" width="0.1452%" height="15" fill="rgb(231,138,38)" fg:x="1158" fg:w="6"/><text x="28.2684%" y="446.50"></text></g><g><title>relu (torch/nn/functional.py:1471) (5 samples, 0.12%)</title><rect x="28.0426%" y="452" width="0.1210%" height="15" fill="rgb(231,145,46)" fg:x="1159" fg:w="5"/><text x="28.2926%" y="462.50"></text></g><g><title>forward (vllm/model_executor/layers/linear.py:572) (10 samples, 0.24%)</title><rect x="28.1878%" y="436" width="0.2420%" height="15" fill="rgb(251,118,11)" fg:x="1165" fg:w="10"/><text x="28.4378%" y="446.50"></text></g><g><title>apply_weights (vllm/model_executor/layers/linear.py:79) (10 samples, 0.24%)</title><rect x="28.1878%" y="452" width="0.2420%" height="15" fill="rgb(217,147,25)" fg:x="1165" fg:w="10"/><text x="28.4378%" y="462.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:178) (16 samples, 0.39%)</title><rect x="28.1636%" y="388" width="0.3871%" height="15" fill="rgb(247,81,37)" fg:x="1164" fg:w="16"/><text x="28.4136%" y="398.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (16 samples, 0.39%)</title><rect x="28.1636%" y="404" width="0.3871%" height="15" fill="rgb(209,12,38)" fg:x="1164" fg:w="16"/><text x="28.4136%" y="414.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (16 samples, 0.39%)</title><rect x="28.1636%" y="420" width="0.3871%" height="15" fill="rgb(227,1,9)" fg:x="1164" fg:w="16"/><text x="28.4136%" y="430.50"></text></g><g><title>forward (vllm/model_executor/layers/linear.py:580) (5 samples, 0.12%)</title><rect x="28.4297%" y="436" width="0.1210%" height="15" fill="rgb(248,47,43)" fg:x="1175" fg:w="5"/><text x="28.6797%" y="446.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:255) (142 samples, 3.44%)</title><rect x="25.1633%" y="340" width="3.4358%" height="15" fill="rgb(221,10,30)" fg:x="1040" fg:w="142"/><text x="25.4133%" y="350.50">for..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (142 samples, 3.44%)</title><rect x="25.1633%" y="356" width="3.4358%" height="15" fill="rgb(210,229,1)" fg:x="1040" fg:w="142"/><text x="25.4133%" y="366.50">_wr..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (142 samples, 3.44%)</title><rect x="25.1633%" y="372" width="3.4358%" height="15" fill="rgb(222,148,37)" fg:x="1040" fg:w="142"/><text x="25.4133%" y="382.50">_ca..</text></g><g><title>execute_model (vllm/worker/model_runner.py:606) (146 samples, 3.53%)</title><rect x="25.0907%" y="196" width="3.5325%" height="15" fill="rgb(234,67,33)" fg:x="1037" fg:w="146"/><text x="25.3407%" y="206.50">exe..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (146 samples, 3.53%)</title><rect x="25.0907%" y="212" width="3.5325%" height="15" fill="rgb(247,98,35)" fg:x="1037" fg:w="146"/><text x="25.3407%" y="222.50">_wr..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (146 samples, 3.53%)</title><rect x="25.0907%" y="228" width="3.5325%" height="15" fill="rgb(247,138,52)" fg:x="1037" fg:w="146"/><text x="25.3407%" y="238.50">_ca..</text></g><g><title>forward (vllm/model_executor/models/opt.py:306) (146 samples, 3.53%)</title><rect x="25.0907%" y="244" width="3.5325%" height="15" fill="rgb(213,79,30)" fg:x="1037" fg:w="146"/><text x="25.3407%" y="254.50">for..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (146 samples, 3.53%)</title><rect x="25.0907%" y="260" width="3.5325%" height="15" fill="rgb(246,177,23)" fg:x="1037" fg:w="146"/><text x="25.3407%" y="270.50">_wr..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (146 samples, 3.53%)</title><rect x="25.0907%" y="276" width="3.5325%" height="15" fill="rgb(230,62,27)" fg:x="1037" fg:w="146"/><text x="25.3407%" y="286.50">_ca..</text></g><g><title>forward (vllm/model_executor/models/opt.py:281) (146 samples, 3.53%)</title><rect x="25.0907%" y="292" width="3.5325%" height="15" fill="rgb(216,154,8)" fg:x="1037" fg:w="146"/><text x="25.3407%" y="302.50">for..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (146 samples, 3.53%)</title><rect x="25.0907%" y="308" width="3.5325%" height="15" fill="rgb(244,35,45)" fg:x="1037" fg:w="146"/><text x="25.3407%" y="318.50">_wr..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (146 samples, 3.53%)</title><rect x="25.0907%" y="324" width="3.5325%" height="15" fill="rgb(251,115,12)" fg:x="1037" fg:w="146"/><text x="25.3407%" y="334.50">_ca..</text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:276) (130 samples, 3.15%)</title><rect x="29.5185%" y="292" width="3.1454%" height="15" fill="rgb(240,54,50)" fg:x="1220" fg:w="130"/><text x="29.7685%" y="302.50">fro..</text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:282) (226 samples, 5.47%)</title><rect x="32.6639%" y="292" width="5.4682%" height="15" fill="rgb(233,84,52)" fg:x="1350" fg:w="226"/><text x="32.9139%" y="302.50">from_li..</text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:291) (10 samples, 0.24%)</title><rect x="38.1321%" y="292" width="0.2420%" height="15" fill="rgb(207,117,47)" fg:x="1576" fg:w="10"/><text x="38.3821%" y="302.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:303) (25 samples, 0.60%)</title><rect x="38.4708%" y="292" width="0.6049%" height="15" fill="rgb(249,43,39)" fg:x="1590" fg:w="25"/><text x="38.7208%" y="302.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:311) (8 samples, 0.19%)</title><rect x="39.2935%" y="292" width="0.1936%" height="15" fill="rgb(209,38,44)" fg:x="1624" fg:w="8"/><text x="39.5435%" y="302.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:312) (14 samples, 0.34%)</title><rect x="39.4871%" y="292" width="0.3387%" height="15" fill="rgb(236,212,23)" fg:x="1632" fg:w="14"/><text x="39.7371%" y="302.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:313) (6 samples, 0.15%)</title><rect x="39.8258%" y="292" width="0.1452%" height="15" fill="rgb(242,79,21)" fg:x="1646" fg:w="6"/><text x="40.0758%" y="302.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:314) (10 samples, 0.24%)</title><rect x="39.9710%" y="292" width="0.2420%" height="15" fill="rgb(211,96,35)" fg:x="1652" fg:w="10"/><text x="40.2210%" y="302.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:315) (7 samples, 0.17%)</title><rect x="40.2129%" y="292" width="0.1694%" height="15" fill="rgb(253,215,40)" fg:x="1662" fg:w="7"/><text x="40.4629%" y="302.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:317) (5 samples, 0.12%)</title><rect x="40.3823%" y="292" width="0.1210%" height="15" fill="rgb(211,81,21)" fg:x="1669" fg:w="5"/><text x="40.6323%" y="302.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:319) (9 samples, 0.22%)</title><rect x="40.5033%" y="292" width="0.2178%" height="15" fill="rgb(208,190,38)" fg:x="1674" fg:w="9"/><text x="40.7533%" y="302.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:322) (5 samples, 0.12%)</title><rect x="40.8178%" y="292" width="0.1210%" height="15" fill="rgb(235,213,38)" fg:x="1687" fg:w="5"/><text x="41.0678%" y="302.50"></text></g><g><title>forward (vllm/model_executor/layers/sampler.py:41) (507 samples, 12.27%)</title><rect x="28.8652%" y="260" width="12.2671%" height="15" fill="rgb(237,122,38)" fg:x="1193" fg:w="507"/><text x="29.1152%" y="270.50">forward (vllm/mode..</text></g><g><title>from_sampling_metadata (vllm/model_executor/sampling_metadata.py:196) (504 samples, 12.19%)</title><rect x="28.9378%" y="276" width="12.1945%" height="15" fill="rgb(244,218,35)" fg:x="1196" fg:w="504"/><text x="29.1878%" y="286.50">from_sampling_meta..</text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:324) (8 samples, 0.19%)</title><rect x="40.9388%" y="292" width="0.1936%" height="15" fill="rgb(240,68,47)" fg:x="1692" fg:w="8"/><text x="41.1888%" y="302.50"></text></g><g><title>forward (vllm/model_executor/layers/sampler.py:54) (29 samples, 0.70%)</title><rect x="41.1323%" y="260" width="0.7017%" height="15" fill="rgb(210,16,53)" fg:x="1700" fg:w="29"/><text x="41.3823%" y="270.50"></text></g><g><title>forward (vllm/model_executor/layers/sampler.py:65) (27 samples, 0.65%)</title><rect x="41.8340%" y="260" width="0.6533%" height="15" fill="rgb(235,124,12)" fg:x="1729" fg:w="27"/><text x="42.0840%" y="270.50"></text></g><g><title>forward (vllm/model_executor/layers/sampler.py:68) (17 samples, 0.41%)</title><rect x="42.4873%" y="260" width="0.4113%" height="15" fill="rgb(224,169,11)" fg:x="1756" fg:w="17"/><text x="42.7373%" y="270.50"></text></g><g><title>_sample_with_torch (vllm/model_executor/layers/sampler.py:309) (5 samples, 0.12%)</title><rect x="43.0922%" y="292" width="0.1210%" height="15" fill="rgb(250,166,2)" fg:x="1781" fg:w="5"/><text x="43.3422%" y="302.50"></text></g><g><title>_sample_with_torch (vllm/model_executor/layers/sampler.py:318) (5 samples, 0.12%)</title><rect x="43.2374%" y="292" width="0.1210%" height="15" fill="rgb(242,216,29)" fg:x="1787" fg:w="5"/><text x="43.4874%" y="302.50"></text></g><g><title>_sample_with_torch (vllm/model_executor/layers/sampler.py:319) (22 samples, 0.53%)</title><rect x="43.3583%" y="292" width="0.5323%" height="15" fill="rgb(230,116,27)" fg:x="1792" fg:w="22"/><text x="43.6083%" y="302.50"></text></g><g><title>__len__ (torch/_tensor.py:969) (7 samples, 0.17%)</title><rect x="43.9874%" y="308" width="0.1694%" height="15" fill="rgb(228,99,48)" fg:x="1818" fg:w="7"/><text x="44.2374%" y="318.50"></text></g><g><title>_sample_with_torch (vllm/model_executor/layers/sampler.py:320) (14 samples, 0.34%)</title><rect x="43.8906%" y="292" width="0.3387%" height="15" fill="rgb(253,11,6)" fg:x="1814" fg:w="14"/><text x="44.1406%" y="302.50"></text></g><g><title>_sample_with_torch (vllm/model_executor/layers/sampler.py:329) (59 samples, 1.43%)</title><rect x="44.3020%" y="292" width="1.4275%" height="15" fill="rgb(247,143,39)" fg:x="1831" fg:w="59"/><text x="44.5520%" y="302.50"></text></g><g><title>_greedy_sample (vllm/model_executor/layers/sampler.py:173) (548 samples, 13.26%)</title><rect x="45.8505%" y="308" width="13.2591%" height="15" fill="rgb(236,97,10)" fg:x="1895" fg:w="548"/><text x="46.1005%" y="318.50">_greedy_sample (vllm..</text></g><g><title>_greedy_sample (vllm/model_executor/layers/sampler.py:181) (7 samples, 0.17%)</title><rect x="59.1338%" y="308" width="0.1694%" height="15" fill="rgb(233,208,19)" fg:x="2444" fg:w="7"/><text x="59.3838%" y="318.50"></text></g><g><title>_sample_with_torch (vllm/model_executor/layers/sampler.py:358) (560 samples, 13.55%)</title><rect x="45.8505%" y="292" width="13.5495%" height="15" fill="rgb(216,164,2)" fg:x="1895" fg:w="560"/><text x="46.1005%" y="302.50">_sample_with_torch (..</text></g><g><title>forward (vllm/model_executor/layers/sampler.py:71) (686 samples, 16.60%)</title><rect x="42.8986%" y="260" width="16.5981%" height="15" fill="rgb(220,129,5)" fg:x="1773" fg:w="686"/><text x="43.1486%" y="270.50">forward (vllm/model_execut..</text></g><g><title>_sample (vllm/model_executor/layers/sampler.py:461) (686 samples, 16.60%)</title><rect x="42.8986%" y="276" width="16.5981%" height="15" fill="rgb(242,17,10)" fg:x="1773" fg:w="686"/><text x="43.1486%" y="286.50">_sample (vllm/model_execut..</text></g><g><title>_get_logprobs (vllm/model_executor/layers/sampler.py:506) (70 samples, 1.69%)</title><rect x="59.7145%" y="276" width="1.6937%" height="15" fill="rgb(242,107,0)" fg:x="2468" fg:w="70"/><text x="59.9645%" y="286.50"></text></g><g><title>_get_logprobs (vllm/model_executor/layers/sampler.py:521) (15 samples, 0.36%)</title><rect x="61.4082%" y="276" width="0.3629%" height="15" fill="rgb(251,28,31)" fg:x="2538" fg:w="15"/><text x="61.6582%" y="286.50"></text></g><g><title>_get_logprobs (vllm/model_executor/layers/sampler.py:567) (18 samples, 0.44%)</title><rect x="61.9889%" y="276" width="0.4355%" height="15" fill="rgb(233,223,10)" fg:x="2562" fg:w="18"/><text x="62.2389%" y="286.50"></text></g><g><title>__init__ (&lt;string&gt;:3) (5 samples, 0.12%)</title><rect x="62.5212%" y="308" width="0.1210%" height="15" fill="rgb(215,21,27)" fg:x="2584" fg:w="5"/><text x="62.7712%" y="318.50"></text></g><g><title>_get_logprobs (vllm/model_executor/layers/sampler.py:577) (10 samples, 0.24%)</title><rect x="62.4244%" y="276" width="0.2420%" height="15" fill="rgb(232,23,21)" fg:x="2580" fg:w="10"/><text x="62.6744%" y="286.50"></text></g><g><title>&lt;dictcomp&gt; (vllm/model_executor/layers/sampler.py:578) (8 samples, 0.19%)</title><rect x="62.4728%" y="292" width="0.1936%" height="15" fill="rgb(244,5,23)" fg:x="2582" fg:w="8"/><text x="62.7228%" y="302.50"></text></g><g><title>forward (vllm/model_executor/layers/sampler.py:74) (132 samples, 3.19%)</title><rect x="59.4967%" y="260" width="3.1938%" height="15" fill="rgb(226,81,46)" fg:x="2459" fg:w="132"/><text x="59.7467%" y="270.50">for..</text></g><g><title>_build_sampler_output (vllm/model_executor/layers/sampler.py:601) (17 samples, 0.41%)</title><rect x="62.7389%" y="276" width="0.4113%" height="15" fill="rgb(247,70,30)" fg:x="2593" fg:w="17"/><text x="62.9889%" y="286.50"></text></g><g><title>run (concurrent/futures/thread.py:58) (1,599 samples, 38.69%)</title><rect x="24.6310%" y="132" width="38.6886%" height="15" fill="rgb(212,68,19)" fg:x="1018" fg:w="1599"/><text x="24.8810%" y="142.50">run (concurrent/futures/thread.py:58)</text></g><g><title>decorate_context (torch/utils/_contextlib.py:115) (1,599 samples, 38.69%)</title><rect x="24.6310%" y="148" width="38.6886%" height="15" fill="rgb(240,187,13)" fg:x="1018" fg:w="1599"/><text x="24.8810%" y="158.50">decorate_context (torch/utils/_contextlib.py:115)</text></g><g><title>execute_model (vllm/worker/worker.py:209) (1,599 samples, 38.69%)</title><rect x="24.6310%" y="164" width="38.6886%" height="15" fill="rgb(223,113,26)" fg:x="1018" fg:w="1599"/><text x="24.8810%" y="174.50">execute_model (vllm/worker/worker.py:209)</text></g><g><title>decorate_context (torch/utils/_contextlib.py:115) (1,592 samples, 38.52%)</title><rect x="24.8004%" y="180" width="38.5192%" height="15" fill="rgb(206,192,2)" fg:x="1025" fg:w="1592"/><text x="25.0504%" y="190.50">decorate_context (torch/utils/_contextlib.py:115)</text></g><g><title>execute_model (vllm/worker/model_runner.py:621) (1,434 samples, 34.70%)</title><rect x="28.6233%" y="196" width="34.6963%" height="15" fill="rgb(241,108,4)" fg:x="1183" fg:w="1434"/><text x="28.8733%" y="206.50">execute_model (vllm/worker/model_runner.py:621)</text></g><g><title>sample (vllm/model_executor/models/opt.py:321) (1,434 samples, 34.70%)</title><rect x="28.6233%" y="212" width="34.6963%" height="15" fill="rgb(247,173,49)" fg:x="1183" fg:w="1434"/><text x="28.8733%" y="222.50">sample (vllm/model_executor/models/opt.py:321)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (1,434 samples, 34.70%)</title><rect x="28.6233%" y="228" width="34.6963%" height="15" fill="rgb(224,114,35)" fg:x="1183" fg:w="1434"/><text x="28.8733%" y="238.50">_wrapped_call_impl (torch/nn/modules/module.py:1518)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (1,434 samples, 34.70%)</title><rect x="28.6233%" y="244" width="34.6963%" height="15" fill="rgb(245,159,27)" fg:x="1183" fg:w="1434"/><text x="28.8733%" y="254.50">_call_impl (torch/nn/modules/module.py:1527)</text></g><g><title>forward (vllm/model_executor/layers/sampler.py:76) (26 samples, 0.63%)</title><rect x="62.6905%" y="260" width="0.6291%" height="15" fill="rgb(245,172,44)" fg:x="2591" fg:w="26"/><text x="62.9405%" y="270.50"></text></g><g><title>set_result (concurrent/futures/_base.py:544) (6 samples, 0.15%)</title><rect x="63.3196%" y="148" width="0.1452%" height="15" fill="rgb(236,23,11)" fg:x="2617" fg:w="6"/><text x="63.5696%" y="158.50"></text></g><g><title>_worker (concurrent/futures/thread.py:83) (1,621 samples, 39.22%)</title><rect x="24.6310%" y="116" width="39.2209%" height="15" fill="rgb(205,117,38)" fg:x="1018" fg:w="1621"/><text x="24.8810%" y="126.50">_worker (concurrent/futures/thread.py:83)</text></g><g><title>run (concurrent/futures/thread.py:64) (22 samples, 0.53%)</title><rect x="63.3196%" y="132" width="0.5323%" height="15" fill="rgb(237,72,25)" fg:x="2617" fg:w="22"/><text x="63.5696%" y="142.50"></text></g><g><title>set_result (concurrent/futures/_base.py:552) (12 samples, 0.29%)</title><rect x="63.5616%" y="148" width="0.2903%" height="15" fill="rgb(244,70,9)" fg:x="2627" fg:w="12"/><text x="63.8116%" y="158.50"></text></g><g><title>_invoke_callbacks (concurrent/futures/_base.py:342) (12 samples, 0.29%)</title><rect x="63.5616%" y="164" width="0.2903%" height="15" fill="rgb(217,125,39)" fg:x="2627" fg:w="12"/><text x="63.8116%" y="174.50"></text></g><g><title>_call_set_state (asyncio/futures.py:401) (12 samples, 0.29%)</title><rect x="63.5616%" y="180" width="0.2903%" height="15" fill="rgb(235,36,10)" fg:x="2627" fg:w="12"/><text x="63.8116%" y="190.50"></text></g><g><title>_bootstrap (threading.py:973) (2,652 samples, 64.17%)</title><rect x="0.0000%" y="68" width="64.1665%" height="15" fill="rgb(251,123,47)" fg:x="0" fg:w="2652"/><text x="0.2500%" y="78.50">_bootstrap (threading.py:973)</text></g><g><title>_bootstrap_inner (threading.py:1016) (2,652 samples, 64.17%)</title><rect x="0.0000%" y="84" width="64.1665%" height="15" fill="rgb(221,13,13)" fg:x="0" fg:w="2652"/><text x="0.2500%" y="94.50">_bootstrap_inner (threading.py:1016)</text></g><g><title>run (threading.py:953) (2,652 samples, 64.17%)</title><rect x="0.0000%" y="100" width="64.1665%" height="15" fill="rgb(238,131,9)" fg:x="0" fg:w="2652"/><text x="0.2500%" y="110.50">run (threading.py:953)</text></g><g><title>_worker (concurrent/futures/thread.py:90) (8 samples, 0.19%)</title><rect x="63.9729%" y="116" width="0.1936%" height="15" fill="rgb(211,50,8)" fg:x="2644" fg:w="8"/><text x="64.2229%" y="126.50"></text></g><g><title>_deliver_cancellation (anyio/_backends/_asyncio.py:347) (23 samples, 0.56%)</title><rect x="75.5625%" y="164" width="0.5565%" height="15" fill="rgb(245,182,24)" fg:x="3123" fg:w="23"/><text x="75.8125%" y="174.50"></text></g><g><title>current_task (asyncio/tasks.py:38) (23 samples, 0.56%)</title><rect x="75.5625%" y="180" width="0.5565%" height="15" fill="rgb(242,14,37)" fg:x="3123" fg:w="23"/><text x="75.8125%" y="190.50"></text></g><g><title>_deliver_cancellation (anyio/_backends/_asyncio.py:370) (12 samples, 0.29%)</title><rect x="76.1674%" y="164" width="0.2903%" height="15" fill="rgb(246,228,12)" fg:x="3148" fg:w="12"/><text x="76.4174%" y="174.50"></text></g><g><title>get_max_num_running_seqs (vllm/sequence.py:375) (8 samples, 0.19%)</title><rect x="76.9659%" y="244" width="0.1936%" height="15" fill="rgb(213,55,15)" fg:x="3181" fg:w="8"/><text x="77.2159%" y="254.50"></text></g><g><title>num_seqs (vllm/sequence.py:401) (8 samples, 0.19%)</title><rect x="76.9659%" y="260" width="0.1936%" height="15" fill="rgb(209,9,3)" fg:x="3181" fg:w="8"/><text x="77.2159%" y="270.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (7 samples, 0.17%)</title><rect x="76.9901%" y="276" width="0.1694%" height="15" fill="rgb(230,59,30)" fg:x="3182" fg:w="7"/><text x="77.2401%" y="286.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:171) (22 samples, 0.53%)</title><rect x="76.8449%" y="212" width="0.5323%" height="15" fill="rgb(209,121,21)" fg:x="3176" fg:w="22"/><text x="77.0949%" y="222.50"></text></g><g><title>&lt;genexpr&gt; (vllm/core/scheduler.py:171) (20 samples, 0.48%)</title><rect x="76.8933%" y="228" width="0.4839%" height="15" fill="rgb(220,109,13)" fg:x="3178" fg:w="20"/><text x="77.1433%" y="238.50"></text></g><g><title>get_max_num_running_seqs (vllm/sequence.py:382) (9 samples, 0.22%)</title><rect x="77.1594%" y="244" width="0.2178%" height="15" fill="rgb(232,18,1)" fg:x="3189" fg:w="9"/><text x="77.4094%" y="254.50"></text></g><g><title>num_unfinished_seqs (vllm/sequence.py:404) (9 samples, 0.22%)</title><rect x="77.1594%" y="260" width="0.2178%" height="15" fill="rgb(215,41,42)" fg:x="3189" fg:w="9"/><text x="77.4094%" y="270.50"></text></g><g><title>get_unfinished_seqs (vllm/sequence.py:393) (9 samples, 0.22%)</title><rect x="77.1594%" y="276" width="0.2178%" height="15" fill="rgb(224,123,36)" fg:x="3189" fg:w="9"/><text x="77.4094%" y="286.50"></text></g><g><title>&lt;listcomp&gt; (vllm/sequence.py:394) (8 samples, 0.19%)</title><rect x="77.1836%" y="292" width="0.1936%" height="15" fill="rgb(240,125,3)" fg:x="3190" fg:w="8"/><text x="77.4336%" y="302.50"></text></g><g><title>is_finished (vllm/sequence.py:277) (8 samples, 0.19%)</title><rect x="77.1836%" y="308" width="0.1936%" height="15" fill="rgb(205,98,50)" fg:x="3190" fg:w="8"/><text x="77.4336%" y="318.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:264) (7 samples, 0.17%)</title><rect x="77.4498%" y="212" width="0.1694%" height="15" fill="rgb(205,185,37)" fg:x="3201" fg:w="7"/><text x="77.6998%" y="222.50"></text></g><g><title>sort_by_priority (vllm/core/policy.py:22) (5 samples, 0.12%)</title><rect x="77.4982%" y="228" width="0.1210%" height="15" fill="rgb(238,207,15)" fg:x="3203" fg:w="5"/><text x="77.7482%" y="238.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:271) (15 samples, 0.36%)</title><rect x="77.6917%" y="212" width="0.3629%" height="15" fill="rgb(213,199,42)" fg:x="3211" fg:w="15"/><text x="77.9417%" y="222.50"></text></g><g><title>can_append_slot (vllm/core/block_manager.py:309) (8 samples, 0.19%)</title><rect x="77.8611%" y="228" width="0.1936%" height="15" fill="rgb(235,201,11)" fg:x="3218" fg:w="8"/><text x="78.1111%" y="238.50"></text></g><g><title>num_seqs (vllm/sequence.py:401) (7 samples, 0.17%)</title><rect x="77.8853%" y="244" width="0.1694%" height="15" fill="rgb(207,46,11)" fg:x="3219" fg:w="7"/><text x="78.1353%" y="254.50"></text></g><g><title>_append_slot (vllm/core/scheduler.py:407) (8 samples, 0.19%)</title><rect x="78.0789%" y="228" width="0.1936%" height="15" fill="rgb(241,35,35)" fg:x="3227" fg:w="8"/><text x="78.3289%" y="238.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:285) (18 samples, 0.44%)</title><rect x="78.0547%" y="212" width="0.4355%" height="15" fill="rgb(243,32,47)" fg:x="3226" fg:w="18"/><text x="78.3047%" y="222.50"></text></g><g><title>_append_slot (vllm/core/scheduler.py:408) (9 samples, 0.22%)</title><rect x="78.2724%" y="228" width="0.2178%" height="15" fill="rgb(247,202,23)" fg:x="3235" fg:w="9"/><text x="78.5224%" y="238.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:292) (12 samples, 0.29%)</title><rect x="78.5870%" y="212" width="0.2903%" height="15" fill="rgb(219,102,11)" fg:x="3248" fg:w="12"/><text x="78.8370%" y="222.50"></text></g><g><title>&lt;genexpr&gt; (vllm/core/scheduler.py:292) (12 samples, 0.29%)</title><rect x="78.5870%" y="228" width="0.2903%" height="15" fill="rgb(243,110,44)" fg:x="3248" fg:w="12"/><text x="78.8370%" y="238.50"></text></g><g><title>get_max_num_running_seqs (vllm/sequence.py:382) (7 samples, 0.17%)</title><rect x="78.7080%" y="244" width="0.1694%" height="15" fill="rgb(222,74,54)" fg:x="3253" fg:w="7"/><text x="78.9580%" y="254.50"></text></g><g><title>num_unfinished_seqs (vllm/sequence.py:404) (7 samples, 0.17%)</title><rect x="78.7080%" y="260" width="0.1694%" height="15" fill="rgb(216,99,12)" fg:x="3253" fg:w="7"/><text x="78.9580%" y="270.50"></text></g><g><title>get_unfinished_seqs (vllm/sequence.py:393) (7 samples, 0.17%)</title><rect x="78.7080%" y="276" width="0.1694%" height="15" fill="rgb(226,22,26)" fg:x="3253" fg:w="7"/><text x="78.9580%" y="286.50"></text></g><g><title>&lt;listcomp&gt; (vllm/sequence.py:394) (6 samples, 0.15%)</title><rect x="78.7322%" y="292" width="0.1452%" height="15" fill="rgb(217,163,10)" fg:x="3254" fg:w="6"/><text x="78.9822%" y="302.50"></text></g><g><title>is_finished (vllm/sequence.py:277) (6 samples, 0.15%)</title><rect x="78.7322%" y="308" width="0.1452%" height="15" fill="rgb(213,25,53)" fg:x="3254" fg:w="6"/><text x="78.9822%" y="318.50"></text></g><g><title>schedule (vllm/core/scheduler.py:356) (101 samples, 2.44%)</title><rect x="76.8449%" y="196" width="2.4437%" height="15" fill="rgb(252,105,26)" fg:x="3176" fg:w="101"/><text x="77.0949%" y="206.50">sc..</text></g><g><title>_schedule (vllm/core/scheduler.py:341) (14 samples, 0.34%)</title><rect x="78.9499%" y="212" width="0.3387%" height="15" fill="rgb(220,39,43)" fg:x="3263" fg:w="14"/><text x="79.1999%" y="222.50"></text></g><g><title>__init__ (vllm/core/scheduler.py:54) (5 samples, 0.12%)</title><rect x="79.1677%" y="228" width="0.1210%" height="15" fill="rgb(229,68,48)" fg:x="3272" fg:w="5"/><text x="79.4177%" y="238.50"></text></g><g><title>_sort_by_lora_ids (vllm/core/scheduler.py:62) (5 samples, 0.12%)</title><rect x="79.1677%" y="244" width="0.1210%" height="15" fill="rgb(252,8,32)" fg:x="3272" fg:w="5"/><text x="79.4177%" y="254.50"></text></g><g><title>schedule (vllm/core/scheduler.py:367) (6 samples, 0.15%)</title><rect x="79.3370%" y="196" width="0.1452%" height="15" fill="rgb(223,20,43)" fg:x="3279" fg:w="6"/><text x="79.5870%" y="206.50"></text></g><g><title>schedule (vllm/core/scheduler.py:370) (18 samples, 0.44%)</title><rect x="79.4822%" y="196" width="0.4355%" height="15" fill="rgb(229,81,49)" fg:x="3285" fg:w="18"/><text x="79.7322%" y="206.50"></text></g><g><title>get_block_table (vllm/core/block_manager.py:530) (15 samples, 0.36%)</title><rect x="79.5548%" y="212" width="0.3629%" height="15" fill="rgb(236,28,36)" fg:x="3288" fg:w="15"/><text x="79.8048%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (vllm/core/block_manager.py:530) (15 samples, 0.36%)</title><rect x="79.5548%" y="228" width="0.3629%" height="15" fill="rgb(249,185,26)" fg:x="3288" fg:w="15"/><text x="79.8048%" y="238.50"></text></g><g><title>schedule (vllm/core/scheduler.py:373) (11 samples, 0.27%)</title><rect x="79.9661%" y="196" width="0.2662%" height="15" fill="rgb(249,174,33)" fg:x="3305" fg:w="11"/><text x="80.2161%" y="206.50"></text></g><g><title>step_async (vllm/engine/async_llm_engine.py:207) (144 samples, 3.48%)</title><rect x="76.8449%" y="180" width="3.4842%" height="15" fill="rgb(233,201,37)" fg:x="3176" fg:w="144"/><text x="77.0949%" y="190.50">ste..</text></g><g><title>iscoroutinefunction (asyncio/coroutines.py:166) (10 samples, 0.24%)</title><rect x="80.5468%" y="228" width="0.2420%" height="15" fill="rgb(221,78,26)" fg:x="3329" fg:w="10"/><text x="80.7968%" y="238.50"></text></g><g><title>iscoroutinefunction (inspect.py:313) (10 samples, 0.24%)</title><rect x="80.5468%" y="244" width="0.2420%" height="15" fill="rgb(250,127,30)" fg:x="3329" fg:w="10"/><text x="80.7968%" y="254.50"></text></g><g><title>_has_code_flag (inspect.py:297) (7 samples, 0.17%)</title><rect x="80.6194%" y="260" width="0.1694%" height="15" fill="rgb(230,49,44)" fg:x="3332" fg:w="7"/><text x="80.8694%" y="270.50"></text></g><g><title>submit (concurrent/futures/thread.py:172) (6 samples, 0.15%)</title><rect x="80.8130%" y="228" width="0.1452%" height="15" fill="rgb(229,67,23)" fg:x="3340" fg:w="6"/><text x="81.0630%" y="238.50"></text></g><g><title>submit (concurrent/futures/thread.py:175) (19 samples, 0.46%)</title><rect x="80.9823%" y="228" width="0.4597%" height="15" fill="rgb(249,83,47)" fg:x="3347" fg:w="19"/><text x="81.2323%" y="238.50"></text></g><g><title>submit (concurrent/futures/thread.py:176) (5 samples, 0.12%)</title><rect x="81.4421%" y="228" width="0.1210%" height="15" fill="rgb(215,43,3)" fg:x="3366" fg:w="5"/><text x="81.6921%" y="238.50"></text></g><g><title>_adjust_thread_count (concurrent/futures/thread.py:182) (5 samples, 0.12%)</title><rect x="81.4421%" y="244" width="0.1210%" height="15" fill="rgb(238,154,13)" fg:x="3366" fg:w="5"/><text x="81.6921%" y="254.50"></text></g><g><title>execute_model_async (vllm/executor/gpu_executor.py:139) (59 samples, 1.43%)</title><rect x="80.3533%" y="196" width="1.4275%" height="15" fill="rgb(219,56,2)" fg:x="3321" fg:w="59"/><text x="80.6033%" y="206.50"></text></g><g><title>_async_wrapper (vllm/utils.py:175) (55 samples, 1.33%)</title><rect x="80.4500%" y="212" width="1.3308%" height="15" fill="rgb(233,0,4)" fg:x="3325" fg:w="55"/><text x="80.7000%" y="222.50"></text></g><g><title>step_async (vllm/engine/async_llm_engine.py:211) (62 samples, 1.50%)</title><rect x="80.3291%" y="180" width="1.5001%" height="15" fill="rgb(235,30,7)" fg:x="3320" fg:w="62"/><text x="80.5791%" y="190.50"></text></g><g><title>_decode_logprobs (vllm/engine/llm_engine.py:726) (19 samples, 0.46%)</title><rect x="82.3615%" y="244" width="0.4597%" height="15" fill="rgb(250,79,13)" fg:x="3404" fg:w="19"/><text x="82.6115%" y="254.50"></text></g><g><title>_decode_sequence (vllm/engine/llm_engine.py:741) (26 samples, 0.63%)</title><rect x="82.2163%" y="228" width="0.6291%" height="15" fill="rgb(211,146,34)" fg:x="3398" fg:w="26"/><text x="82.4663%" y="238.50"></text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:423) (44 samples, 1.06%)</title><rect x="82.1195%" y="212" width="1.0646%" height="15" fill="rgb(228,22,38)" fg:x="3394" fg:w="44"/><text x="82.3695%" y="222.50"></text></g><g><title>_decode_sequence (vllm/engine/llm_engine.py:745) (14 samples, 0.34%)</title><rect x="82.8454%" y="228" width="0.3387%" height="15" fill="rgb(235,168,5)" fg:x="3424" fg:w="14"/><text x="83.0954%" y="238.50"></text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:558) (59 samples, 1.43%)</title><rect x="81.8776%" y="196" width="1.4275%" height="15" fill="rgb(221,155,16)" fg:x="3384" fg:w="59"/><text x="82.1276%" y="206.50"></text></g><g><title>&lt;genexpr&gt; (vllm/sequence.py:425) (6 samples, 0.15%)</title><rect x="83.4987%" y="260" width="0.1452%" height="15" fill="rgb(215,215,53)" fg:x="3451" fg:w="6"/><text x="83.7487%" y="270.50"></text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:561) (17 samples, 0.41%)</title><rect x="83.3051%" y="196" width="0.4113%" height="15" fill="rgb(223,4,10)" fg:x="3443" fg:w="17"/><text x="83.5551%" y="206.50"></text></g><g><title>free_finished_seq_groups (vllm/core/scheduler.py:394) (17 samples, 0.41%)</title><rect x="83.3051%" y="212" width="0.4113%" height="15" fill="rgb(234,103,6)" fg:x="3443" fg:w="17"/><text x="83.5551%" y="222.50"></text></g><g><title>&lt;genexpr&gt; (vllm/core/scheduler.py:394) (16 samples, 0.39%)</title><rect x="83.3293%" y="228" width="0.3871%" height="15" fill="rgb(227,97,0)" fg:x="3444" fg:w="16"/><text x="83.5793%" y="238.50"></text></g><g><title>is_finished (vllm/sequence.py:425) (15 samples, 0.36%)</title><rect x="83.3535%" y="244" width="0.3629%" height="15" fill="rgb(234,150,53)" fg:x="3445" fg:w="15"/><text x="83.6035%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (vllm/outputs.py:110) (10 samples, 0.24%)</title><rect x="83.8616%" y="228" width="0.2420%" height="15" fill="rgb(228,201,54)" fg:x="3466" fg:w="10"/><text x="84.1116%" y="238.50"></text></g><g><title>from_seq_group (vllm/outputs.py:109) (19 samples, 0.46%)</title><rect x="83.7648%" y="212" width="0.4597%" height="15" fill="rgb(222,22,37)" fg:x="3462" fg:w="19"/><text x="84.0148%" y="222.50"></text></g><g><title>&lt;genexpr&gt; (vllm/sequence.py:425) (5 samples, 0.12%)</title><rect x="84.3697%" y="244" width="0.1210%" height="15" fill="rgb(237,53,32)" fg:x="3487" fg:w="5"/><text x="84.6197%" y="254.50"></text></g><g><title>from_seq_group (vllm/outputs.py:122) (11 samples, 0.27%)</title><rect x="84.2971%" y="212" width="0.2662%" height="15" fill="rgb(233,25,53)" fg:x="3484" fg:w="11"/><text x="84.5471%" y="222.50"></text></g><g><title>is_finished (vllm/sequence.py:425) (11 samples, 0.27%)</title><rect x="84.2971%" y="228" width="0.2662%" height="15" fill="rgb(210,40,34)" fg:x="3484" fg:w="11"/><text x="84.5471%" y="238.50"></text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:567) (44 samples, 1.06%)</title><rect x="83.7406%" y="196" width="1.0646%" height="15" fill="rgb(241,220,44)" fg:x="3461" fg:w="44"/><text x="83.9906%" y="206.50"></text></g><g><title>&lt;genexpr&gt; (vllm/sequence.py:425) (5 samples, 0.12%)</title><rect x="85.2165%" y="244" width="0.1210%" height="15" fill="rgb(235,28,35)" fg:x="3522" fg:w="5"/><text x="85.4665%" y="254.50"></text></g><g><title>_get_stats (vllm/engine/llm_engine.py:696) (10 samples, 0.24%)</title><rect x="85.1198%" y="212" width="0.2420%" height="15" fill="rgb(210,56,17)" fg:x="3518" fg:w="10"/><text x="85.3698%" y="222.50"></text></g><g><title>is_finished (vllm/sequence.py:425) (7 samples, 0.17%)</title><rect x="85.1924%" y="228" width="0.1694%" height="15" fill="rgb(224,130,29)" fg:x="3521" fg:w="7"/><text x="85.4424%" y="238.50"></text></g><g><title>_log_prometheus (vllm/engine/metrics.py:150) (14 samples, 0.34%)</title><rect x="85.4585%" y="228" width="0.3387%" height="15" fill="rgb(235,212,8)" fg:x="3532" fg:w="14"/><text x="85.7085%" y="238.50"></text></g><g><title>set (prometheus_client/metrics.py:438) (5 samples, 0.12%)</title><rect x="85.6763%" y="244" width="0.1210%" height="15" fill="rgb(223,33,50)" fg:x="3541" fg:w="5"/><text x="85.9263%" y="254.50"></text></g><g><title>_log_prometheus (vllm/engine/metrics.py:154) (6 samples, 0.15%)</title><rect x="85.8456%" y="228" width="0.1452%" height="15" fill="rgb(219,149,13)" fg:x="3548" fg:w="6"/><text x="86.0956%" y="238.50"></text></g><g><title>_log_prometheus (vllm/engine/metrics.py:156) (5 samples, 0.12%)</title><rect x="85.9908%" y="228" width="0.1210%" height="15" fill="rgb(250,156,29)" fg:x="3554" fg:w="5"/><text x="86.2408%" y="238.50"></text></g><g><title>_log_prometheus (vllm/engine/metrics.py:162) (8 samples, 0.19%)</title><rect x="86.2086%" y="228" width="0.1936%" height="15" fill="rgb(216,193,19)" fg:x="3563" fg:w="8"/><text x="86.4586%" y="238.50"></text></g><g><title>_log_prometheus (vllm/engine/metrics.py:172) (17 samples, 0.41%)</title><rect x="86.4021%" y="228" width="0.4113%" height="15" fill="rgb(216,135,14)" fg:x="3571" fg:w="17"/><text x="86.6521%" y="238.50"></text></g><g><title>log (vllm/engine/metrics.py:198) (72 samples, 1.74%)</title><rect x="85.4585%" y="212" width="1.7421%" height="15" fill="rgb(241,47,5)" fg:x="3532" fg:w="72"/><text x="85.7085%" y="222.50"></text></g><g><title>_log_prometheus (vllm/engine/metrics.py:173) (16 samples, 0.39%)</title><rect x="86.8135%" y="228" width="0.3871%" height="15" fill="rgb(233,42,35)" fg:x="3588" fg:w="16"/><text x="87.0635%" y="238.50"></text></g><g><title>observe (prometheus_client/metrics.py:653) (5 samples, 0.12%)</title><rect x="87.0796%" y="244" width="0.1210%" height="15" fill="rgb(231,13,6)" fg:x="3599" fg:w="5"/><text x="87.3296%" y="254.50"></text></g><g><title>engine_step (vllm/engine/async_llm_engine.py:450) (438 samples, 10.60%)</title><rect x="76.6513%" y="164" width="10.5976%" height="15" fill="rgb(207,181,40)" fg:x="3168" fg:w="438"/><text x="76.9013%" y="174.50">engine_step (vl..</text></g><g><title>step_async (vllm/engine/async_llm_engine.py:218) (224 samples, 5.42%)</title><rect x="81.8292%" y="180" width="5.4198%" height="15" fill="rgb(254,173,49)" fg:x="3382" fg:w="224"/><text x="82.0792%" y="190.50">step_as..</text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:575) (101 samples, 2.44%)</title><rect x="84.8052%" y="196" width="2.4437%" height="15" fill="rgb(221,1,38)" fg:x="3505" fg:w="101"/><text x="85.0552%" y="206.50">_p..</text></g><g><title>process_request_output (vllm/engine/async_llm_engine.py:115) (19 samples, 0.46%)</title><rect x="87.3216%" y="180" width="0.4597%" height="15" fill="rgb(206,124,46)" fg:x="3609" fg:w="19"/><text x="87.5716%" y="190.50"></text></g><g><title>put (vllm/engine/async_llm_engine.py:59) (16 samples, 0.39%)</title><rect x="87.3941%" y="196" width="0.3871%" height="15" fill="rgb(249,21,11)" fg:x="3612" fg:w="16"/><text x="87.6441%" y="206.50"></text></g><g><title>put_nowait (asyncio/queues.py:148) (8 samples, 0.19%)</title><rect x="87.5877%" y="212" width="0.1936%" height="15" fill="rgb(222,201,40)" fg:x="3620" fg:w="8"/><text x="87.8377%" y="222.50"></text></g><g><title>_wakeup_next (asyncio/queues.py:64) (5 samples, 0.12%)</title><rect x="87.6603%" y="228" width="0.1210%" height="15" fill="rgb(235,61,29)" fg:x="3623" fg:w="5"/><text x="87.9103%" y="238.50"></text></g><g><title>engine_step (vllm/engine/async_llm_engine.py:453) (22 samples, 0.53%)</title><rect x="87.2732%" y="164" width="0.5323%" height="15" fill="rgb(219,207,3)" fg:x="3607" fg:w="22"/><text x="87.5232%" y="174.50"></text></g><g><title>get (asyncio/queues.py:156) (14 samples, 0.34%)</title><rect x="88.2410%" y="212" width="0.3387%" height="15" fill="rgb(222,56,46)" fg:x="3647" fg:w="14"/><text x="88.4910%" y="222.50"></text></g><g><title>_get_loop (asyncio/mixins.py:23) (12 samples, 0.29%)</title><rect x="88.2894%" y="228" width="0.2903%" height="15" fill="rgb(239,76,54)" fg:x="3649" fg:w="12"/><text x="88.5394%" y="238.50"></text></g><g><title>__anext__ (vllm/engine/async_llm_engine.py:73) (21 samples, 0.51%)</title><rect x="88.1684%" y="196" width="0.5081%" height="15" fill="rgb(231,124,27)" fg:x="3644" fg:w="21"/><text x="88.4184%" y="206.50"></text></g><g><title>producer (vllm/entrypoints/openai/serving_completion.py:67) (39 samples, 0.94%)</title><rect x="87.8055%" y="164" width="0.9436%" height="15" fill="rgb(249,195,6)" fg:x="3629" fg:w="39"/><text x="88.0555%" y="174.50"></text></g><g><title>generate (vllm/engine/async_llm_engine.py:624) (26 samples, 0.63%)</title><rect x="88.1200%" y="180" width="0.6291%" height="15" fill="rgb(237,174,47)" fg:x="3642" fg:w="26"/><text x="88.3700%" y="190.50"></text></g><g><title>producer (vllm/entrypoints/openai/serving_completion.py:68) (23 samples, 0.56%)</title><rect x="88.7491%" y="164" width="0.5565%" height="15" fill="rgb(206,201,31)" fg:x="3668" fg:w="23"/><text x="88.9991%" y="174.50"></text></g><g><title>put (asyncio/queues.py:136) (18 samples, 0.44%)</title><rect x="88.8701%" y="180" width="0.4355%" height="15" fill="rgb(231,57,52)" fg:x="3673" fg:w="18"/><text x="89.1201%" y="190.50"></text></g><g><title>put_nowait (asyncio/queues.py:148) (12 samples, 0.29%)</title><rect x="89.0152%" y="196" width="0.2903%" height="15" fill="rgb(248,177,22)" fg:x="3679" fg:w="12"/><text x="89.2652%" y="206.50"></text></g><g><title>_wakeup_next (asyncio/queues.py:64) (5 samples, 0.12%)</title><rect x="89.1846%" y="212" width="0.1210%" height="15" fill="rgb(215,211,37)" fg:x="3686" fg:w="5"/><text x="89.4346%" y="222.50"></text></g><g><title>_batch_encode_plus (transformers/tokenization_utils_fast.py:504) (26 samples, 0.63%)</title><rect x="89.5475%" y="516" width="0.6291%" height="15" fill="rgb(241,128,51)" fg:x="3701" fg:w="26"/><text x="89.7975%" y="526.50"></text></g><g><title>_validate_prompt_and_tokenize (vllm/entrypoints/openai/serving_engine.py:182) (31 samples, 0.75%)</title><rect x="89.4992%" y="404" width="0.7501%" height="15" fill="rgb(227,165,31)" fg:x="3699" fg:w="31"/><text x="89.7492%" y="414.50"></text></g><g><title>__call__ (transformers/tokenization_utils_base.py:2829) (31 samples, 0.75%)</title><rect x="89.4992%" y="420" width="0.7501%" height="15" fill="rgb(228,167,24)" fg:x="3699" fg:w="31"/><text x="89.7492%" y="430.50"></text></g><g><title>_call_one (transformers/tokenization_utils_base.py:2935) (30 samples, 0.73%)</title><rect x="89.5233%" y="436" width="0.7259%" height="15" fill="rgb(228,143,12)" fg:x="3700" fg:w="30"/><text x="89.7733%" y="446.50"></text></g><g><title>encode_plus (transformers/tokenization_utils_base.py:3008) (30 samples, 0.73%)</title><rect x="89.5233%" y="452" width="0.7259%" height="15" fill="rgb(249,149,8)" fg:x="3700" fg:w="30"/><text x="89.7733%" y="462.50"></text></g><g><title>_encode_plus (transformers/models/gpt2/tokenization_gpt2_fast.py:172) (30 samples, 0.73%)</title><rect x="89.5233%" y="468" width="0.7259%" height="15" fill="rgb(243,35,44)" fg:x="3700" fg:w="30"/><text x="89.7733%" y="478.50"></text></g><g><title>_encode_plus (transformers/tokenization_utils_fast.py:576) (30 samples, 0.73%)</title><rect x="89.5233%" y="484" width="0.7259%" height="15" fill="rgb(246,89,9)" fg:x="3700" fg:w="30"/><text x="89.7733%" y="494.50"></text></g><g><title>_batch_encode_plus (transformers/models/gpt2/tokenization_gpt2_fast.py:162) (29 samples, 0.70%)</title><rect x="89.5475%" y="500" width="0.7017%" height="15" fill="rgb(233,213,13)" fg:x="3701" fg:w="29"/><text x="89.7975%" y="510.50"></text></g><g><title>create_completion (vllm/entrypoints/openai/serving_completion.py:143) (34 samples, 0.82%)</title><rect x="89.4992%" y="388" width="0.8226%" height="15" fill="rgb(233,141,41)" fg:x="3699" fg:w="34"/><text x="89.7492%" y="398.50"></text></g><g><title>app (starlette/routing.py:66) (39 samples, 0.94%)</title><rect x="89.4024%" y="324" width="0.9436%" height="15" fill="rgb(239,167,4)" fg:x="3695" fg:w="39"/><text x="89.6524%" y="334.50"></text></g><g><title>app (fastapi/routing.py:278) (35 samples, 0.85%)</title><rect x="89.4992%" y="340" width="0.8468%" height="15" fill="rgb(209,217,16)" fg:x="3699" fg:w="35"/><text x="89.7492%" y="350.50"></text></g><g><title>run_endpoint_function (fastapi/routing.py:190) (35 samples, 0.85%)</title><rect x="89.4992%" y="356" width="0.8468%" height="15" fill="rgb(219,88,35)" fg:x="3699" fg:w="35"/><text x="89.7492%" y="366.50"></text></g><g><title>create_completion (vllm/entrypoints/openai/api_server.py:103) (35 samples, 0.85%)</title><rect x="89.4992%" y="372" width="0.8468%" height="15" fill="rgb(220,193,23)" fg:x="3699" fg:w="35"/><text x="89.7492%" y="382.50"></text></g><g><title>run_asgi (uvicorn/protocols/http/httptools_impl.py:426) (45 samples, 1.09%)</title><rect x="89.3056%" y="164" width="1.0888%" height="15" fill="rgb(230,90,52)" fg:x="3691" fg:w="45"/><text x="89.5556%" y="174.50"></text></g><g><title>__call__ (uvicorn/middleware/proxy_headers.py:84) (45 samples, 1.09%)</title><rect x="89.3056%" y="180" width="1.0888%" height="15" fill="rgb(252,106,19)" fg:x="3691" fg:w="45"/><text x="89.5556%" y="190.50"></text></g><g><title>__call__ (fastapi/applications.py:292) (45 samples, 1.09%)</title><rect x="89.3056%" y="196" width="1.0888%" height="15" fill="rgb(206,74,20)" fg:x="3691" fg:w="45"/><text x="89.5556%" y="206.50"></text></g><g><title>__call__ (starlette/applications.py:122) (45 samples, 1.09%)</title><rect x="89.3056%" y="212" width="1.0888%" height="15" fill="rgb(230,138,44)" fg:x="3691" fg:w="45"/><text x="89.5556%" y="222.50"></text></g><g><title>__call__ (starlette/middleware/errors.py:162) (45 samples, 1.09%)</title><rect x="89.3056%" y="228" width="1.0888%" height="15" fill="rgb(235,182,43)" fg:x="3691" fg:w="45"/><text x="89.5556%" y="238.50"></text></g><g><title>__call__ (starlette/middleware/cors.py:83) (45 samples, 1.09%)</title><rect x="89.3056%" y="244" width="1.0888%" height="15" fill="rgb(242,16,51)" fg:x="3691" fg:w="45"/><text x="89.5556%" y="254.50"></text></g><g><title>__call__ (starlette/middleware/exceptions.py:68) (44 samples, 1.06%)</title><rect x="89.3298%" y="260" width="1.0646%" height="15" fill="rgb(248,9,4)" fg:x="3692" fg:w="44"/><text x="89.5798%" y="270.50"></text></g><g><title>__call__ (fastapi/middleware/asyncexitstack.py:17) (44 samples, 1.06%)</title><rect x="89.3298%" y="276" width="1.0646%" height="15" fill="rgb(210,31,22)" fg:x="3692" fg:w="44"/><text x="89.5798%" y="286.50"></text></g><g><title>__call__ (starlette/routing.py:718) (44 samples, 1.06%)</title><rect x="89.3298%" y="292" width="1.0646%" height="15" fill="rgb(239,54,39)" fg:x="3692" fg:w="44"/><text x="89.5798%" y="302.50"></text></g><g><title>handle (starlette/routing.py:276) (43 samples, 1.04%)</title><rect x="89.3540%" y="308" width="1.0404%" height="15" fill="rgb(230,99,41)" fg:x="3693" fg:w="43"/><text x="89.6040%" y="318.50"></text></g><g><title>wait_for (asyncio/tasks.py:427) (8 samples, 0.19%)</title><rect x="90.7089%" y="180" width="0.1936%" height="15" fill="rgb(253,106,12)" fg:x="3749" fg:w="8"/><text x="90.9589%" y="190.50"></text></g><g><title>ensure_future (asyncio/tasks.py:615) (8 samples, 0.19%)</title><rect x="90.7089%" y="196" width="0.1936%" height="15" fill="rgb(213,46,41)" fg:x="3749" fg:w="8"/><text x="90.9589%" y="206.50"></text></g><g><title>_ensure_future (asyncio/tasks.py:636) (6 samples, 0.15%)</title><rect x="90.7573%" y="212" width="0.1452%" height="15" fill="rgb(215,133,35)" fg:x="3751" fg:w="6"/><text x="91.0073%" y="222.50"></text></g><g><title>run_engine_loop (vllm/engine/async_llm_engine.py:472) (24 samples, 0.58%)</title><rect x="90.3944%" y="164" width="0.5807%" height="15" fill="rgb(213,28,5)" fg:x="3736" fg:w="24"/><text x="90.6444%" y="174.50"></text></g><g><title>__exit__ (anyio/_backends/_asyncio.py:275) (9 samples, 0.22%)</title><rect x="91.2170%" y="212" width="0.2178%" height="15" fill="rgb(215,77,49)" fg:x="3770" fg:w="9"/><text x="91.4670%" y="222.50"></text></g><g><title>current_task (asyncio/tasks.py:38) (9 samples, 0.22%)</title><rect x="91.2170%" y="228" width="0.2178%" height="15" fill="rgb(248,100,22)" fg:x="3770" fg:w="9"/><text x="91.4670%" y="238.50"></text></g><g><title>__exit__ (anyio/_backends/_asyncio.py:307) (5 samples, 0.12%)</title><rect x="91.5074%" y="212" width="0.1210%" height="15" fill="rgb(208,67,9)" fg:x="3782" fg:w="5"/><text x="91.7574%" y="222.50"></text></g><g><title>is_disconnected (starlette/requests.py:299) (26 samples, 0.63%)</title><rect x="91.1203%" y="196" width="0.6291%" height="15" fill="rgb(219,133,21)" fg:x="3766" fg:w="26"/><text x="91.3703%" y="206.50"></text></g><g><title>is_disconnected (starlette/requests.py:301) (8 samples, 0.19%)</title><rect x="91.7493%" y="196" width="0.1936%" height="15" fill="rgb(246,46,29)" fg:x="3792" fg:w="8"/><text x="91.9993%" y="206.50"></text></g><g><title>completion_stream_generator (vllm/entrypoints/openai/serving_completion.py:222) (36 samples, 0.87%)</title><rect x="91.1203%" y="180" width="0.8710%" height="15" fill="rgb(246,185,52)" fg:x="3766" fg:w="36"/><text x="91.3703%" y="190.50"></text></g><g><title>completion_stream_generator (vllm/entrypoints/openai/serving_completion.py:227) (6 samples, 0.15%)</title><rect x="92.0155%" y="180" width="0.1452%" height="15" fill="rgb(252,136,11)" fg:x="3803" fg:w="6"/><text x="92.2655%" y="190.50"></text></g><g><title>model_dump_json (pydantic/main.py:352) (23 samples, 0.56%)</title><rect x="92.8139%" y="196" width="0.5565%" height="15" fill="rgb(219,138,53)" fg:x="3836" fg:w="23"/><text x="93.0639%" y="206.50"></text></g><g><title>completion_stream_generator (vllm/entrypoints/openai/serving_completion.py:270) (35 samples, 0.85%)</title><rect x="92.5478%" y="180" width="0.8468%" height="15" fill="rgb(211,51,23)" fg:x="3825" fg:w="35"/><text x="92.7978%" y="190.50"></text></g><g><title>completion_stream_generator (vllm/entrypoints/openai/serving_completion.py:274) (31 samples, 0.75%)</title><rect x="93.3946%" y="180" width="0.7501%" height="15" fill="rgb(247,221,28)" fg:x="3860" fg:w="31"/><text x="93.6446%" y="190.50"></text></g><g><title>__init__ (pydantic/main.py:164) (22 samples, 0.53%)</title><rect x="93.6124%" y="196" width="0.5323%" height="15" fill="rgb(251,222,45)" fg:x="3869" fg:w="22"/><text x="93.8624%" y="206.50"></text></g><g><title>completion_stream_generator (vllm/entrypoints/openai/serving_completion.py:281) (24 samples, 0.58%)</title><rect x="94.1447%" y="180" width="0.5807%" height="15" fill="rgb(217,162,53)" fg:x="3891" fg:w="24"/><text x="94.3947%" y="190.50"></text></g><g><title>__init__ (pydantic/main.py:164) (18 samples, 0.44%)</title><rect x="94.2899%" y="196" width="0.4355%" height="15" fill="rgb(229,93,14)" fg:x="3897" fg:w="18"/><text x="94.5399%" y="206.50"></text></g><g><title>get (asyncio/queues.py:156) (16 samples, 0.39%)</title><rect x="95.1609%" y="228" width="0.3871%" height="15" fill="rgb(209,67,49)" fg:x="3933" fg:w="16"/><text x="95.4109%" y="238.50"></text></g><g><title>_get_loop (asyncio/mixins.py:23) (15 samples, 0.36%)</title><rect x="95.1851%" y="244" width="0.3629%" height="15" fill="rgb(213,87,29)" fg:x="3934" fg:w="15"/><text x="95.4351%" y="254.50"></text></g><g><title>consumer (vllm/entrypoints/openai/serving_completion.py:80) (28 samples, 0.68%)</title><rect x="95.0641%" y="212" width="0.6775%" height="15" fill="rgb(205,151,52)" fg:x="3929" fg:w="28"/><text x="95.3141%" y="222.50"></text></g><g><title>get (asyncio/queues.py:174) (7 samples, 0.17%)</title><rect x="95.5722%" y="228" width="0.1694%" height="15" fill="rgb(253,215,39)" fg:x="3950" fg:w="7"/><text x="95.8222%" y="238.50"></text></g><g><title>completion_stream_generator (vllm/entrypoints/openai/serving_completion.py:219) (36 samples, 0.87%)</title><rect x="94.9189%" y="196" width="0.8710%" height="15" fill="rgb(221,220,41)" fg:x="3923" fg:w="36"/><text x="95.1689%" y="206.50"></text></g><g><title>__enter__ (anyio/_backends/_asyncio.py:246) (14 samples, 0.34%)</title><rect x="96.1771%" y="228" width="0.3387%" height="15" fill="rgb(218,133,21)" fg:x="3975" fg:w="14"/><text x="96.4271%" y="238.50"></text></g><g><title>current_task (asyncio/tasks.py:38) (13 samples, 0.31%)</title><rect x="96.2013%" y="244" width="0.3145%" height="15" fill="rgb(221,193,43)" fg:x="3976" fg:w="13"/><text x="96.4513%" y="254.50"></text></g><g><title>current_async_library (sniffio/_impl.py:76) (5 samples, 0.12%)</title><rect x="97.1207%" y="260" width="0.1210%" height="15" fill="rgb(240,128,52)" fg:x="4014" fg:w="5"/><text x="97.3707%" y="270.50"></text></g><g><title>get_asynclib (anyio/_core/_eventloop.py:147) (30 samples, 0.73%)</title><rect x="96.9756%" y="244" width="0.7259%" height="15" fill="rgb(253,114,12)" fg:x="4008" fg:w="30"/><text x="97.2256%" y="254.50"></text></g><g><title>current_async_library (sniffio/_impl.py:82) (18 samples, 0.44%)</title><rect x="97.2659%" y="260" width="0.4355%" height="15" fill="rgb(215,223,47)" fg:x="4020" fg:w="18"/><text x="97.5159%" y="270.50"></text></g><g><title>current_task (asyncio/tasks.py:38) (16 samples, 0.39%)</title><rect x="97.3143%" y="276" width="0.3871%" height="15" fill="rgb(248,225,23)" fg:x="4022" fg:w="16"/><text x="97.5643%" y="286.50"></text></g><g><title>is_disconnected (starlette/requests.py:299) (75 samples, 1.81%)</title><rect x="95.9110%" y="212" width="1.8147%" height="15" fill="rgb(250,108,0)" fg:x="3964" fg:w="75"/><text x="96.1610%" y="222.50">i..</text></g><g><title>__new__ (anyio/_core/_tasks.py:35) (40 samples, 0.97%)</title><rect x="96.7578%" y="228" width="0.9678%" height="15" fill="rgb(228,208,7)" fg:x="3999" fg:w="40"/><text x="97.0078%" y="238.50"></text></g><g><title>_deliver_cancellation (anyio/_backends/_asyncio.py:347) (16 samples, 0.39%)</title><rect x="97.7982%" y="244" width="0.3871%" height="15" fill="rgb(244,45,10)" fg:x="4042" fg:w="16"/><text x="98.0482%" y="254.50"></text></g><g><title>current_task (asyncio/tasks.py:38) (15 samples, 0.36%)</title><rect x="97.8224%" y="260" width="0.3629%" height="15" fill="rgb(207,125,25)" fg:x="4043" fg:w="15"/><text x="98.0724%" y="270.50"></text></g><g><title>cancel (anyio/_backends/_asyncio.py:412) (26 samples, 0.63%)</title><rect x="97.7982%" y="228" width="0.6291%" height="15" fill="rgb(210,195,18)" fg:x="4042" fg:w="26"/><text x="98.0482%" y="238.50"></text></g><g><title>_deliver_cancellation (anyio/_backends/_asyncio.py:370) (10 samples, 0.24%)</title><rect x="98.1853%" y="244" width="0.2420%" height="15" fill="rgb(249,80,12)" fg:x="4058" fg:w="10"/><text x="98.4353%" y="254.50"></text></g><g><title>is_disconnected (starlette/requests.py:300) (32 samples, 0.77%)</title><rect x="97.7256%" y="212" width="0.7743%" height="15" fill="rgb(221,65,9)" fg:x="4039" fg:w="32"/><text x="97.9756%" y="222.50"></text></g><g><title>completion_stream_generator (vllm/entrypoints/openai/serving_completion.py:222) (133 samples, 3.22%)</title><rect x="95.7900%" y="196" width="3.2180%" height="15" fill="rgb(235,49,36)" fg:x="3959" fg:w="133"/><text x="96.0400%" y="206.50">com..</text></g><g><title>is_disconnected (starlette/requests.py:301) (21 samples, 0.51%)</title><rect x="98.4999%" y="212" width="0.5081%" height="15" fill="rgb(225,32,20)" fg:x="4071" fg:w="21"/><text x="98.7499%" y="222.50"></text></g><g><title>receive (uvicorn/protocols/http/httptools_impl.py:587) (15 samples, 0.36%)</title><rect x="98.6451%" y="228" width="0.3629%" height="15" fill="rgb(215,141,46)" fg:x="4077" fg:w="15"/><text x="98.8951%" y="238.50"></text></g><g><title>wait (asyncio/locks.py:211) (11 samples, 0.27%)</title><rect x="98.7418%" y="244" width="0.2662%" height="15" fill="rgb(250,160,47)" fg:x="4081" fg:w="11"/><text x="98.9918%" y="254.50"></text></g><g><title>_get_loop (asyncio/mixins.py:23) (11 samples, 0.27%)</title><rect x="98.7418%" y="260" width="0.2662%" height="15" fill="rgb(216,222,40)" fg:x="4081" fg:w="11"/><text x="98.9918%" y="270.50"></text></g><g><title>stream_response (starlette/responses.py:262) (174 samples, 4.21%)</title><rect x="94.8222%" y="180" width="4.2100%" height="15" fill="rgb(234,217,39)" fg:x="3919" fg:w="174"/><text x="95.0722%" y="190.50">strea..</text></g><g><title>send (uvicorn/protocols/http/httptools_impl.py:551) (5 samples, 0.12%)</title><rect x="99.6371%" y="228" width="0.1210%" height="15" fill="rgb(207,178,40)" fg:x="4118" fg:w="5"/><text x="99.8871%" y="238.50"></text></g><g><title>send (uvicorn/protocols/http/httptools_impl.py:556) (7 samples, 0.17%)</title><rect x="99.7580%" y="228" width="0.1694%" height="15" fill="rgb(221,136,13)" fg:x="4123" fg:w="7"/><text x="100.0080%" y="238.50"></text></g><g><title>all (4,133 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(249,199,10)" fg:x="0" fg:w="4133"/><text x="0.2500%" y="62.50"></text></g><g><title>_run_module_as_main (runpy.py:196) (1,481 samples, 35.83%)</title><rect x="64.1665%" y="68" width="35.8335%" height="15" fill="rgb(249,222,13)" fg:x="2652" fg:w="1481"/><text x="64.4165%" y="78.50">_run_module_as_main (runpy.py:196)</text></g><g><title>_run_code (runpy.py:86) (1,481 samples, 35.83%)</title><rect x="64.1665%" y="84" width="35.8335%" height="15" fill="rgb(244,185,38)" fg:x="2652" fg:w="1481"/><text x="64.4165%" y="94.50">_run_code (runpy.py:86)</text></g><g><title>&lt;module&gt; (vllm/entrypoints/openai/api_server.py:166) (1,481 samples, 35.83%)</title><rect x="64.1665%" y="100" width="35.8335%" height="15" fill="rgb(236,202,9)" fg:x="2652" fg:w="1481"/><text x="64.4165%" y="110.50">&lt;module&gt; (vllm/entrypoints/openai/api_server.py:166)</text></g><g><title>run (uvicorn/main.py:587) (1,481 samples, 35.83%)</title><rect x="64.1665%" y="116" width="35.8335%" height="15" fill="rgb(250,229,37)" fg:x="2652" fg:w="1481"/><text x="64.4165%" y="126.50">run (uvicorn/main.py:587)</text></g><g><title>run (uvicorn/server.py:61) (1,481 samples, 35.83%)</title><rect x="64.1665%" y="132" width="35.8335%" height="15" fill="rgb(206,174,23)" fg:x="2652" fg:w="1481"/><text x="64.4165%" y="142.50">run (uvicorn/server.py:61)</text></g><g><title>run (asyncio/runners.py:44) (1,481 samples, 35.83%)</title><rect x="64.1665%" y="148" width="35.8335%" height="15" fill="rgb(211,33,43)" fg:x="2652" fg:w="1481"/><text x="64.4165%" y="158.50">run (asyncio/runners.py:44)</text></g><g><title>wrap (starlette/responses.py:273) (372 samples, 9.00%)</title><rect x="90.9993%" y="164" width="9.0007%" height="15" fill="rgb(245,58,50)" fg:x="3761" fg:w="372"/><text x="91.2493%" y="174.50">wrap (starlet..</text></g><g><title>stream_response (starlette/responses.py:265) (35 samples, 0.85%)</title><rect x="99.1532%" y="180" width="0.8468%" height="15" fill="rgb(244,68,36)" fg:x="4098" fg:w="35"/><text x="99.4032%" y="190.50"></text></g><g><title>sender (starlette/middleware/exceptions.py:65) (26 samples, 0.63%)</title><rect x="99.3709%" y="196" width="0.6291%" height="15" fill="rgb(232,229,15)" fg:x="4107" fg:w="26"/><text x="99.6209%" y="206.50"></text></g><g><title>_send (starlette/middleware/errors.py:159) (20 samples, 0.48%)</title><rect x="99.5161%" y="212" width="0.4839%" height="15" fill="rgb(254,30,23)" fg:x="4113" fg:w="20"/><text x="99.7661%" y="222.50"></text></g></svg></svg>