<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1354" onload="init(evt)" viewBox="0 0 1200 1354" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1354" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record --pid 2098035 --native</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1343.00"> </text><svg id="frames" x="10" width="1180" total_samples="2496"><g><title>_append_tokens_to_blocks (vllm/sequence.py:215) (3 samples, 0.12%)</title><rect x="0.3606%" y="532" width="0.1202%" height="15" fill="rgb(227,0,7)" fg:x="9" fg:w="3"/><text x="0.6106%" y="542.50"></text></g><g><title>_append_logical_block (vllm/sequence.py:201) (3 samples, 0.12%)</title><rect x="0.3606%" y="548" width="0.1202%" height="15" fill="rgb(217,0,24)" fg:x="9" fg:w="3"/><text x="0.6106%" y="558.50"></text></g><g><title>__init__ (vllm/block.py:23) (3 samples, 0.12%)</title><rect x="0.3606%" y="564" width="0.1202%" height="15" fill="rgb(221,193,54)" fg:x="9" fg:w="3"/><text x="0.6106%" y="574.50"></text></g><g><title>add_request (vllm/engine/llm_engine.py:278) (4 samples, 0.16%)</title><rect x="0.3606%" y="500" width="0.1603%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="4"/><text x="0.6106%" y="510.50"></text></g><g><title>__init__ (vllm/sequence.py:176) (4 samples, 0.16%)</title><rect x="0.3606%" y="516" width="0.1603%" height="15" fill="rgb(208,68,35)" fg:x="9" fg:w="4"/><text x="0.6106%" y="526.50"></text></g><g><title>add_request (vllm/engine/llm_engine.py:283) (5 samples, 0.20%)</title><rect x="0.5208%" y="500" width="0.2003%" height="15" fill="rgb(232,128,0)" fg:x="13" fg:w="5"/><text x="0.7708%" y="510.50"></text></g><g><title>clone (vllm/sampling_params.py:253) (5 samples, 0.20%)</title><rect x="0.5208%" y="516" width="0.2003%" height="15" fill="rgb(207,160,47)" fg:x="13" fg:w="5"/><text x="0.7708%" y="526.50"></text></g><g><title>deepcopy (copy.py:172) (5 samples, 0.20%)</title><rect x="0.5208%" y="532" width="0.2003%" height="15" fill="rgb(228,23,34)" fg:x="13" fg:w="5"/><text x="0.7708%" y="542.50"></text></g><g><title>_reconstruct (copy.py:271) (4 samples, 0.16%)</title><rect x="0.5609%" y="548" width="0.1603%" height="15" fill="rgb(218,30,26)" fg:x="14" fg:w="4"/><text x="0.8109%" y="558.50"></text></g><g><title>deepcopy (copy.py:146) (4 samples, 0.16%)</title><rect x="0.5609%" y="564" width="0.1603%" height="15" fill="rgb(220,122,19)" fg:x="14" fg:w="4"/><text x="0.8109%" y="574.50"></text></g><g><title>_deepcopy_dict (copy.py:231) (4 samples, 0.16%)</title><rect x="0.5609%" y="580" width="0.1603%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="4"/><text x="0.8109%" y="590.50"></text></g><g><title>engine_step (vllm/engine/async_llm_engine.py:431) (14 samples, 0.56%)</title><rect x="0.2404%" y="468" width="0.5609%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="14"/><text x="0.4904%" y="478.50"></text></g><g><title>add_request_async (vllm/engine/async_llm_engine.py:255) (14 samples, 0.56%)</title><rect x="0.2404%" y="484" width="0.5609%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="14"/><text x="0.4904%" y="494.50"></text></g><g><title>get_max_num_running_seqs (vllm/sequence.py:375) (8 samples, 0.32%)</title><rect x="1.2019%" y="548" width="0.3205%" height="15" fill="rgb(206,188,39)" fg:x="30" fg:w="8"/><text x="1.4519%" y="558.50"></text></g><g><title>num_seqs (vllm/sequence.py:401) (7 samples, 0.28%)</title><rect x="1.2420%" y="564" width="0.2804%" height="15" fill="rgb(217,207,13)" fg:x="31" fg:w="7"/><text x="1.4920%" y="574.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (4 samples, 0.16%)</title><rect x="1.3622%" y="580" width="0.1603%" height="15" fill="rgb(231,73,38)" fg:x="34" fg:w="4"/><text x="1.6122%" y="590.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:171) (15 samples, 0.60%)</title><rect x="1.1218%" y="516" width="0.6010%" height="15" fill="rgb(225,20,46)" fg:x="28" fg:w="15"/><text x="1.3718%" y="526.50"></text></g><g><title>&lt;genexpr&gt; (vllm/core/scheduler.py:171) (15 samples, 0.60%)</title><rect x="1.1218%" y="532" width="0.6010%" height="15" fill="rgb(210,31,41)" fg:x="28" fg:w="15"/><text x="1.3718%" y="542.50"></text></g><g><title>get_max_num_running_seqs (vllm/sequence.py:382) (5 samples, 0.20%)</title><rect x="1.5224%" y="548" width="0.2003%" height="15" fill="rgb(221,200,47)" fg:x="38" fg:w="5"/><text x="1.7724%" y="558.50"></text></g><g><title>num_unfinished_seqs (vllm/sequence.py:404) (5 samples, 0.20%)</title><rect x="1.5224%" y="564" width="0.2003%" height="15" fill="rgb(226,26,5)" fg:x="38" fg:w="5"/><text x="1.7724%" y="574.50"></text></g><g><title>get_unfinished_seqs (vllm/sequence.py:393) (4 samples, 0.16%)</title><rect x="1.5625%" y="580" width="0.1603%" height="15" fill="rgb(249,33,26)" fg:x="39" fg:w="4"/><text x="1.8125%" y="590.50"></text></g><g><title>&lt;listcomp&gt; (vllm/sequence.py:394) (3 samples, 0.12%)</title><rect x="1.6026%" y="596" width="0.1202%" height="15" fill="rgb(235,183,28)" fg:x="40" fg:w="3"/><text x="1.8526%" y="606.50"></text></g><g><title>is_finished (vllm/sequence.py:277) (3 samples, 0.12%)</title><rect x="1.6026%" y="612" width="0.1202%" height="15" fill="rgb(221,5,38)" fg:x="40" fg:w="3"/><text x="1.8526%" y="622.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:201) (3 samples, 0.12%)</title><rect x="1.8029%" y="516" width="0.1202%" height="15" fill="rgb(247,18,42)" fg:x="45" fg:w="3"/><text x="2.0529%" y="526.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:241) (4 samples, 0.16%)</title><rect x="1.9631%" y="516" width="0.1603%" height="15" fill="rgb(241,131,45)" fg:x="49" fg:w="4"/><text x="2.2131%" y="526.50"></text></g><g><title>_allocate (vllm/core/scheduler.py:398) (4 samples, 0.16%)</title><rect x="1.9631%" y="532" width="0.1603%" height="15" fill="rgb(249,31,29)" fg:x="49" fg:w="4"/><text x="2.2131%" y="542.50"></text></g><g><title>allocate (vllm/core/block_manager.py:298) (3 samples, 0.12%)</title><rect x="2.0032%" y="548" width="0.1202%" height="15" fill="rgb(225,111,53)" fg:x="50" fg:w="3"/><text x="2.2532%" y="558.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:264) (9 samples, 0.36%)</title><rect x="2.1234%" y="516" width="0.3606%" height="15" fill="rgb(238,160,17)" fg:x="53" fg:w="9"/><text x="2.3734%" y="526.50"></text></g><g><title>sort_by_priority (vllm/core/policy.py:22) (6 samples, 0.24%)</title><rect x="2.2436%" y="532" width="0.2404%" height="15" fill="rgb(214,148,48)" fg:x="56" fg:w="6"/><text x="2.4936%" y="542.50"></text></g><g><title>&lt;lambda&gt; (vllm/core/policy.py:24) (3 samples, 0.12%)</title><rect x="2.3638%" y="548" width="0.1202%" height="15" fill="rgb(232,36,49)" fg:x="59" fg:w="3"/><text x="2.6138%" y="558.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (4 samples, 0.16%)</title><rect x="2.6843%" y="564" width="0.1603%" height="15" fill="rgb(209,103,24)" fg:x="67" fg:w="4"/><text x="2.9343%" y="574.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:271) (12 samples, 0.48%)</title><rect x="2.4840%" y="516" width="0.4808%" height="15" fill="rgb(229,88,8)" fg:x="62" fg:w="12"/><text x="2.7340%" y="526.50"></text></g><g><title>can_append_slot (vllm/core/block_manager.py:309) (10 samples, 0.40%)</title><rect x="2.5641%" y="532" width="0.4006%" height="15" fill="rgb(213,181,19)" fg:x="64" fg:w="10"/><text x="2.8141%" y="542.50"></text></g><g><title>num_seqs (vllm/sequence.py:401) (7 samples, 0.28%)</title><rect x="2.6843%" y="548" width="0.2804%" height="15" fill="rgb(254,191,54)" fg:x="67" fg:w="7"/><text x="2.9343%" y="558.50"></text></g><g><title>get_seqs (vllm/sequence.py:389) (3 samples, 0.12%)</title><rect x="2.8446%" y="564" width="0.1202%" height="15" fill="rgb(241,83,37)" fg:x="71" fg:w="3"/><text x="3.0946%" y="574.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (3 samples, 0.12%)</title><rect x="3.0849%" y="548" width="0.1202%" height="15" fill="rgb(233,36,39)" fg:x="77" fg:w="3"/><text x="3.3349%" y="558.50"></text></g><g><title>_append_slot (vllm/core/scheduler.py:407) (6 samples, 0.24%)</title><rect x="3.0449%" y="532" width="0.2404%" height="15" fill="rgb(226,3,54)" fg:x="76" fg:w="6"/><text x="3.2949%" y="542.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:285) (13 samples, 0.52%)</title><rect x="2.9647%" y="516" width="0.5208%" height="15" fill="rgb(245,192,40)" fg:x="74" fg:w="13"/><text x="3.2147%" y="526.50"></text></g><g><title>_append_slot (vllm/core/scheduler.py:408) (5 samples, 0.20%)</title><rect x="3.2853%" y="532" width="0.2003%" height="15" fill="rgb(238,167,29)" fg:x="82" fg:w="5"/><text x="3.5353%" y="542.50"></text></g><g><title>append_slot (vllm/core/block_manager.py:391) (3 samples, 0.12%)</title><rect x="3.3654%" y="548" width="0.1202%" height="15" fill="rgb(232,182,51)" fg:x="84" fg:w="3"/><text x="3.6154%" y="558.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:286) (3 samples, 0.12%)</title><rect x="3.4856%" y="516" width="0.1202%" height="15" fill="rgb(231,60,39)" fg:x="87" fg:w="3"/><text x="3.7356%" y="526.50"></text></g><g><title>get_max_num_running_seqs (vllm/sequence.py:375) (3 samples, 0.12%)</title><rect x="3.6859%" y="548" width="0.1202%" height="15" fill="rgb(208,69,12)" fg:x="92" fg:w="3"/><text x="3.9359%" y="558.50"></text></g><g><title>is_finished (vllm/sequence.py:40) (4 samples, 0.16%)</title><rect x="3.9663%" y="628" width="0.1603%" height="15" fill="rgb(235,93,37)" fg:x="99" fg:w="4"/><text x="4.2163%" y="638.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:292) (15 samples, 0.60%)</title><rect x="3.6058%" y="516" width="0.6010%" height="15" fill="rgb(213,116,39)" fg:x="90" fg:w="15"/><text x="3.8558%" y="526.50"></text></g><g><title>&lt;genexpr&gt; (vllm/core/scheduler.py:292) (13 samples, 0.52%)</title><rect x="3.6859%" y="532" width="0.5208%" height="15" fill="rgb(222,207,29)" fg:x="92" fg:w="13"/><text x="3.9359%" y="542.50"></text></g><g><title>get_max_num_running_seqs (vllm/sequence.py:382) (10 samples, 0.40%)</title><rect x="3.8061%" y="548" width="0.4006%" height="15" fill="rgb(206,96,30)" fg:x="95" fg:w="10"/><text x="4.0561%" y="558.50"></text></g><g><title>num_unfinished_seqs (vllm/sequence.py:404) (10 samples, 0.40%)</title><rect x="3.8061%" y="564" width="0.4006%" height="15" fill="rgb(218,138,4)" fg:x="95" fg:w="10"/><text x="4.0561%" y="574.50"></text></g><g><title>get_unfinished_seqs (vllm/sequence.py:393) (9 samples, 0.36%)</title><rect x="3.8462%" y="580" width="0.3606%" height="15" fill="rgb(250,191,14)" fg:x="96" fg:w="9"/><text x="4.0962%" y="590.50"></text></g><g><title>&lt;listcomp&gt; (vllm/sequence.py:394) (8 samples, 0.32%)</title><rect x="3.8862%" y="596" width="0.3205%" height="15" fill="rgb(239,60,40)" fg:x="97" fg:w="8"/><text x="4.1362%" y="606.50"></text></g><g><title>is_finished (vllm/sequence.py:277) (8 samples, 0.32%)</title><rect x="3.8862%" y="612" width="0.3205%" height="15" fill="rgb(206,27,48)" fg:x="97" fg:w="8"/><text x="4.1362%" y="622.50"></text></g><g><title>_schedule (vllm/core/scheduler.py:337) (3 samples, 0.12%)</title><rect x="4.2067%" y="516" width="0.1202%" height="15" fill="rgb(225,35,8)" fg:x="105" fg:w="3"/><text x="4.4567%" y="526.50"></text></g><g><title>schedule (vllm/core/scheduler.py:356) (87 samples, 3.49%)</title><rect x="1.0016%" y="500" width="3.4856%" height="15" fill="rgb(250,213,24)" fg:x="25" fg:w="87"/><text x="1.2516%" y="510.50">sch..</text></g><g><title>_schedule (vllm/core/scheduler.py:341) (4 samples, 0.16%)</title><rect x="4.3269%" y="516" width="0.1603%" height="15" fill="rgb(247,123,22)" fg:x="108" fg:w="4"/><text x="4.5769%" y="526.50"></text></g><g><title>schedule (vllm/core/scheduler.py:362) (4 samples, 0.16%)</title><rect x="4.4872%" y="500" width="0.1603%" height="15" fill="rgb(231,138,38)" fg:x="112" fg:w="4"/><text x="4.7372%" y="510.50"></text></g><g><title>schedule (vllm/core/scheduler.py:367) (6 samples, 0.24%)</title><rect x="4.6474%" y="500" width="0.2404%" height="15" fill="rgb(231,145,46)" fg:x="116" fg:w="6"/><text x="4.8974%" y="510.50"></text></g><g><title>schedule (vllm/core/scheduler.py:370) (14 samples, 0.56%)</title><rect x="4.8878%" y="500" width="0.5609%" height="15" fill="rgb(251,118,11)" fg:x="122" fg:w="14"/><text x="5.1378%" y="510.50"></text></g><g><title>get_block_table (vllm/core/block_manager.py:530) (13 samples, 0.52%)</title><rect x="4.9279%" y="516" width="0.5208%" height="15" fill="rgb(217,147,25)" fg:x="123" fg:w="13"/><text x="5.1779%" y="526.50"></text></g><g><title>&lt;listcomp&gt; (vllm/core/block_manager.py:530) (13 samples, 0.52%)</title><rect x="4.9279%" y="532" width="0.5208%" height="15" fill="rgb(247,81,37)" fg:x="123" fg:w="13"/><text x="5.1779%" y="542.50"></text></g><g><title>schedule (vllm/core/scheduler.py:373) (4 samples, 0.16%)</title><rect x="5.4888%" y="500" width="0.1603%" height="15" fill="rgb(209,12,38)" fg:x="137" fg:w="4"/><text x="5.7388%" y="510.50"></text></g><g><title>step_async (vllm/engine/async_llm_engine.py:207) (121 samples, 4.85%)</title><rect x="0.8814%" y="484" width="4.8478%" height="15" fill="rgb(227,1,9)" fg:x="22" fg:w="121"/><text x="1.1314%" y="494.50">step_a..</text></g><g><title>run_in_executor (loop.c:47922) (6 samples, 0.24%)</title><rect x="5.8894%" y="548" width="0.2404%" height="15" fill="rgb(248,47,43)" fg:x="147" fg:w="6"/><text x="6.1394%" y="558.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (loop.c:171508) (6 samples, 0.24%)</title><rect x="5.8894%" y="564" width="0.2404%" height="15" fill="rgb(221,10,30)" fg:x="147" fg:w="6"/><text x="6.1394%" y="574.50"></text></g><g><title>iscoroutinefunction (asyncio/coroutines.py:166) (6 samples, 0.24%)</title><rect x="5.8894%" y="580" width="0.2404%" height="15" fill="rgb(210,229,1)" fg:x="147" fg:w="6"/><text x="6.1394%" y="590.50"></text></g><g><title>iscoroutinefunction (inspect.py:313) (6 samples, 0.24%)</title><rect x="5.8894%" y="596" width="0.2404%" height="15" fill="rgb(222,148,37)" fg:x="147" fg:w="6"/><text x="6.1394%" y="606.50"></text></g><g><title>submit (concurrent/futures/thread.py:175) (6 samples, 0.24%)</title><rect x="6.3301%" y="564" width="0.2404%" height="15" fill="rgb(234,67,33)" fg:x="158" fg:w="6"/><text x="6.5801%" y="574.50"></text></g><g><title>_queue_SimpleQueue_put (_queuemodule.c.h:80) (6 samples, 0.24%)</title><rect x="6.3301%" y="580" width="0.2404%" height="15" fill="rgb(247,98,35)" fg:x="158" fg:w="6"/><text x="6.5801%" y="590.50"></text></g><g><title>_queue_SimpleQueue_put_impl (_queuemodule.c:131) (6 samples, 0.24%)</title><rect x="6.3301%" y="596" width="0.2404%" height="15" fill="rgb(247,138,52)" fg:x="158" fg:w="6"/><text x="6.5801%" y="606.50"></text></g><g><title>_Py_NewRef (object.h:582) (6 samples, 0.24%)</title><rect x="6.3301%" y="612" width="0.2404%" height="15" fill="rgb(213,79,30)" fg:x="158" fg:w="6"/><text x="6.5801%" y="622.50"></text></g><g><title>_Py_INCREF (object.h:472) (6 samples, 0.24%)</title><rect x="6.3301%" y="628" width="0.2404%" height="15" fill="rgb(246,177,23)" fg:x="158" fg:w="6"/><text x="6.5801%" y="638.50"></text></g><g><title>PyThread_release_lock (python3.10) (6 samples, 0.24%)</title><rect x="6.3301%" y="644" width="0.2404%" height="15" fill="rgb(230,62,27)" fg:x="158" fg:w="6"/><text x="6.5801%" y="654.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.31.so) (6 samples, 0.24%)</title><rect x="6.3301%" y="660" width="0.2404%" height="15" fill="rgb(216,154,8)" fg:x="158" fg:w="6"/><text x="6.5801%" y="670.50"></text></g><g><title>run_in_executor (loop.c:48101) (12 samples, 0.48%)</title><rect x="6.1298%" y="548" width="0.4808%" height="15" fill="rgb(244,35,45)" fg:x="153" fg:w="12"/><text x="6.3798%" y="558.50"></text></g><g><title>engine_step (vllm/engine/async_llm_engine.py:450) (149 samples, 5.97%)</title><rect x="0.8814%" y="468" width="5.9696%" height="15" fill="rgb(251,115,12)" fg:x="22" fg:w="149"/><text x="1.1314%" y="478.50">engine_s..</text></g><g><title>step_async (vllm/engine/async_llm_engine.py:211) (28 samples, 1.12%)</title><rect x="5.7292%" y="484" width="1.1218%" height="15" fill="rgb(240,54,50)" fg:x="143" fg:w="28"/><text x="5.9792%" y="494.50"></text></g><g><title>execute_model_async (vllm/executor/gpu_executor.py:139) (28 samples, 1.12%)</title><rect x="5.7292%" y="500" width="1.1218%" height="15" fill="rgb(233,84,52)" fg:x="143" fg:w="28"/><text x="5.9792%" y="510.50"></text></g><g><title>_async_wrapper (vllm/utils.py:175) (26 samples, 1.04%)</title><rect x="5.8093%" y="516" width="1.0417%" height="15" fill="rgb(207,117,47)" fg:x="145" fg:w="26"/><text x="6.0593%" y="526.50"></text></g><g><title>run_in_executor (loop.c:47859) (25 samples, 1.00%)</title><rect x="5.8494%" y="532" width="1.0016%" height="15" fill="rgb(249,43,39)" fg:x="146" fg:w="25"/><text x="6.0994%" y="542.50"></text></g><g><title>run_in_executor (loop.c:48113) (6 samples, 0.24%)</title><rect x="6.6106%" y="548" width="0.2404%" height="15" fill="rgb(209,38,44)" fg:x="165" fg:w="6"/><text x="6.8606%" y="558.50"></text></g><g><title>wrap_future (asyncio/futures.py:416) (3 samples, 0.12%)</title><rect x="6.7308%" y="564" width="0.1202%" height="15" fill="rgb(236,212,23)" fg:x="168" fg:w="3"/><text x="6.9808%" y="574.50"></text></g><g><title>producer (vllm/entrypoints/openai/serving_completion.py:67) (4 samples, 0.16%)</title><rect x="6.8510%" y="468" width="0.1603%" height="15" fill="rgb(242,79,21)" fg:x="171" fg:w="4"/><text x="7.1010%" y="478.50"></text></g><g><title>__call__ (starlette/routing.py:715) (4 samples, 0.16%)</title><rect x="7.1715%" y="596" width="0.1603%" height="15" fill="rgb(211,96,35)" fg:x="179" fg:w="4"/><text x="7.4215%" y="606.50"></text></g><g><title>app (fastapi/routing.py:227) (4 samples, 0.16%)</title><rect x="7.3317%" y="644" width="0.1603%" height="15" fill="rgb(253,215,40)" fg:x="183" fg:w="4"/><text x="7.5817%" y="654.50"></text></g><g><title>app (fastapi/routing.py:271) (10 samples, 0.40%)</title><rect x="7.6522%" y="644" width="0.4006%" height="15" fill="rgb(211,81,21)" fg:x="191" fg:w="10"/><text x="7.9022%" y="654.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:610) (5 samples, 0.20%)</title><rect x="7.8526%" y="660" width="0.2003%" height="15" fill="rgb(208,190,38)" fg:x="196" fg:w="5"/><text x="8.1026%" y="670.50"></text></g><g><title>create_completion (vllm/entrypoints/openai/serving_completion.py:120) (6 samples, 0.24%)</title><rect x="8.0529%" y="692" width="0.2404%" height="15" fill="rgb(235,213,38)" fg:x="201" fg:w="6"/><text x="8.3029%" y="702.50"></text></g><g><title>random_uuid (vllm/utils.py:155) (5 samples, 0.20%)</title><rect x="8.0929%" y="708" width="0.2003%" height="15" fill="rgb(237,122,38)" fg:x="202" fg:w="5"/><text x="8.3429%" y="718.50"></text></g><g><title>uuid4 (uuid.py:720) (4 samples, 0.16%)</title><rect x="8.1330%" y="724" width="0.1603%" height="15" fill="rgb(244,218,35)" fg:x="203" fg:w="4"/><text x="8.3830%" y="734.50"></text></g><g><title>_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::fold::hd01d134c6560fed5 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (6 samples, 0.24%)</title><rect x="8.8942%" y="1108" width="0.2404%" height="15" fill="rgb(240,68,47)" fg:x="222" fg:w="6"/><text x="9.1442%" y="1118.50"></text></g><g><title>core::hash::BuildHasher::hash_one::h9fec1dac7fc01bd9 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.12%)</title><rect x="9.0144%" y="1124" width="0.1202%" height="15" fill="rgb(210,16,53)" fg:x="225" fg:w="3"/><text x="9.2644%" y="1134.50"></text></g><g><title>_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::fold::h48e713d9fce202d1 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (8 samples, 0.32%)</title><rect x="9.1346%" y="1140" width="0.3205%" height="15" fill="rgb(235,124,12)" fg:x="228" fg:w="8"/><text x="9.3846%" y="1150.50"></text></g><g><title>_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$::from_iter::hdb9adc986ac2ff3e (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (9 samples, 0.36%)</title><rect x="9.1346%" y="1124" width="0.3606%" height="15" fill="rgb(224,169,11)" fg:x="228" fg:w="9"/><text x="9.3846%" y="1134.50"></text></g><g><title>0x7f9b68dc94ee (libc-2.31.so) (3 samples, 0.12%)</title><rect x="9.6955%" y="1204" width="0.1202%" height="15" fill="rgb(250,166,2)" fg:x="242" fg:w="3"/><text x="9.9455%" y="1214.50"></text></g><g><title>core::ptr::drop_in_place$LT$alloc..vec..splice..Splice$LT$alloc..vec..into_iter..IntoIter$LT$$LP$usize$C$usize$RP$$GT$$GT$$GT$::hd95df69feca2173c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (7 samples, 0.28%)</title><rect x="9.5753%" y="1124" width="0.2804%" height="15" fill="rgb(242,216,29)" fg:x="239" fg:w="7"/><text x="9.8253%" y="1134.50"></text></g><g><title>_$LT$alloc..vec..splice..Splice$LT$I$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::ha75c767d9dbe1ac6 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (7 samples, 0.28%)</title><rect x="9.5753%" y="1140" width="0.2804%" height="15" fill="rgb(230,116,27)" fg:x="239" fg:w="7"/><text x="9.8253%" y="1150.50"></text></g><g><title>alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::hd533336480dfc9c2 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (7 samples, 0.28%)</title><rect x="9.5753%" y="1156" width="0.2804%" height="15" fill="rgb(228,99,48)" fg:x="239" fg:w="7"/><text x="9.8253%" y="1166.50"></text></g><g><title>alloc::raw_vec::finish_grow::hf3618e7036b14b04 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (7 samples, 0.28%)</title><rect x="9.5753%" y="1172" width="0.2804%" height="15" fill="rgb(253,11,6)" fg:x="239" fg:w="7"/><text x="9.8253%" y="1182.50"></text></g><g><title>realloc (libc-2.31.so) (7 samples, 0.28%)</title><rect x="9.5753%" y="1188" width="0.2804%" height="15" fill="rgb(247,143,39)" fg:x="239" fg:w="7"/><text x="9.8253%" y="1198.50"></text></g><g><title>tokenizers::tokenizer::pre_tokenizer::PreTokenizedString::normalize::h972c3419a26287e1 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (26 samples, 1.04%)</title><rect x="8.8542%" y="1092" width="1.0417%" height="15" fill="rgb(236,97,10)" fg:x="221" fg:w="26"/><text x="9.1042%" y="1102.50"></text></g><g><title>tokenizers::tokenizer::normalizer::NormalizedString::transform_range::h1cb5a3b09a348b4c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (19 samples, 0.76%)</title><rect x="9.1346%" y="1108" width="0.7612%" height="15" fill="rgb(233,208,19)" fg:x="228" fg:w="19"/><text x="9.3846%" y="1118.50"></text></g><g><title>_$LT$$RF$tokenizers..utils..onig..SysRegex$u20$as$u20$tokenizers..tokenizer..pattern..Pattern$GT$::find_matches::hdbb387b9f60ce93f (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (8 samples, 0.32%)</title><rect x="9.9359%" y="1124" width="0.3205%" height="15" fill="rgb(216,164,2)" fg:x="248" fg:w="8"/><text x="10.1859%" y="1134.50"></text></g><g><title>_$LT$onig..find..FindMatches$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h3bda83e94861630a (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (7 samples, 0.28%)</title><rect x="9.9760%" y="1140" width="0.2804%" height="15" fill="rgb(220,129,5)" fg:x="249" fg:w="7"/><text x="10.2260%" y="1150.50"></text></g><g><title>onig::Regex::search_with_encoding::h902e84b5aac6a6ef (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (7 samples, 0.28%)</title><rect x="9.9760%" y="1156" width="0.2804%" height="15" fill="rgb(242,17,10)" fg:x="249" fg:w="7"/><text x="10.2260%" y="1166.50"></text></g><g><title>onig_search_with_param (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (6 samples, 0.24%)</title><rect x="10.0160%" y="1172" width="0.2404%" height="15" fill="rgb(242,107,0)" fg:x="250" fg:w="6"/><text x="10.2660%" y="1182.50"></text></g><g><title>search_in_range.part.0 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (6 samples, 0.24%)</title><rect x="10.0160%" y="1188" width="0.2404%" height="15" fill="rgb(251,28,31)" fg:x="250" fg:w="6"/><text x="10.2660%" y="1198.50"></text></g><g><title>match_at (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (6 samples, 0.24%)</title><rect x="10.0160%" y="1204" width="0.2404%" height="15" fill="rgb(233,223,10)" fg:x="250" fg:w="6"/><text x="10.2660%" y="1214.50"></text></g><g><title>malloc (libc-2.31.so) (3 samples, 0.12%)</title><rect x="10.1362%" y="1220" width="0.1202%" height="15" fill="rgb(215,21,27)" fg:x="253" fg:w="3"/><text x="10.3862%" y="1230.50"></text></g><g><title>_$LT$tokenizers..pre_tokenizers..PyPreTokenizerTypeWrapper$u20$as$u20$tokenizers..tokenizer..PreTokenizer$GT$::pre_tokenize::h69025be94f8c1c1c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (41 samples, 1.64%)</title><rect x="8.8542%" y="1044" width="1.6426%" height="15" fill="rgb(232,23,21)" fg:x="221" fg:w="41"/><text x="9.1042%" y="1054.50"></text></g><g><title>_$LT$tokenizers..pre_tokenizers..PyPreTokenizerWrapper$u20$as$u20$tokenizers..tokenizer..PreTokenizer$GT$::pre_tokenize::h1e250569409b8596 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (41 samples, 1.64%)</title><rect x="8.8542%" y="1060" width="1.6426%" height="15" fill="rgb(244,5,23)" fg:x="221" fg:w="41"/><text x="9.1042%" y="1070.50"></text></g><g><title>_$LT$tokenizers..pre_tokenizers..PreTokenizerWrapper$u20$as$u20$tokenizers..tokenizer..PreTokenizer$GT$::pre_tokenize::h515199d8ff355ab2 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (41 samples, 1.64%)</title><rect x="8.8542%" y="1076" width="1.6426%" height="15" fill="rgb(226,81,46)" fg:x="221" fg:w="41"/><text x="9.1042%" y="1086.50"></text></g><g><title>tokenizers::tokenizer::pre_tokenizer::PreTokenizedString::split::h5615d6e431778ed0 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (15 samples, 0.60%)</title><rect x="9.8958%" y="1092" width="0.6010%" height="15" fill="rgb(247,70,30)" fg:x="247" fg:w="15"/><text x="10.1458%" y="1102.50"></text></g><g><title>tokenizers::tokenizer::normalizer::NormalizedString::split::h728b8d1c475bb89d (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (14 samples, 0.56%)</title><rect x="9.9359%" y="1108" width="0.5609%" height="15" fill="rgb(212,68,19)" fg:x="248" fg:w="14"/><text x="10.1859%" y="1118.50"></text></g><g><title>alloc::vec::in_place_collect::_$LT$impl$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$u20$for$u20$alloc..vec..Vec$LT$T$GT$$GT$::from_iter::hffb52a6c5c3a58de (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (6 samples, 0.24%)</title><rect x="10.2564%" y="1124" width="0.2404%" height="15" fill="rgb(240,187,13)" fg:x="256" fg:w="6"/><text x="10.5064%" y="1134.50"></text></g><g><title>tokenizers::tokenizer::normalizer::NormalizedString::slice::h8eb469562fff9237 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (6 samples, 0.24%)</title><rect x="10.2564%" y="1140" width="0.2404%" height="15" fill="rgb(223,113,26)" fg:x="256" fg:w="6"/><text x="10.5064%" y="1150.50"></text></g><g><title>malloc (libc-2.31.so) (6 samples, 0.24%)</title><rect x="10.2564%" y="1156" width="0.2404%" height="15" fill="rgb(206,192,2)" fg:x="256" fg:w="6"/><text x="10.5064%" y="1166.50"></text></g><g><title>_$LT$std..collections..hash..map..HashMap$LT$K$C$V$C$S$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$$LP$K$C$V$RP$$GT$$GT$::from_iter::h2470e1187957a39a (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (8 samples, 0.32%)</title><rect x="10.5769%" y="1060" width="0.3205%" height="15" fill="rgb(241,108,4)" fg:x="264" fg:w="8"/><text x="10.8269%" y="1070.50"></text></g><g><title>_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::fold::h9cae30213cafa526 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (8 samples, 0.32%)</title><rect x="10.5769%" y="1076" width="0.3205%" height="15" fill="rgb(247,173,49)" fg:x="264" fg:w="8"/><text x="10.8269%" y="1086.50"></text></g><g><title>hashbrown::map::HashMap$LT$K$C$V$C$S$C$A$GT$::insert::h6e976475be8fda50 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (7 samples, 0.28%)</title><rect x="10.6170%" y="1092" width="0.2804%" height="15" fill="rgb(224,114,35)" fg:x="265" fg:w="7"/><text x="10.8670%" y="1102.50"></text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::reserve_rehash::h579fcc023492df9f (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.16%)</title><rect x="10.7372%" y="1108" width="0.1603%" height="15" fill="rgb(245,159,27)" fg:x="268" fg:w="4"/><text x="10.9872%" y="1118.50"></text></g><g><title>alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h889798f00a25a52c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.16%)</title><rect x="10.9776%" y="1076" width="0.1603%" height="15" fill="rgb(245,172,44)" fg:x="274" fg:w="4"/><text x="11.2276%" y="1086.50"></text></g><g><title>alloc::raw_vec::finish_grow::hf3618e7036b14b04 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.16%)</title><rect x="10.9776%" y="1092" width="0.1603%" height="15" fill="rgb(236,23,11)" fg:x="274" fg:w="4"/><text x="11.2276%" y="1102.50"></text></g><g><title>realloc (libc-2.31.so) (4 samples, 0.16%)</title><rect x="10.9776%" y="1108" width="0.1603%" height="15" fill="rgb(205,117,38)" fg:x="274" fg:w="4"/><text x="11.2276%" y="1118.50"></text></g><g><title>0x7f9b68dc94ee (libc-2.31.so) (4 samples, 0.16%)</title><rect x="10.9776%" y="1124" width="0.1603%" height="15" fill="rgb(237,72,25)" fg:x="274" fg:w="4"/><text x="11.2276%" y="1134.50"></text></g><g><title>core::ops::function::impls::_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$::call_once::hac759235da5aea3c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.12%)</title><rect x="11.1378%" y="1076" width="0.1202%" height="15" fill="rgb(244,70,9)" fg:x="278" fg:w="3"/><text x="11.3878%" y="1086.50"></text></g><g><title>tokenizers::tokenizer::pre_tokenizer::PreTokenizedString::into_encoding::h610b11bc8cf26de0 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (19 samples, 0.76%)</title><rect x="10.5769%" y="1044" width="0.7612%" height="15" fill="rgb(217,125,39)" fg:x="264" fg:w="19"/><text x="10.8269%" y="1054.50"></text></g><g><title>_$LT$tokenizers..tokenizer..encoding..Encoding$u20$as$u20$core..iter..traits..collect..FromIterator$LT$$LP$u32$C$alloc..string..String$C$$LP$usize$C$usize$RP$$C$core..option..Option$LT$u32$GT$$C$u32$RP$$GT$$GT$::from_iter::h3ec9f7f0284965f0 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (11 samples, 0.44%)</title><rect x="10.8974%" y="1060" width="0.4407%" height="15" fill="rgb(235,36,10)" fg:x="272" fg:w="11"/><text x="11.1474%" y="1070.50"></text></g><g><title>_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::fold::h4b57050a1d3b1613 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (6 samples, 0.24%)</title><rect x="11.3381%" y="1124" width="0.2404%" height="15" fill="rgb(251,123,47)" fg:x="283" fg:w="6"/><text x="11.5881%" y="1134.50"></text></g><g><title>_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$::clone::h987c798a31b0c9ef (string.rs:1930) (3 samples, 0.12%)</title><rect x="11.4583%" y="1140" width="0.1202%" height="15" fill="rgb(221,13,13)" fg:x="286" fg:w="3"/><text x="11.7083%" y="1150.50"></text></g><g><title>_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$::clone::hd2d1d1918991462c (mod.rs:2628) (3 samples, 0.12%)</title><rect x="11.4583%" y="1156" width="0.1202%" height="15" fill="rgb(238,131,9)" fg:x="286" fg:w="3"/><text x="11.7083%" y="1166.50"></text></g><g><title>alloc::slice::_$LT$impl$u20$$u5b$T$u5d$$GT$::to_vec_in::heabc7f42908e040b (slice.rs:441) (3 samples, 0.12%)</title><rect x="11.4583%" y="1172" width="0.1202%" height="15" fill="rgb(211,50,8)" fg:x="286" fg:w="3"/><text x="11.7083%" y="1182.50"></text></g><g><title>alloc::slice::hack::to_vec::hba9186cd64c11ce7 (slice.rs:111) (3 samples, 0.12%)</title><rect x="11.4583%" y="1188" width="0.1202%" height="15" fill="rgb(245,182,24)" fg:x="286" fg:w="3"/><text x="11.7083%" y="1198.50"></text></g><g><title>_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$::to_vec::hf793d7bb3ad19572 (slice.rs:162) (3 samples, 0.12%)</title><rect x="11.4583%" y="1204" width="0.1202%" height="15" fill="rgb(242,14,37)" fg:x="286" fg:w="3"/><text x="11.7083%" y="1214.50"></text></g><g><title>alloc::vec::Vec$LT$T$C$A$GT$::with_capacity_in::h1720463f8e31ac8c (mod.rs:670) (3 samples, 0.12%)</title><rect x="11.4583%" y="1220" width="0.1202%" height="15" fill="rgb(246,228,12)" fg:x="286" fg:w="3"/><text x="11.7083%" y="1230.50"></text></g><g><title>alloc::raw_vec::RawVec$LT$T$C$A$GT$::with_capacity_in::h563d175855c1ea41 (raw_vec.rs:130) (3 samples, 0.12%)</title><rect x="11.4583%" y="1236" width="0.1202%" height="15" fill="rgb(213,55,15)" fg:x="286" fg:w="3"/><text x="11.7083%" y="1246.50"></text></g><g><title>alloc::raw_vec::RawVec$LT$T$C$A$GT$::allocate_in::h0862c4253bde9643 (raw_vec.rs:184) (3 samples, 0.12%)</title><rect x="11.4583%" y="1252" width="0.1202%" height="15" fill="rgb(209,9,3)" fg:x="286" fg:w="3"/><text x="11.7083%" y="1262.50"></text></g><g><title>_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$::allocate::hb68b8f39dcd6fde2 (alloc.rs:241) (3 samples, 0.12%)</title><rect x="11.4583%" y="1268" width="0.1202%" height="15" fill="rgb(230,59,30)" fg:x="286" fg:w="3"/><text x="11.7083%" y="1278.50"></text></g><g><title>alloc::alloc::Global::alloc_impl::h11b25a49508ca8ec (alloc.rs:181) (3 samples, 0.12%)</title><rect x="11.4583%" y="1284" width="0.1202%" height="15" fill="rgb(209,121,21)" fg:x="286" fg:w="3"/><text x="11.7083%" y="1294.50"></text></g><g><title>alloc::alloc::alloc::hb875f652397ec6a8 (alloc.rs:98) (3 samples, 0.12%)</title><rect x="11.4583%" y="1300" width="0.1202%" height="15" fill="rgb(220,109,13)" fg:x="286" fg:w="3"/><text x="11.7083%" y="1310.50"></text></g><g><title>malloc (libc-2.31.so) (3 samples, 0.12%)</title><rect x="11.4583%" y="1316" width="0.1202%" height="15" fill="rgb(232,18,1)" fg:x="286" fg:w="3"/><text x="11.7083%" y="1326.50"></text></g><g><title>_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$::from_iter::hc5954937185c8439 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (11 samples, 0.44%)</title><rect x="11.3381%" y="1108" width="0.4407%" height="15" fill="rgb(215,41,42)" fg:x="283" fg:w="11"/><text x="11.5881%" y="1118.50"></text></g><g><title>malloc (libc-2.31.so) (5 samples, 0.20%)</title><rect x="11.5785%" y="1124" width="0.2003%" height="15" fill="rgb(224,123,36)" fg:x="289" fg:w="5"/><text x="11.8285%" y="1134.50"></text></g><g><title>tokenizers::models::bpe::model::BPE::merge_word::h8d9e0f456f22f49c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (16 samples, 0.64%)</title><rect x="11.7788%" y="1108" width="0.6410%" height="15" fill="rgb(240,125,3)" fg:x="294" fg:w="16"/><text x="12.0288%" y="1118.50"></text></g><g><title>tokenizers::models::bpe::word::Word::merge_all::h58decd08fc88527a (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (10 samples, 0.40%)</title><rect x="12.0192%" y="1124" width="0.4006%" height="15" fill="rgb(205,98,50)" fg:x="300" fg:w="10"/><text x="12.2692%" y="1134.50"></text></g><g><title>core::ops::function::impls::_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$::call_mut::h547063f4a0f658fa (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.12%)</title><rect x="12.2997%" y="1140" width="0.1202%" height="15" fill="rgb(205,185,37)" fg:x="307" fg:w="3"/><text x="12.5497%" y="1150.50"></text></g><g><title>tokenizers::tokenizer::TokenizerImpl$LT$M$C$N$C$PT$C$PP$C$D$GT$::encode_single_sequence::ha6762b4298ee7d75 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (92 samples, 3.69%)</title><rect x="8.8542%" y="1028" width="3.6859%" height="15" fill="rgb(238,207,15)" fg:x="221" fg:w="92"/><text x="9.1042%" y="1038.50">toke..</text></g><g><title>tokenizers::tokenizer::pre_tokenizer::PreTokenizedString::tokenize::hf44791a0f5ab5018 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (30 samples, 1.20%)</title><rect x="11.3381%" y="1044" width="1.2019%" height="15" fill="rgb(213,199,42)" fg:x="283" fg:w="30"/><text x="11.5881%" y="1054.50"></text></g><g><title>_$LT$tokenizers..models..PyModel$u20$as$u20$tokenizers..tokenizer..Model$GT$::tokenize::h6a76719810729306 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (30 samples, 1.20%)</title><rect x="11.3381%" y="1060" width="1.2019%" height="15" fill="rgb(235,201,11)" fg:x="283" fg:w="30"/><text x="11.5881%" y="1070.50"></text></g><g><title>_$LT$tokenizers..models..ModelWrapper$u20$as$u20$tokenizers..tokenizer..Model$GT$::tokenize::haa93e9c981874ee4 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (30 samples, 1.20%)</title><rect x="11.3381%" y="1076" width="1.2019%" height="15" fill="rgb(207,46,11)" fg:x="283" fg:w="30"/><text x="11.5881%" y="1086.50"></text></g><g><title>_$LT$tokenizers..models..bpe..model..BPE$u20$as$u20$tokenizers..tokenizer..Model$GT$::tokenize::hed47e12b732dfbd9 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (30 samples, 1.20%)</title><rect x="11.3381%" y="1092" width="1.2019%" height="15" fill="rgb(241,35,35)" fg:x="283" fg:w="30"/><text x="11.5881%" y="1102.50"></text></g><g><title>tokenizers::utils::cache::Cache$LT$K$C$V$GT$::get::hb1384d2b8d75f9cb (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.12%)</title><rect x="12.4199%" y="1108" width="0.1202%" height="15" fill="rgb(243,32,47)" fg:x="310" fg:w="3"/><text x="12.6699%" y="1118.50"></text></g><g><title>pyo3::marker::Python::allow_threads::h56b8e85fc6955535 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (97 samples, 3.89%)</title><rect x="8.7740%" y="884" width="3.8862%" height="15" fill="rgb(247,202,23)" fg:x="219" fg:w="97"/><text x="9.0240%" y="894.50">pyo3..</text></g><g><title>tokenizers::tokenizer::TokenizerImpl$LT$M$C$N$C$PT$C$PP$C$D$GT$::encode_batch_char_offsets::h9f0dcf59a6a0aab7 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (95 samples, 3.81%)</title><rect x="8.8542%" y="900" width="3.8061%" height="15" fill="rgb(219,102,11)" fg:x="221" fg:w="95"/><text x="9.1042%" y="910.50">toke..</text></g><g><title>rayon::result::_$LT$impl$u20$rayon..iter..FromParallelIterator$LT$core..result..Result$LT$T$C$E$GT$$GT$$u20$for$u20$core..result..Result$LT$C$C$E$GT$$GT$::from_par_iter::haa53d38c8bb650ec (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (95 samples, 3.81%)</title><rect x="8.8542%" y="916" width="3.8061%" height="15" fill="rgb(243,110,44)" fg:x="221" fg:w="95"/><text x="9.1042%" y="926.50">rayo..</text></g><g><title>rayon::iter::plumbing::bridge::h3879b5f24ce6f8ba (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (95 samples, 3.81%)</title><rect x="8.8542%" y="932" width="3.8061%" height="15" fill="rgb(222,74,54)" fg:x="221" fg:w="95"/><text x="9.1042%" y="942.50">rayo..</text></g><g><title>_$LT$rayon..vec..IntoIter$LT$T$GT$$u20$as$u20$rayon..iter..IndexedParallelIterator$GT$::with_producer::hfa52dcf5bee38650 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (95 samples, 3.81%)</title><rect x="8.8542%" y="948" width="3.8061%" height="15" fill="rgb(216,99,12)" fg:x="221" fg:w="95"/><text x="9.1042%" y="958.50">_$LT..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::h04755151bc703a40 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (95 samples, 3.81%)</title><rect x="8.8542%" y="964" width="3.8061%" height="15" fill="rgb(226,22,26)" fg:x="221" fg:w="95"/><text x="9.1042%" y="974.50">rayo..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with::hb6ae1fd4e56a56a8 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (95 samples, 3.81%)</title><rect x="8.8542%" y="980" width="3.8061%" height="15" fill="rgb(217,163,10)" fg:x="221" fg:w="95"/><text x="9.1042%" y="990.50">rayo..</text></g><g><title>_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$::spec_extend::hed0509d75f20b4af (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (95 samples, 3.81%)</title><rect x="8.8542%" y="996" width="3.8061%" height="15" fill="rgb(213,25,53)" fg:x="221" fg:w="95"/><text x="9.1042%" y="1006.50">_$LT..</text></g><g><title>tokenizers::tokenizer::TokenizerImpl$LT$M$C$N$C$PT$C$PP$C$D$GT$::encode_char_offsets::he3ab3fab95e35eb0 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (95 samples, 3.81%)</title><rect x="8.8542%" y="1012" width="3.8061%" height="15" fill="rgb(252,105,26)" fg:x="221" fg:w="95"/><text x="9.1042%" y="1022.50">toke..</text></g><g><title>tokenizers::tokenizer::TokenizerImpl$LT$M$C$N$C$PT$C$PP$C$D$GT$::post_process::h4ebde4d901b20f9e (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.12%)</title><rect x="12.5401%" y="1028" width="0.1202%" height="15" fill="rgb(220,39,43)" fg:x="313" fg:w="3"/><text x="12.7901%" y="1038.50"></text></g><g><title>tokenizers::tokenizer::PostProcessor::process::hdc1638fb670d6349 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.12%)</title><rect x="12.5401%" y="1044" width="0.1202%" height="15" fill="rgb(229,68,48)" fg:x="313" fg:w="3"/><text x="12.7901%" y="1054.50"></text></g><g><title>_batch_encode_plus (transformers/tokenization_utils_fast.py:504) (100 samples, 4.01%)</title><rect x="8.6939%" y="820" width="4.0064%" height="15" fill="rgb(252,8,32)" fg:x="217" fg:w="100"/><text x="8.9439%" y="830.50">_bat..</text></g><g><title>tokenizers::tokenizer::_::_$LT$impl$u20$pyo3..impl_..pyclass..PyMethods$LT$tokenizers..tokenizer..PyTokenizer$GT$$u20$for$u20$pyo3..impl_..pyclass..PyClassImplCollector$LT$tokenizers..tokenizer..PyTokenizer$GT$$GT$::py_methods::ITEMS::trampoline::h5e7c2864c05163ad (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (99 samples, 3.97%)</title><rect x="8.7340%" y="836" width="3.9663%" height="15" fill="rgb(223,20,43)" fg:x="218" fg:w="99"/><text x="8.9840%" y="846.50">toke..</text></g><g><title>pyo3::impl_::trampoline::trampoline::ha39f8c3f2d85888c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (99 samples, 3.97%)</title><rect x="8.7340%" y="852" width="3.9663%" height="15" fill="rgb(229,81,49)" fg:x="218" fg:w="99"/><text x="8.9840%" y="862.50">pyo3..</text></g><g><title>tokenizers::tokenizer::_::_$LT$impl$u20$tokenizers..tokenizer..PyTokenizer$GT$::__pymethod_encode_batch__::h7c8cfda4b04e3d9f (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (99 samples, 3.97%)</title><rect x="8.7340%" y="868" width="3.9663%" height="15" fill="rgb(236,28,36)" fg:x="218" fg:w="99"/><text x="8.9840%" y="878.50">toke..</text></g><g><title>__init__ (transformers/tokenization_utils_base.py:211) (3 samples, 0.12%)</title><rect x="12.7404%" y="836" width="0.1202%" height="15" fill="rgb(249,185,26)" fg:x="318" fg:w="3"/><text x="12.9904%" y="846.50"></text></g><g><title>_encode_plus (transformers/tokenization_utils_fast.py:576) (109 samples, 4.37%)</title><rect x="8.5337%" y="788" width="4.3670%" height="15" fill="rgb(249,174,33)" fg:x="213" fg:w="109"/><text x="8.7837%" y="798.50">_enco..</text></g><g><title>_batch_encode_plus (transformers/models/gpt2/tokenization_gpt2_fast.py:162) (107 samples, 4.29%)</title><rect x="8.6138%" y="804" width="4.2869%" height="15" fill="rgb(233,201,37)" fg:x="215" fg:w="107"/><text x="8.8638%" y="814.50">_batc..</text></g><g><title>_batch_encode_plus (transformers/tokenization_utils_fast.py:552) (4 samples, 0.16%)</title><rect x="12.7404%" y="820" width="0.1603%" height="15" fill="rgb(221,78,26)" fg:x="318" fg:w="4"/><text x="12.9904%" y="830.50"></text></g><g><title>encode_plus (transformers/tokenization_utils_base.py:3008) (112 samples, 4.49%)</title><rect x="8.4936%" y="756" width="4.4872%" height="15" fill="rgb(250,127,30)" fg:x="212" fg:w="112"/><text x="8.7436%" y="766.50">encod..</text></g><g><title>_encode_plus (transformers/models/gpt2/tokenization_gpt2_fast.py:172) (111 samples, 4.45%)</title><rect x="8.5337%" y="772" width="4.4471%" height="15" fill="rgb(230,49,44)" fg:x="213" fg:w="111"/><text x="8.7837%" y="782.50">_enco..</text></g><g><title>_validate_prompt_and_tokenize (vllm/entrypoints/openai/serving_engine.py:182) (115 samples, 4.61%)</title><rect x="8.4135%" y="708" width="4.6074%" height="15" fill="rgb(229,67,23)" fg:x="210" fg:w="115"/><text x="8.6635%" y="718.50">_vali..</text></g><g><title>__call__ (transformers/tokenization_utils_base.py:2829) (115 samples, 4.61%)</title><rect x="8.4135%" y="724" width="4.6074%" height="15" fill="rgb(249,83,47)" fg:x="210" fg:w="115"/><text x="8.6635%" y="734.50">__cal..</text></g><g><title>_call_one (transformers/tokenization_utils_base.py:2935) (113 samples, 4.53%)</title><rect x="8.4936%" y="740" width="4.5272%" height="15" fill="rgb(215,43,3)" fg:x="212" fg:w="113"/><text x="8.7436%" y="750.50">_call..</text></g><g><title>create_completion (vllm/entrypoints/openai/serving_completion.py:143) (118 samples, 4.73%)</title><rect x="8.4135%" y="692" width="4.7276%" height="15" fill="rgb(238,154,13)" fg:x="210" fg:w="118"/><text x="8.6635%" y="702.50">create..</text></g><g><title>_validate_prompt_and_tokenize (vllm/entrypoints/openai/serving_engine.py:183) (3 samples, 0.12%)</title><rect x="13.0208%" y="708" width="0.1202%" height="15" fill="rgb(219,56,2)" fg:x="325" fg:w="3"/><text x="13.2708%" y="718.50"></text></g><g><title>pyo3::impl_::pyclass::tp_dealloc::hc929f616ac9bb42d (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.12%)</title><rect x="13.0208%" y="724" width="0.1202%" height="15" fill="rgb(233,0,4)" fg:x="325" fg:w="3"/><text x="13.2708%" y="734.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline_unraisable::h51cbd3c220eee152 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.12%)</title><rect x="13.0208%" y="740" width="0.1202%" height="15" fill="rgb(235,30,7)" fg:x="325" fg:w="3"/><text x="13.2708%" y="750.50"></text></g><g><title>_$LT$pyo3..pycell..PyCell$LT$T$GT$$u20$as$u20$pyo3..pycell..PyCellLayout$LT$T$GT$$GT$::tp_dealloc::h4a43f0d7c9d8c388 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.12%)</title><rect x="13.0208%" y="756" width="0.1202%" height="15" fill="rgb(250,79,13)" fg:x="325" fg:w="3"/><text x="13.2708%" y="766.50"></text></g><g><title>core::ptr::drop_in_place$LT$tokenizers..tokenizer..encoding..Encoding$GT$::h9b696439680a41f7 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.12%)</title><rect x="13.0208%" y="772" width="0.1202%" height="15" fill="rgb(211,146,34)" fg:x="325" fg:w="3"/><text x="13.2708%" y="782.50"></text></g><g><title>create_completion (vllm/entrypoints/openai/api_server.py:103) (130 samples, 5.21%)</title><rect x="8.0529%" y="676" width="5.2083%" height="15" fill="rgb(228,22,38)" fg:x="201" fg:w="130"/><text x="8.3029%" y="686.50">create..</text></g><g><title>create_completion (vllm/entrypoints/openai/serving_completion.py:163) (3 samples, 0.12%)</title><rect x="13.1410%" y="692" width="0.1202%" height="15" fill="rgb(235,168,5)" fg:x="328" fg:w="3"/><text x="13.3910%" y="702.50"></text></g><g><title>app (starlette/routing.py:66) (151 samples, 6.05%)</title><rect x="7.3317%" y="628" width="6.0497%" height="15" fill="rgb(221,155,16)" fg:x="183" fg:w="151"/><text x="7.5817%" y="638.50">app (sta..</text></g><g><title>app (fastapi/routing.py:278) (133 samples, 5.33%)</title><rect x="8.0529%" y="644" width="5.3285%" height="15" fill="rgb(215,215,53)" fg:x="201" fg:w="133"/><text x="8.3029%" y="654.50">app (fa..</text></g><g><title>run_endpoint_function (fastapi/routing.py:190) (133 samples, 5.33%)</title><rect x="8.0529%" y="660" width="5.3285%" height="15" fill="rgb(223,4,10)" fg:x="201" fg:w="133"/><text x="8.3029%" y="670.50">run_end..</text></g><g><title>__call__ (starlette/responses.py:270) (4 samples, 0.16%)</title><rect x="13.3814%" y="644" width="0.1603%" height="15" fill="rgb(234,103,6)" fg:x="334" fg:w="4"/><text x="13.6314%" y="654.50"></text></g><g><title>run_asgi (uvicorn/protocols/http/httptools_impl.py:426) (167 samples, 6.69%)</title><rect x="7.0112%" y="468" width="6.6907%" height="15" fill="rgb(227,97,0)" fg:x="175" fg:w="167"/><text x="7.2612%" y="478.50">run_asgi ..</text></g><g><title>__call__ (uvicorn/middleware/proxy_headers.py:84) (167 samples, 6.69%)</title><rect x="7.0112%" y="484" width="6.6907%" height="15" fill="rgb(234,150,53)" fg:x="175" fg:w="167"/><text x="7.2612%" y="494.50">__call__ ..</text></g><g><title>__call__ (fastapi/applications.py:292) (167 samples, 6.69%)</title><rect x="7.0112%" y="500" width="6.6907%" height="15" fill="rgb(228,201,54)" fg:x="175" fg:w="167"/><text x="7.2612%" y="510.50">__call__ ..</text></g><g><title>__call__ (starlette/applications.py:122) (166 samples, 6.65%)</title><rect x="7.0513%" y="516" width="6.6506%" height="15" fill="rgb(222,22,37)" fg:x="176" fg:w="166"/><text x="7.3013%" y="526.50">__call__ ..</text></g><g><title>__call__ (starlette/middleware/errors.py:162) (166 samples, 6.65%)</title><rect x="7.0513%" y="532" width="6.6506%" height="15" fill="rgb(237,53,32)" fg:x="176" fg:w="166"/><text x="7.3013%" y="542.50">__call__ ..</text></g><g><title>__call__ (starlette/middleware/cors.py:83) (165 samples, 6.61%)</title><rect x="7.0913%" y="548" width="6.6106%" height="15" fill="rgb(233,25,53)" fg:x="177" fg:w="165"/><text x="7.3413%" y="558.50">__call__ ..</text></g><g><title>__call__ (starlette/middleware/exceptions.py:68) (165 samples, 6.61%)</title><rect x="7.0913%" y="564" width="6.6106%" height="15" fill="rgb(210,40,34)" fg:x="177" fg:w="165"/><text x="7.3413%" y="574.50">__call__ ..</text></g><g><title>__call__ (fastapi/middleware/asyncexitstack.py:17) (163 samples, 6.53%)</title><rect x="7.1715%" y="580" width="6.5304%" height="15" fill="rgb(241,220,44)" fg:x="179" fg:w="163"/><text x="7.4215%" y="590.50">__call__ ..</text></g><g><title>__call__ (starlette/routing.py:718) (159 samples, 6.37%)</title><rect x="7.3317%" y="596" width="6.3702%" height="15" fill="rgb(235,28,35)" fg:x="183" fg:w="159"/><text x="7.5817%" y="606.50">__call__..</text></g><g><title>handle (starlette/routing.py:276) (159 samples, 6.37%)</title><rect x="7.3317%" y="612" width="6.3702%" height="15" fill="rgb(210,56,17)" fg:x="183" fg:w="159"/><text x="7.5817%" y="622.50">handle (..</text></g><g><title>app (starlette/routing.py:69) (8 samples, 0.32%)</title><rect x="13.3814%" y="628" width="0.3205%" height="15" fill="rgb(224,130,29)" fg:x="334" fg:w="8"/><text x="13.6314%" y="638.50"></text></g><g><title>__call__ (starlette/responses.py:276) (4 samples, 0.16%)</title><rect x="13.5417%" y="644" width="0.1603%" height="15" fill="rgb(235,212,8)" fg:x="338" fg:w="4"/><text x="13.7917%" y="654.50"></text></g><g><title>start_soon (anyio/_backends/_asyncio.py:729) (4 samples, 0.16%)</title><rect x="13.5417%" y="660" width="0.1603%" height="15" fill="rgb(223,33,50)" fg:x="338" fg:w="4"/><text x="13.7917%" y="670.50"></text></g><g><title>run_engine_loop (vllm/engine/async_llm_engine.py:472) (7 samples, 0.28%)</title><rect x="13.7019%" y="468" width="0.2804%" height="15" fill="rgb(219,149,13)" fg:x="342" fg:w="7"/><text x="13.9519%" y="478.50"></text></g><g><title>wait_for (asyncio/tasks.py:427) (3 samples, 0.12%)</title><rect x="13.8622%" y="484" width="0.1202%" height="15" fill="rgb(250,156,29)" fg:x="346" fg:w="3"/><text x="14.1122%" y="494.50"></text></g><g><title>ensure_future (asyncio/tasks.py:615) (3 samples, 0.12%)</title><rect x="13.8622%" y="500" width="0.1202%" height="15" fill="rgb(216,193,19)" fg:x="346" fg:w="3"/><text x="14.1122%" y="510.50"></text></g><g><title>formatMessage (uvicorn/logging.py:106) (3 samples, 0.12%)</title><rect x="14.4631%" y="676" width="0.1202%" height="15" fill="rgb(216,135,14)" fg:x="361" fg:w="3"/><text x="14.7131%" y="686.50"></text></g><g><title>formatMessage (uvicorn/logging.py:117) (4 samples, 0.16%)</title><rect x="14.6635%" y="676" width="0.1603%" height="15" fill="rgb(241,47,5)" fg:x="366" fg:w="4"/><text x="14.9135%" y="686.50"></text></g><g><title>emit (logging/__init__.py:1100) (12 samples, 0.48%)</title><rect x="14.3830%" y="628" width="0.4808%" height="15" fill="rgb(233,42,35)" fg:x="359" fg:w="12"/><text x="14.6330%" y="638.50"></text></g><g><title>format (logging/__init__.py:943) (12 samples, 0.48%)</title><rect x="14.3830%" y="644" width="0.4808%" height="15" fill="rgb(231,13,6)" fg:x="359" fg:w="12"/><text x="14.6330%" y="654.50"></text></g><g><title>format (logging/__init__.py:681) (10 samples, 0.40%)</title><rect x="14.4631%" y="660" width="0.4006%" height="15" fill="rgb(207,181,40)" fg:x="361" fg:w="10"/><text x="14.7131%" y="670.50"></text></g><g><title>pthread_cond_timedwait@@GLIBC_2.3.2 (libpthread-2.31.so) (3 samples, 0.12%)</title><rect x="14.8638%" y="644" width="0.1202%" height="15" fill="rgb(254,173,49)" fg:x="371" fg:w="3"/><text x="15.1138%" y="654.50"></text></g><g><title>emit (logging/__init__.py:1103) (4 samples, 0.16%)</title><rect x="14.8638%" y="628" width="0.1603%" height="15" fill="rgb(221,1,38)" fg:x="371" fg:w="4"/><text x="15.1138%" y="638.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (loop.c:171480) (372 samples, 14.90%)</title><rect x="0.2003%" y="404" width="14.9038%" height="15" fill="rgb(206,124,46)" fg:x="5" fg:w="372"/><text x="0.4503%" y="414.50">__Pyx_PyObject_CallNoAr..</text></g><g><title>__Pyx_PyObject_CallNoArg (loop.c:171496) (372 samples, 14.90%)</title><rect x="0.2003%" y="420" width="14.9038%" height="15" fill="rgb(249,21,11)" fg:x="5" fg:w="372"/><text x="0.4503%" y="430.50">__Pyx_PyObject_CallNoAr..</text></g><g><title>task_step (_asynciomodule.c:2950) (372 samples, 14.90%)</title><rect x="0.2003%" y="436" width="14.9038%" height="15" fill="rgb(222,201,40)" fg:x="5" fg:w="372"/><text x="0.4503%" y="446.50">task_step (_asynciomodu..</text></g><g><title>task_step_impl (_asynciomodule.c:2653) (372 samples, 14.90%)</title><rect x="0.2003%" y="452" width="14.9038%" height="15" fill="rgb(235,61,29)" fg:x="5" fg:w="372"/><text x="0.4503%" y="462.50">task_step_impl (_asynci..</text></g><g><title>wrap (starlette/responses.py:273) (28 samples, 1.12%)</title><rect x="13.9824%" y="468" width="1.1218%" height="15" fill="rgb(219,207,3)" fg:x="349" fg:w="28"/><text x="14.2324%" y="478.50"></text></g><g><title>stream_response (starlette/responses.py:255) (28 samples, 1.12%)</title><rect x="13.9824%" y="484" width="1.1218%" height="15" fill="rgb(222,56,46)" fg:x="349" fg:w="28"/><text x="14.2324%" y="494.50"></text></g><g><title>sender (starlette/middleware/exceptions.py:65) (27 samples, 1.08%)</title><rect x="14.0224%" y="500" width="1.0817%" height="15" fill="rgb(239,76,54)" fg:x="350" fg:w="27"/><text x="14.2724%" y="510.50"></text></g><g><title>_send (starlette/middleware/errors.py:159) (27 samples, 1.08%)</title><rect x="14.0224%" y="516" width="1.0817%" height="15" fill="rgb(231,124,27)" fg:x="350" fg:w="27"/><text x="14.2724%" y="526.50"></text></g><g><title>send (uvicorn/protocols/http/httptools_impl.py:496) (25 samples, 1.00%)</title><rect x="14.1026%" y="532" width="1.0016%" height="15" fill="rgb(249,195,6)" fg:x="352" fg:w="25"/><text x="14.3526%" y="542.50"></text></g><g><title>info (logging/__init__.py:1477) (25 samples, 1.00%)</title><rect x="14.1026%" y="548" width="1.0016%" height="15" fill="rgb(237,174,47)" fg:x="352" fg:w="25"/><text x="14.3526%" y="558.50"></text></g><g><title>_log (logging/__init__.py:1624) (22 samples, 0.88%)</title><rect x="14.2228%" y="564" width="0.8814%" height="15" fill="rgb(206,201,31)" fg:x="355" fg:w="22"/><text x="14.4728%" y="574.50"></text></g><g><title>handle (logging/__init__.py:1634) (22 samples, 0.88%)</title><rect x="14.2228%" y="580" width="0.8814%" height="15" fill="rgb(231,57,52)" fg:x="355" fg:w="22"/><text x="14.4728%" y="590.50"></text></g><g><title>callHandlers (logging/__init__.py:1696) (22 samples, 0.88%)</title><rect x="14.2228%" y="596" width="0.8814%" height="15" fill="rgb(248,177,22)" fg:x="355" fg:w="22"/><text x="14.4728%" y="606.50"></text></g><g><title>handle (logging/__init__.py:968) (19 samples, 0.76%)</title><rect x="14.3429%" y="612" width="0.7612%" height="15" fill="rgb(215,211,37)" fg:x="358" fg:w="19"/><text x="14.5929%" y="622.50"></text></g><g><title>_deliver_cancellation (anyio/_backends/_asyncio.py:347) (21 samples, 0.84%)</title><rect x="15.1442%" y="420" width="0.8413%" height="15" fill="rgb(241,128,51)" fg:x="378" fg:w="21"/><text x="15.3942%" y="430.50"></text></g><g><title>current_task (asyncio/tasks.py:38) (21 samples, 0.84%)</title><rect x="15.1442%" y="436" width="0.8413%" height="15" fill="rgb(227,165,31)" fg:x="378" fg:w="21"/><text x="15.3942%" y="446.50"></text></g><g><title>_asyncio_get_running_loop (_asynciomodule.c.h:728) (21 samples, 0.84%)</title><rect x="15.1442%" y="452" width="0.8413%" height="15" fill="rgb(228,167,24)" fg:x="378" fg:w="21"/><text x="15.3942%" y="462.50"></text></g><g><title>_asyncio_get_running_loop_impl (_asynciomodule.c:3118) (21 samples, 0.84%)</title><rect x="15.1442%" y="468" width="0.8413%" height="15" fill="rgb(228,143,12)" fg:x="378" fg:w="21"/><text x="15.3942%" y="478.50"></text></g><g><title>get_running_loop (_asynciomodule.c:267) (21 samples, 0.84%)</title><rect x="15.1442%" y="484" width="0.8413%" height="15" fill="rgb(249,149,8)" fg:x="378" fg:w="21"/><text x="15.3942%" y="494.50"></text></g><g><title>getpid (libc-2.31.so) (21 samples, 0.84%)</title><rect x="15.1442%" y="500" width="0.8413%" height="15" fill="rgb(243,35,44)" fg:x="378" fg:w="21"/><text x="15.3942%" y="510.50"></text></g><g><title>Handle__run (loop.c:60720) (406 samples, 16.27%)</title><rect x="0.2003%" y="388" width="16.2660%" height="15" fill="rgb(246,89,9)" fg:x="5" fg:w="406"/><text x="0.4503%" y="398.50">Handle__run (loop.c:60720)</text></g><g><title>__Pyx__PyObject_CallOneArg (loop.c:171508) (34 samples, 1.36%)</title><rect x="15.1042%" y="404" width="1.3622%" height="15" fill="rgb(233,213,13)" fg:x="377" fg:w="34"/><text x="15.3542%" y="414.50"></text></g><g><title>_deliver_cancellation (anyio/_backends/_asyncio.py:370) (11 samples, 0.44%)</title><rect x="16.0256%" y="420" width="0.4407%" height="15" fill="rgb(233,141,41)" fg:x="400" fg:w="11"/><text x="16.2756%" y="430.50"></text></g><g><title>_asyncio_get_running_loop (_asynciomodule.c.h:728) (11 samples, 0.44%)</title><rect x="16.0256%" y="436" width="0.4407%" height="15" fill="rgb(239,167,4)" fg:x="400" fg:w="11"/><text x="16.2756%" y="446.50"></text></g><g><title>_asyncio_get_running_loop_impl (_asynciomodule.c:3118) (11 samples, 0.44%)</title><rect x="16.0256%" y="452" width="0.4407%" height="15" fill="rgb(209,217,16)" fg:x="400" fg:w="11"/><text x="16.2756%" y="462.50"></text></g><g><title>get_running_loop (_asynciomodule.c:267) (11 samples, 0.44%)</title><rect x="16.0256%" y="468" width="0.4407%" height="15" fill="rgb(219,88,35)" fg:x="400" fg:w="11"/><text x="16.2756%" y="478.50"></text></g><g><title>getpid (libc-2.31.so) (11 samples, 0.44%)</title><rect x="16.0256%" y="484" width="0.4407%" height="15" fill="rgb(220,193,23)" fg:x="400" fg:w="11"/><text x="16.2756%" y="494.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (5 samples, 0.20%)</title><rect x="17.3077%" y="500" width="0.2003%" height="15" fill="rgb(230,90,52)" fg:x="432" fg:w="5"/><text x="17.5577%" y="510.50"></text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:384) (11 samples, 0.44%)</title><rect x="17.1474%" y="484" width="0.4407%" height="15" fill="rgb(252,106,19)" fg:x="428" fg:w="11"/><text x="17.3974%" y="494.50"></text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:385) (8 samples, 0.32%)</title><rect x="17.5881%" y="484" width="0.3205%" height="15" fill="rgb(206,74,20)" fg:x="439" fg:w="8"/><text x="17.8381%" y="494.50"></text></g><g><title>get_finished_seqs (vllm/sequence.py:398) (8 samples, 0.32%)</title><rect x="17.5881%" y="500" width="0.3205%" height="15" fill="rgb(230,138,44)" fg:x="439" fg:w="8"/><text x="17.8381%" y="510.50"></text></g><g><title>&lt;listcomp&gt; (vllm/sequence.py:398) (5 samples, 0.20%)</title><rect x="17.7083%" y="516" width="0.2003%" height="15" fill="rgb(235,182,43)" fg:x="442" fg:w="5"/><text x="17.9583%" y="526.50"></text></g><g><title>is_finished (vllm/sequence.py:277) (5 samples, 0.20%)</title><rect x="17.7083%" y="532" width="0.2003%" height="15" fill="rgb(242,16,51)" fg:x="442" fg:w="5"/><text x="17.9583%" y="542.50"></text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:390) (3 samples, 0.12%)</title><rect x="17.9487%" y="484" width="0.1202%" height="15" fill="rgb(248,9,4)" fg:x="448" fg:w="3"/><text x="18.1987%" y="494.50"></text></g><g><title>append_token_id (vllm/sequence.py:229) (8 samples, 0.32%)</title><rect x="18.2692%" y="500" width="0.3205%" height="15" fill="rgb(210,31,22)" fg:x="456" fg:w="8"/><text x="18.5192%" y="510.50"></text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:418) (14 samples, 0.56%)</title><rect x="18.1891%" y="484" width="0.5609%" height="15" fill="rgb(239,54,39)" fg:x="454" fg:w="14"/><text x="18.4391%" y="494.50"></text></g><g><title>append_token_id (vllm/sequence.py:231) (3 samples, 0.12%)</title><rect x="18.6298%" y="500" width="0.1202%" height="15" fill="rgb(230,99,41)" fg:x="465" fg:w="3"/><text x="18.8798%" y="510.50"></text></g><g><title>_decode_sequence (vllm/engine/llm_engine.py:740) (8 samples, 0.32%)</title><rect x="19.1106%" y="500" width="0.3205%" height="15" fill="rgb(253,106,12)" fg:x="477" fg:w="8"/><text x="19.3606%" y="510.50"></text></g><g><title>get_token_ids (vllm/sequence.py:243) (7 samples, 0.28%)</title><rect x="19.1506%" y="516" width="0.2804%" height="15" fill="rgb(213,46,41)" fg:x="478" fg:w="7"/><text x="19.4006%" y="526.50"></text></g><g><title>get_token_ids (vllm/sequence.py:123) (6 samples, 0.24%)</title><rect x="19.1907%" y="532" width="0.2404%" height="15" fill="rgb(215,133,35)" fg:x="479" fg:w="6"/><text x="19.4407%" y="542.50"></text></g><g><title>_decode_logprobs (vllm/engine/llm_engine.py:724) (12 samples, 0.48%)</title><rect x="19.6314%" y="516" width="0.4808%" height="15" fill="rgb(213,28,5)" fg:x="490" fg:w="12"/><text x="19.8814%" y="526.50"></text></g><g><title>malloc (libc-2.31.so) (3 samples, 0.12%)</title><rect x="19.9920%" y="532" width="0.1202%" height="15" fill="rgb(215,77,49)" fg:x="499" fg:w="3"/><text x="20.2420%" y="542.50"></text></g><g><title>0x7f9b68eb2b48 (libc-2.31.so) (3 samples, 0.12%)</title><rect x="20.6731%" y="676" width="0.1202%" height="15" fill="rgb(248,100,22)" fg:x="516" fg:w="3"/><text x="20.9231%" y="686.50"></text></g><g><title>_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$::clone::h987c798a31b0c9ef (string.rs:1930) (4 samples, 0.16%)</title><rect x="20.6731%" y="660" width="0.1603%" height="15" fill="rgb(208,67,9)" fg:x="516" fg:w="4"/><text x="20.9231%" y="670.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:176) (13 samples, 0.52%)</title><rect x="20.3526%" y="532" width="0.5208%" height="15" fill="rgb(219,133,21)" fg:x="508" fg:w="13"/><text x="20.6026%" y="542.50"></text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils_fast.py:392) (12 samples, 0.48%)</title><rect x="20.3926%" y="548" width="0.4808%" height="15" fill="rgb(246,46,29)" fg:x="509" fg:w="12"/><text x="20.6426%" y="558.50"></text></g><g><title>tokenizers::tokenizer::_::_$LT$impl$u20$pyo3..impl_..pyclass..PyMethods$LT$tokenizers..tokenizer..PyTokenizer$GT$$u20$for$u20$pyo3..impl_..pyclass..PyClassImplCollector$LT$tokenizers..tokenizer..PyTokenizer$GT$$GT$::py_methods::ITEMS::trampoline::h80694c77757405f1 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (11 samples, 0.44%)</title><rect x="20.4327%" y="564" width="0.4407%" height="15" fill="rgb(246,185,52)" fg:x="510" fg:w="11"/><text x="20.6827%" y="574.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline::ha39f8c3f2d85888c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (11 samples, 0.44%)</title><rect x="20.4327%" y="580" width="0.4407%" height="15" fill="rgb(252,136,11)" fg:x="510" fg:w="11"/><text x="20.6827%" y="590.50"></text></g><g><title>tokenizers::tokenizer::_::_$LT$impl$u20$tokenizers..tokenizer..PyTokenizer$GT$::__pymethod_id_to_token__::hc45ca650e8805b04 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (8 samples, 0.32%)</title><rect x="20.5529%" y="596" width="0.3205%" height="15" fill="rgb(219,138,53)" fg:x="513" fg:w="8"/><text x="20.8029%" y="606.50"></text></g><g><title>tokenizers::tokenizer::added_vocabulary::AddedVocabulary::id_to_token::h08a04c2091acd01f (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (6 samples, 0.24%)</title><rect x="20.6330%" y="612" width="0.2404%" height="15" fill="rgb(211,51,23)" fg:x="515" fg:w="6"/><text x="20.8830%" y="622.50"></text></g><g><title>_$LT$tokenizers..models..PyModel$u20$as$u20$tokenizers..tokenizer..Model$GT$::id_to_token::hb49184543dba0911 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (6 samples, 0.24%)</title><rect x="20.6330%" y="628" width="0.2404%" height="15" fill="rgb(247,221,28)" fg:x="515" fg:w="6"/><text x="20.8830%" y="638.50"></text></g><g><title>_$LT$tokenizers..models..ModelWrapper$u20$as$u20$tokenizers..tokenizer..Model$GT$::id_to_token::h5443007a7351b76c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (6 samples, 0.24%)</title><rect x="20.6330%" y="644" width="0.2404%" height="15" fill="rgb(251,222,45)" fg:x="515" fg:w="6"/><text x="20.8830%" y="654.50"></text></g><g><title>pyo3::conversions::std::string::_$LT$impl$u20$pyo3..conversion..IntoPy$LT$pyo3..instance..Py$LT$pyo3..types..any..PyAny$GT$$GT$$u20$for$u20$alloc..string..String$GT$::into_py::hac4e10a4fea0f576 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.12%)</title><rect x="21.3141%" y="612" width="0.1202%" height="15" fill="rgb(217,162,53)" fg:x="532" fg:w="3"/><text x="21.5641%" y="622.50"></text></g><g><title>unicode_decode_utf8 (python3.10) (3 samples, 0.12%)</title><rect x="21.3141%" y="628" width="0.1202%" height="15" fill="rgb(229,93,14)" fg:x="532" fg:w="3"/><text x="21.5641%" y="638.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:190) (17 samples, 0.68%)</title><rect x="20.9135%" y="532" width="0.6811%" height="15" fill="rgb(209,67,49)" fg:x="522" fg:w="17"/><text x="21.1635%" y="542.50"></text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils_fast.py:392) (11 samples, 0.44%)</title><rect x="21.1538%" y="548" width="0.4407%" height="15" fill="rgb(213,87,29)" fg:x="528" fg:w="11"/><text x="21.4038%" y="558.50"></text></g><g><title>tokenizers::tokenizer::_::_$LT$impl$u20$pyo3..impl_..pyclass..PyMethods$LT$tokenizers..tokenizer..PyTokenizer$GT$$u20$for$u20$pyo3..impl_..pyclass..PyClassImplCollector$LT$tokenizers..tokenizer..PyTokenizer$GT$$GT$::py_methods::ITEMS::trampoline::h80694c77757405f1 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (9 samples, 0.36%)</title><rect x="21.2340%" y="564" width="0.3606%" height="15" fill="rgb(205,151,52)" fg:x="530" fg:w="9"/><text x="21.4840%" y="574.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline::ha39f8c3f2d85888c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (9 samples, 0.36%)</title><rect x="21.2340%" y="580" width="0.3606%" height="15" fill="rgb(253,215,39)" fg:x="530" fg:w="9"/><text x="21.4840%" y="590.50"></text></g><g><title>tokenizers::tokenizer::_::_$LT$impl$u20$tokenizers..tokenizer..PyTokenizer$GT$::__pymethod_id_to_token__::hc45ca650e8805b04 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (7 samples, 0.28%)</title><rect x="21.3141%" y="596" width="0.2804%" height="15" fill="rgb(221,220,41)" fg:x="532" fg:w="7"/><text x="21.5641%" y="606.50"></text></g><g><title>tokenizers::tokenizer::added_vocabulary::AddedVocabulary::id_to_token::h08a04c2091acd01f (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.16%)</title><rect x="21.4343%" y="612" width="0.1603%" height="15" fill="rgb(218,133,21)" fg:x="535" fg:w="4"/><text x="21.6843%" y="622.50"></text></g><g><title>_$LT$tokenizers..models..PyModel$u20$as$u20$tokenizers..tokenizer..Model$GT$::id_to_token::hb49184543dba0911 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.12%)</title><rect x="21.4744%" y="628" width="0.1202%" height="15" fill="rgb(221,193,43)" fg:x="536" fg:w="3"/><text x="21.7244%" y="638.50"></text></g><g><title>_$LT$tokenizers..models..ModelWrapper$u20$as$u20$tokenizers..tokenizer..Model$GT$::id_to_token::h5443007a7351b76c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.12%)</title><rect x="21.4744%" y="644" width="0.1202%" height="15" fill="rgb(240,128,52)" fg:x="536" fg:w="3"/><text x="21.7244%" y="654.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:192) (7 samples, 0.28%)</title><rect x="21.6346%" y="532" width="0.2804%" height="15" fill="rgb(253,114,12)" fg:x="540" fg:w="7"/><text x="21.8846%" y="542.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:198) (9 samples, 0.36%)</title><rect x="21.9151%" y="532" width="0.3606%" height="15" fill="rgb(215,223,47)" fg:x="547" fg:w="9"/><text x="22.1651%" y="542.50"></text></g><g><title>convert_tokens_to_string (transformers/tokenization_utils_fast.py:612) (9 samples, 0.36%)</title><rect x="21.9151%" y="548" width="0.3606%" height="15" fill="rgb(248,225,23)" fg:x="547" fg:w="9"/><text x="22.1651%" y="558.50"></text></g><g><title>tokenizers::decoders::_::_$LT$impl$u20$pyo3..impl_..pyclass..PyMethods$LT$tokenizers..decoders..PyDecoder$GT$$u20$for$u20$pyo3..impl_..pyclass..PyClassImplCollector$LT$tokenizers..decoders..PyDecoder$GT$$GT$::py_methods::ITEMS::trampoline::hce05bfd696bacf03 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.20%)</title><rect x="22.0753%" y="564" width="0.2003%" height="15" fill="rgb(250,108,0)" fg:x="551" fg:w="5"/><text x="22.3253%" y="574.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline::ha39f8c3f2d85888c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.20%)</title><rect x="22.0753%" y="580" width="0.2003%" height="15" fill="rgb(228,208,7)" fg:x="551" fg:w="5"/><text x="22.3253%" y="590.50"></text></g><g><title>tokenizers::decoders::_::_$LT$impl$u20$tokenizers..decoders..PyDecoder$GT$::__pymethod_decode__::h7bea4643c6a4edbf (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.16%)</title><rect x="22.1154%" y="596" width="0.1603%" height="15" fill="rgb(244,45,10)" fg:x="552" fg:w="4"/><text x="22.3654%" y="606.50"></text></g><g><title>_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$::from_iter::h79b2df7363c37a34 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.16%)</title><rect x="22.4760%" y="660" width="0.1603%" height="15" fill="rgb(207,125,25)" fg:x="561" fg:w="4"/><text x="22.7260%" y="670.50"></text></g><g><title>_$LT$core..iter..adapters..flatten..FlatMap$LT$I$C$U$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::hf08c810296587ba8 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.16%)</title><rect x="22.4760%" y="676" width="0.1603%" height="15" fill="rgb(210,195,18)" fg:x="561" fg:w="4"/><text x="22.7260%" y="686.50"></text></g><g><title>_$LT$tokenizers..decoders..PyDecoderWrapper$u20$as$u20$tokenizers..tokenizer..Decoder$GT$::decode_chain::he473fddaf14257c2 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.20%)</title><rect x="22.4760%" y="612" width="0.2003%" height="15" fill="rgb(249,80,12)" fg:x="561" fg:w="5"/><text x="22.7260%" y="622.50"></text></g><g><title>_$LT$tokenizers..decoders..DecoderWrapper$u20$as$u20$tokenizers..tokenizer..Decoder$GT$::decode_chain::he3e5006c358a965b (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.20%)</title><rect x="22.4760%" y="628" width="0.2003%" height="15" fill="rgb(221,65,9)" fg:x="561" fg:w="5"/><text x="22.7260%" y="638.50"></text></g><g><title>_$LT$tokenizers..pre_tokenizers..byte_level..ByteLevel$u20$as$u20$tokenizers..tokenizer..Decoder$GT$::decode_chain::h481e17d051adb82e (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.20%)</title><rect x="22.4760%" y="644" width="0.2003%" height="15" fill="rgb(235,49,36)" fg:x="561" fg:w="5"/><text x="22.7260%" y="654.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:200) (12 samples, 0.48%)</title><rect x="22.3157%" y="532" width="0.4808%" height="15" fill="rgb(225,32,20)" fg:x="557" fg:w="12"/><text x="22.5657%" y="542.50"></text></g><g><title>convert_tokens_to_string (transformers/tokenization_utils_fast.py:612) (11 samples, 0.44%)</title><rect x="22.3558%" y="548" width="0.4407%" height="15" fill="rgb(215,141,46)" fg:x="558" fg:w="11"/><text x="22.6058%" y="558.50"></text></g><g><title>tokenizers::decoders::_::_$LT$impl$u20$pyo3..impl_..pyclass..PyMethods$LT$tokenizers..decoders..PyDecoder$GT$$u20$for$u20$pyo3..impl_..pyclass..PyClassImplCollector$LT$tokenizers..decoders..PyDecoder$GT$$GT$::py_methods::ITEMS::trampoline::hce05bfd696bacf03 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (9 samples, 0.36%)</title><rect x="22.4359%" y="564" width="0.3606%" height="15" fill="rgb(250,160,47)" fg:x="560" fg:w="9"/><text x="22.6859%" y="574.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline::ha39f8c3f2d85888c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (9 samples, 0.36%)</title><rect x="22.4359%" y="580" width="0.3606%" height="15" fill="rgb(216,222,40)" fg:x="560" fg:w="9"/><text x="22.6859%" y="590.50"></text></g><g><title>tokenizers::decoders::_::_$LT$impl$u20$tokenizers..decoders..PyDecoder$GT$::__pymethod_decode__::h7bea4643c6a4edbf (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (8 samples, 0.32%)</title><rect x="22.4760%" y="596" width="0.3205%" height="15" fill="rgb(234,217,39)" fg:x="561" fg:w="8"/><text x="22.7260%" y="606.50"></text></g><g><title>_decode_logprobs (vllm/engine/llm_engine.py:726) (68 samples, 2.72%)</title><rect x="20.1522%" y="516" width="2.7244%" height="15" fill="rgb(207,178,40)" fg:x="503" fg:w="68"/><text x="20.4022%" y="526.50">_d..</text></g><g><title>_decode_logprobs (vllm/engine/llm_engine.py:727) (4 samples, 0.16%)</title><rect x="22.8766%" y="516" width="0.1603%" height="15" fill="rgb(221,136,13)" fg:x="571" fg:w="4"/><text x="23.1266%" y="526.50"></text></g><g><title>_decode_sequence (vllm/engine/llm_engine.py:741) (92 samples, 3.69%)</title><rect x="19.4311%" y="500" width="3.6859%" height="15" fill="rgb(249,199,10)" fg:x="485" fg:w="92"/><text x="19.6811%" y="510.50">_dec..</text></g><g><title>pyo3::conversions::std::string::_$LT$impl$u20$pyo3..conversion..IntoPy$LT$pyo3..instance..Py$LT$pyo3..types..any..PyAny$GT$$GT$$u20$for$u20$alloc..string..String$GT$::into_py::hac4e10a4fea0f576 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.16%)</title><rect x="23.6378%" y="596" width="0.1603%" height="15" fill="rgb(249,222,13)" fg:x="590" fg:w="4"/><text x="23.8878%" y="606.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:176) (18 samples, 0.72%)</title><rect x="23.2772%" y="516" width="0.7212%" height="15" fill="rgb(244,185,38)" fg:x="581" fg:w="18"/><text x="23.5272%" y="526.50"></text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils_fast.py:392) (14 samples, 0.56%)</title><rect x="23.4375%" y="532" width="0.5609%" height="15" fill="rgb(236,202,9)" fg:x="585" fg:w="14"/><text x="23.6875%" y="542.50"></text></g><g><title>tokenizers::tokenizer::_::_$LT$impl$u20$pyo3..impl_..pyclass..PyMethods$LT$tokenizers..tokenizer..PyTokenizer$GT$$u20$for$u20$pyo3..impl_..pyclass..PyClassImplCollector$LT$tokenizers..tokenizer..PyTokenizer$GT$$GT$::py_methods::ITEMS::trampoline::h80694c77757405f1 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (11 samples, 0.44%)</title><rect x="23.5577%" y="548" width="0.4407%" height="15" fill="rgb(250,229,37)" fg:x="588" fg:w="11"/><text x="23.8077%" y="558.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline::ha39f8c3f2d85888c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (11 samples, 0.44%)</title><rect x="23.5577%" y="564" width="0.4407%" height="15" fill="rgb(206,174,23)" fg:x="588" fg:w="11"/><text x="23.8077%" y="574.50"></text></g><g><title>tokenizers::tokenizer::_::_$LT$impl$u20$tokenizers..tokenizer..PyTokenizer$GT$::__pymethod_id_to_token__::hc45ca650e8805b04 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (10 samples, 0.40%)</title><rect x="23.5978%" y="580" width="0.4006%" height="15" fill="rgb(211,33,43)" fg:x="589" fg:w="10"/><text x="23.8478%" y="590.50"></text></g><g><title>tokenizers::tokenizer::added_vocabulary::AddedVocabulary::id_to_token::h08a04c2091acd01f (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.20%)</title><rect x="23.7981%" y="596" width="0.2003%" height="15" fill="rgb(245,58,50)" fg:x="594" fg:w="5"/><text x="24.0481%" y="606.50"></text></g><g><title>_$LT$tokenizers..models..PyModel$u20$as$u20$tokenizers..tokenizer..Model$GT$::id_to_token::hb49184543dba0911 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.12%)</title><rect x="23.8782%" y="612" width="0.1202%" height="15" fill="rgb(244,68,36)" fg:x="596" fg:w="3"/><text x="24.1282%" y="622.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:190) (6 samples, 0.24%)</title><rect x="23.9984%" y="516" width="0.2404%" height="15" fill="rgb(232,229,15)" fg:x="599" fg:w="6"/><text x="24.2484%" y="526.50"></text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils_fast.py:392) (4 samples, 0.16%)</title><rect x="24.0785%" y="532" width="0.1603%" height="15" fill="rgb(254,30,23)" fg:x="601" fg:w="4"/><text x="24.3285%" y="542.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:192) (3 samples, 0.12%)</title><rect x="24.2788%" y="516" width="0.1202%" height="15" fill="rgb(235,160,14)" fg:x="606" fg:w="3"/><text x="24.5288%" y="526.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:198) (11 samples, 0.44%)</title><rect x="24.3990%" y="516" width="0.4407%" height="15" fill="rgb(212,155,44)" fg:x="609" fg:w="11"/><text x="24.6490%" y="526.50"></text></g><g><title>convert_tokens_to_string (transformers/tokenization_utils_fast.py:612) (9 samples, 0.36%)</title><rect x="24.4792%" y="532" width="0.3606%" height="15" fill="rgb(226,2,50)" fg:x="611" fg:w="9"/><text x="24.7292%" y="542.50"></text></g><g><title>tokenizers::decoders::_::_$LT$impl$u20$pyo3..impl_..pyclass..PyMethods$LT$tokenizers..decoders..PyDecoder$GT$$u20$for$u20$pyo3..impl_..pyclass..PyClassImplCollector$LT$tokenizers..decoders..PyDecoder$GT$$GT$::py_methods::ITEMS::trampoline::hce05bfd696bacf03 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (6 samples, 0.24%)</title><rect x="24.5994%" y="548" width="0.2404%" height="15" fill="rgb(234,177,6)" fg:x="614" fg:w="6"/><text x="24.8494%" y="558.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline::ha39f8c3f2d85888c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (6 samples, 0.24%)</title><rect x="24.5994%" y="564" width="0.2404%" height="15" fill="rgb(217,24,9)" fg:x="614" fg:w="6"/><text x="24.8494%" y="574.50"></text></g><g><title>tokenizers::decoders::_::_$LT$impl$u20$tokenizers..decoders..PyDecoder$GT$::__pymethod_decode__::h7bea4643c6a4edbf (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.16%)</title><rect x="24.6795%" y="580" width="0.1603%" height="15" fill="rgb(220,13,46)" fg:x="616" fg:w="4"/><text x="24.9295%" y="590.50"></text></g><g><title>_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$::from_iter::h79b2df7363c37a34 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.16%)</title><rect x="24.9599%" y="644" width="0.1603%" height="15" fill="rgb(239,221,27)" fg:x="623" fg:w="4"/><text x="25.2099%" y="654.50"></text></g><g><title>_$LT$core..iter..adapters..flatten..FlatMap$LT$I$C$U$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::hf08c810296587ba8 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (4 samples, 0.16%)</title><rect x="24.9599%" y="660" width="0.1603%" height="15" fill="rgb(222,198,25)" fg:x="623" fg:w="4"/><text x="25.2099%" y="670.50"></text></g><g><title>core::ops::function::impls::_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$::call_once::hd1e95ec2c708c658 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (3 samples, 0.12%)</title><rect x="25.0000%" y="676" width="0.1202%" height="15" fill="rgb(211,99,13)" fg:x="624" fg:w="3"/><text x="25.2500%" y="686.50"></text></g><g><title>_$LT$tokenizers..decoders..PyDecoderWrapper$u20$as$u20$tokenizers..tokenizer..Decoder$GT$::decode_chain::he473fddaf14257c2 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.20%)</title><rect x="24.9599%" y="596" width="0.2003%" height="15" fill="rgb(232,111,31)" fg:x="623" fg:w="5"/><text x="25.2099%" y="606.50"></text></g><g><title>_$LT$tokenizers..decoders..DecoderWrapper$u20$as$u20$tokenizers..tokenizer..Decoder$GT$::decode_chain::he3e5006c358a965b (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.20%)</title><rect x="24.9599%" y="612" width="0.2003%" height="15" fill="rgb(245,82,37)" fg:x="623" fg:w="5"/><text x="25.2099%" y="622.50"></text></g><g><title>_$LT$tokenizers..pre_tokenizers..byte_level..ByteLevel$u20$as$u20$tokenizers..tokenizer..Decoder$GT$::decode_chain::h481e17d051adb82e (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (5 samples, 0.20%)</title><rect x="24.9599%" y="628" width="0.2003%" height="15" fill="rgb(227,149,46)" fg:x="623" fg:w="5"/><text x="25.2099%" y="638.50"></text></g><g><title>detokenize_incrementally (vllm/transformers_utils/tokenizer.py:200) (11 samples, 0.44%)</title><rect x="24.8397%" y="516" width="0.4407%" height="15" fill="rgb(218,36,50)" fg:x="620" fg:w="11"/><text x="25.0897%" y="526.50"></text></g><g><title>convert_tokens_to_string (transformers/tokenization_utils_fast.py:612) (11 samples, 0.44%)</title><rect x="24.8397%" y="532" width="0.4407%" height="15" fill="rgb(226,80,48)" fg:x="620" fg:w="11"/><text x="25.0897%" y="542.50"></text></g><g><title>tokenizers::decoders::_::_$LT$impl$u20$pyo3..impl_..pyclass..PyMethods$LT$tokenizers..decoders..PyDecoder$GT$$u20$for$u20$pyo3..impl_..pyclass..PyClassImplCollector$LT$tokenizers..decoders..PyDecoder$GT$$GT$::py_methods::ITEMS::trampoline::hce05bfd696bacf03 (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (9 samples, 0.36%)</title><rect x="24.9199%" y="548" width="0.3606%" height="15" fill="rgb(238,224,15)" fg:x="622" fg:w="9"/><text x="25.1699%" y="558.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline::ha39f8c3f2d85888c (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (9 samples, 0.36%)</title><rect x="24.9199%" y="564" width="0.3606%" height="15" fill="rgb(241,136,10)" fg:x="622" fg:w="9"/><text x="25.1699%" y="574.50"></text></g><g><title>tokenizers::decoders::_::_$LT$impl$u20$tokenizers..decoders..PyDecoder$GT$::__pymethod_decode__::h7bea4643c6a4edbf (tokenizers/tokenizers.cpython-310-x86_64-linux-gnu.so) (9 samples, 0.36%)</title><rect x="24.9199%" y="580" width="0.3606%" height="15" fill="rgb(208,32,45)" fg:x="622" fg:w="9"/><text x="25.1699%" y="590.50"></text></g><g><title>_decode_sequence (vllm/engine/llm_engine.py:745) (56 samples, 2.24%)</title><rect x="23.1571%" y="500" width="2.2436%" height="15" fill="rgb(207,135,9)" fg:x="578" fg:w="56"/><text x="23.4071%" y="510.50">_..</text></g><g><title>_decode_sequence (vllm/engine/llm_engine.py:746) (3 samples, 0.12%)</title><rect x="25.4006%" y="500" width="0.1202%" height="15" fill="rgb(206,86,44)" fg:x="634" fg:w="3"/><text x="25.6506%" y="510.50"></text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:423) (172 samples, 6.89%)</title><rect x="18.8702%" y="484" width="6.8910%" height="15" fill="rgb(245,177,15)" fg:x="471" fg:w="172"/><text x="19.1202%" y="494.50">_process_..</text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:424) (11 samples, 0.44%)</title><rect x="25.7612%" y="484" width="0.4407%" height="15" fill="rgb(206,64,50)" fg:x="643" fg:w="11"/><text x="26.0112%" y="494.50"></text></g><g><title>_check_stop (vllm/engine/llm_engine.py:789) (3 samples, 0.12%)</title><rect x="26.0817%" y="500" width="0.1202%" height="15" fill="rgb(234,36,40)" fg:x="651" fg:w="3"/><text x="26.3317%" y="510.50"></text></g><g><title>get_last_token_id (vllm/sequence.py:249) (3 samples, 0.12%)</title><rect x="26.0817%" y="516" width="0.1202%" height="15" fill="rgb(213,64,8)" fg:x="651" fg:w="3"/><text x="26.3317%" y="526.50"></text></g><g><title>_process_sequence_group_outputs (vllm/engine/llm_engine.py:441) (5 samples, 0.20%)</title><rect x="26.2821%" y="484" width="0.2003%" height="15" fill="rgb(210,75,36)" fg:x="656" fg:w="5"/><text x="26.5321%" y="494.50"></text></g><g><title>is_finished (vllm/sequence.py:277) (5 samples, 0.20%)</title><rect x="26.2821%" y="500" width="0.2003%" height="15" fill="rgb(229,88,21)" fg:x="656" fg:w="5"/><text x="26.5321%" y="510.50"></text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:558) (238 samples, 9.54%)</title><rect x="17.0272%" y="468" width="9.5353%" height="15" fill="rgb(252,204,47)" fg:x="425" fg:w="238"/><text x="17.2772%" y="478.50">_process_model..</text></g><g><title>&lt;genexpr&gt; (vllm/sequence.py:425) (5 samples, 0.20%)</title><rect x="27.0433%" y="532" width="0.2003%" height="15" fill="rgb(208,77,27)" fg:x="675" fg:w="5"/><text x="27.2933%" y="542.50"></text></g><g><title>is_finished (vllm/sequence.py:277) (5 samples, 0.20%)</title><rect x="27.0433%" y="548" width="0.2003%" height="15" fill="rgb(221,76,26)" fg:x="675" fg:w="5"/><text x="27.2933%" y="558.50"></text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:561) (20 samples, 0.80%)</title><rect x="26.5625%" y="468" width="0.8013%" height="15" fill="rgb(225,139,18)" fg:x="663" fg:w="20"/><text x="26.8125%" y="478.50"></text></g><g><title>free_finished_seq_groups (vllm/core/scheduler.py:394) (20 samples, 0.80%)</title><rect x="26.5625%" y="484" width="0.8013%" height="15" fill="rgb(230,137,11)" fg:x="663" fg:w="20"/><text x="26.8125%" y="494.50"></text></g><g><title>&lt;genexpr&gt; (vllm/core/scheduler.py:394) (17 samples, 0.68%)</title><rect x="26.6827%" y="500" width="0.6811%" height="15" fill="rgb(212,28,1)" fg:x="666" fg:w="17"/><text x="26.9327%" y="510.50"></text></g><g><title>is_finished (vllm/sequence.py:425) (16 samples, 0.64%)</title><rect x="26.7228%" y="516" width="0.6410%" height="15" fill="rgb(248,164,17)" fg:x="667" fg:w="16"/><text x="26.9728%" y="526.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (3 samples, 0.12%)</title><rect x="27.2436%" y="532" width="0.1202%" height="15" fill="rgb(222,171,42)" fg:x="680" fg:w="3"/><text x="27.4936%" y="542.50"></text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:566) (5 samples, 0.20%)</title><rect x="27.3638%" y="468" width="0.2003%" height="15" fill="rgb(243,84,45)" fg:x="683" fg:w="5"/><text x="27.6138%" y="478.50"></text></g><g><title>maybe_set_first_token_time (vllm/sequence.py:353) (4 samples, 0.16%)</title><rect x="27.4038%" y="484" width="0.1603%" height="15" fill="rgb(252,49,23)" fg:x="684" fg:w="4"/><text x="27.6538%" y="494.50"></text></g><g><title>&lt;listcomp&gt; (vllm/outputs.py:110) (5 samples, 0.20%)</title><rect x="27.8045%" y="500" width="0.2003%" height="15" fill="rgb(215,19,7)" fg:x="694" fg:w="5"/><text x="28.0545%" y="510.50"></text></g><g><title>get_finished_reason (vllm/sequence.py:52) (3 samples, 0.12%)</title><rect x="28.2452%" y="516" width="0.1202%" height="15" fill="rgb(238,81,41)" fg:x="705" fg:w="3"/><text x="28.4952%" y="526.50"></text></g><g><title>from_seq_group (vllm/outputs.py:109) (19 samples, 0.76%)</title><rect x="27.6843%" y="484" width="0.7612%" height="15" fill="rgb(210,199,37)" fg:x="691" fg:w="19"/><text x="27.9343%" y="494.50"></text></g><g><title>&lt;listcomp&gt; (vllm/outputs.py:114) (8 samples, 0.32%)</title><rect x="28.1250%" y="500" width="0.3205%" height="15" fill="rgb(244,192,49)" fg:x="702" fg:w="8"/><text x="28.3750%" y="510.50"></text></g><g><title>from_seq_group (vllm/outputs.py:119) (4 samples, 0.16%)</title><rect x="28.4455%" y="484" width="0.1603%" height="15" fill="rgb(226,211,11)" fg:x="710" fg:w="4"/><text x="28.6955%" y="494.50"></text></g><g><title>prompt (vllm/sequence.py:333) (3 samples, 0.12%)</title><rect x="28.4856%" y="500" width="0.1202%" height="15" fill="rgb(236,162,54)" fg:x="711" fg:w="3"/><text x="28.7356%" y="510.50"></text></g><g><title>&lt;genexpr&gt; (vllm/sequence.py:425) (13 samples, 0.52%)</title><rect x="28.8061%" y="516" width="0.5208%" height="15" fill="rgb(220,229,9)" fg:x="719" fg:w="13"/><text x="29.0561%" y="526.50"></text></g><g><title>is_finished (vllm/sequence.py:277) (11 samples, 0.44%)</title><rect x="28.8862%" y="532" width="0.4407%" height="15" fill="rgb(250,87,22)" fg:x="721" fg:w="11"/><text x="29.1362%" y="542.50"></text></g><g><title>from_seq_group (vllm/outputs.py:122) (21 samples, 0.84%)</title><rect x="28.6859%" y="484" width="0.8413%" height="15" fill="rgb(239,43,17)" fg:x="716" fg:w="21"/><text x="28.9359%" y="494.50"></text></g><g><title>is_finished (vllm/sequence.py:425) (21 samples, 0.84%)</title><rect x="28.6859%" y="500" width="0.8413%" height="15" fill="rgb(231,177,25)" fg:x="716" fg:w="21"/><text x="28.9359%" y="510.50"></text></g><g><title>get_seqs (vllm/sequence.py:388) (5 samples, 0.20%)</title><rect x="29.3269%" y="516" width="0.2003%" height="15" fill="rgb(219,179,1)" fg:x="732" fg:w="5"/><text x="29.5769%" y="526.50"></text></g><g><title>gc_collect_with_callback (python3.10) (3 samples, 0.12%)</title><rect x="29.4071%" y="532" width="0.1202%" height="15" fill="rgb(238,219,53)" fg:x="734" fg:w="3"/><text x="29.6571%" y="542.50"></text></g><g><title>gc_collect_main (python3.10) (3 samples, 0.12%)</title><rect x="29.4071%" y="548" width="0.1202%" height="15" fill="rgb(232,167,36)" fg:x="734" fg:w="3"/><text x="29.6571%" y="558.50"></text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:567) (53 samples, 2.12%)</title><rect x="27.5641%" y="468" width="2.1234%" height="15" fill="rgb(244,19,51)" fg:x="688" fg:w="53"/><text x="27.8141%" y="478.50">_..</text></g><g><title>from_seq_group (vllm/outputs.py:125) (4 samples, 0.16%)</title><rect x="29.5272%" y="484" width="0.1603%" height="15" fill="rgb(224,6,22)" fg:x="737" fg:w="4"/><text x="29.7772%" y="494.50"></text></g><g><title>_get_stats (vllm/engine/llm_engine.py:694) (3 samples, 0.12%)</title><rect x="30.0080%" y="484" width="0.1202%" height="15" fill="rgb(224,145,5)" fg:x="749" fg:w="3"/><text x="30.2580%" y="494.50"></text></g><g><title>_get_stats (vllm/engine/llm_engine.py:696) (7 samples, 0.28%)</title><rect x="30.1282%" y="484" width="0.2804%" height="15" fill="rgb(234,130,49)" fg:x="752" fg:w="7"/><text x="30.3782%" y="494.50"></text></g><g><title>is_finished (vllm/sequence.py:425) (6 samples, 0.24%)</title><rect x="30.1683%" y="500" width="0.2404%" height="15" fill="rgb(254,6,2)" fg:x="753" fg:w="6"/><text x="30.4183%" y="510.50"></text></g><g><title>&lt;genexpr&gt; (vllm/sequence.py:425) (5 samples, 0.20%)</title><rect x="30.2083%" y="516" width="0.2003%" height="15" fill="rgb(208,96,46)" fg:x="754" fg:w="5"/><text x="30.4583%" y="526.50"></text></g><g><title>is_finished (vllm/sequence.py:277) (3 samples, 0.12%)</title><rect x="30.2885%" y="532" width="0.1202%" height="15" fill="rgb(239,3,39)" fg:x="756" fg:w="3"/><text x="30.5385%" y="542.50"></text></g><g><title>_log_prometheus (vllm/engine/metrics.py:150) (7 samples, 0.28%)</title><rect x="30.5288%" y="500" width="0.2804%" height="15" fill="rgb(233,210,1)" fg:x="762" fg:w="7"/><text x="30.7788%" y="510.50"></text></g><g><title>_log_prometheus (vllm/engine/metrics.py:152) (4 samples, 0.16%)</title><rect x="30.8093%" y="500" width="0.1603%" height="15" fill="rgb(244,137,37)" fg:x="769" fg:w="4"/><text x="31.0593%" y="510.50"></text></g><g><title>labels (prometheus_client/metrics.py:196) (4 samples, 0.16%)</title><rect x="31.1699%" y="516" width="0.1603%" height="15" fill="rgb(240,136,2)" fg:x="778" fg:w="4"/><text x="31.4199%" y="526.50"></text></g><g><title>_log_prometheus (vllm/engine/metrics.py:172) (12 samples, 0.48%)</title><rect x="31.0096%" y="500" width="0.4808%" height="15" fill="rgb(239,18,37)" fg:x="774" fg:w="12"/><text x="31.2596%" y="510.50"></text></g><g><title>_log_prometheus (vllm/engine/metrics.py:173) (5 samples, 0.20%)</title><rect x="31.4904%" y="500" width="0.2003%" height="15" fill="rgb(218,185,22)" fg:x="786" fg:w="5"/><text x="31.7404%" y="510.50"></text></g><g><title>log (vllm/engine/metrics.py:198) (32 samples, 1.28%)</title><rect x="30.4487%" y="484" width="1.2821%" height="15" fill="rgb(225,218,4)" fg:x="760" fg:w="32"/><text x="30.6987%" y="494.50"></text></g><g><title>engine_step (vllm/engine/async_llm_engine.py:450) (378 samples, 15.14%)</title><rect x="16.6266%" y="436" width="15.1442%" height="15" fill="rgb(230,182,32)" fg:x="415" fg:w="378"/><text x="16.8766%" y="446.50">engine_step (vllm/engin..</text></g><g><title>step_async (vllm/engine/async_llm_engine.py:218) (370 samples, 14.82%)</title><rect x="16.9471%" y="452" width="14.8237%" height="15" fill="rgb(242,56,43)" fg:x="423" fg:w="370"/><text x="17.1971%" y="462.50">step_async (vllm/engine..</text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:575) (50 samples, 2.00%)</title><rect x="29.7676%" y="468" width="2.0032%" height="15" fill="rgb(233,99,24)" fg:x="743" fg:w="50"/><text x="30.0176%" y="478.50">_..</text></g><g><title>_wakeup_next (asyncio/queues.py:62) (4 samples, 0.16%)</title><rect x="32.3718%" y="500" width="0.1603%" height="15" fill="rgb(234,209,42)" fg:x="808" fg:w="4"/><text x="32.6218%" y="510.50"></text></g><g><title>call_soon (_asynciomodule.c:375) (3 samples, 0.12%)</title><rect x="32.6522%" y="548" width="0.1202%" height="15" fill="rgb(227,7,12)" fg:x="815" fg:w="3"/><text x="32.9022%" y="558.50"></text></g><g><title>_Py_DECREF (object.h:492) (3 samples, 0.12%)</title><rect x="32.6522%" y="564" width="0.1202%" height="15" fill="rgb(245,203,43)" fg:x="815" fg:w="3"/><text x="32.9022%" y="574.50"></text></g><g><title>process_request_output (vllm/engine/async_llm_engine.py:115) (24 samples, 0.96%)</title><rect x="31.8510%" y="452" width="0.9615%" height="15" fill="rgb(238,205,33)" fg:x="795" fg:w="24"/><text x="32.1010%" y="462.50"></text></g><g><title>put (vllm/engine/async_llm_engine.py:59) (21 samples, 0.84%)</title><rect x="31.9712%" y="468" width="0.8413%" height="15" fill="rgb(231,56,7)" fg:x="798" fg:w="21"/><text x="32.2212%" y="478.50"></text></g><g><title>put_nowait (asyncio/queues.py:148) (11 samples, 0.44%)</title><rect x="32.3718%" y="484" width="0.4407%" height="15" fill="rgb(244,186,29)" fg:x="808" fg:w="11"/><text x="32.6218%" y="494.50"></text></g><g><title>_wakeup_next (asyncio/queues.py:64) (5 samples, 0.20%)</title><rect x="32.6122%" y="500" width="0.2003%" height="15" fill="rgb(234,111,31)" fg:x="814" fg:w="5"/><text x="32.8622%" y="510.50"></text></g><g><title>future_set_result (_asynciomodule.c:546) (5 samples, 0.20%)</title><rect x="32.6122%" y="516" width="0.2003%" height="15" fill="rgb(241,149,10)" fg:x="814" fg:w="5"/><text x="32.8622%" y="526.50"></text></g><g><title>future_schedule_callbacks (_asynciomodule.c:427) (5 samples, 0.20%)</title><rect x="32.6122%" y="532" width="0.2003%" height="15" fill="rgb(249,206,44)" fg:x="814" fg:w="5"/><text x="32.8622%" y="542.50"></text></g><g><title>engine_step (vllm/engine/async_llm_engine.py:453) (27 samples, 1.08%)</title><rect x="31.7708%" y="436" width="1.0817%" height="15" fill="rgb(251,153,30)" fg:x="793" fg:w="27"/><text x="32.0208%" y="446.50"></text></g><g><title>get (asyncio/queues.py:156) (15 samples, 0.60%)</title><rect x="33.1731%" y="484" width="0.6010%" height="15" fill="rgb(239,152,38)" fg:x="828" fg:w="15"/><text x="33.4231%" y="494.50"></text></g><g><title>_get_loop (asyncio/mixins.py:23) (14 samples, 0.56%)</title><rect x="33.2131%" y="500" width="0.5609%" height="15" fill="rgb(249,139,47)" fg:x="829" fg:w="14"/><text x="33.4631%" y="510.50"></text></g><g><title>_asyncio__get_running_loop (_asynciomodule.c.h:632) (13 samples, 0.52%)</title><rect x="33.2532%" y="516" width="0.5208%" height="15" fill="rgb(244,64,35)" fg:x="830" fg:w="13"/><text x="33.5032%" y="526.50"></text></g><g><title>_asyncio__get_running_loop_impl (_asynciomodule.c:3037) (13 samples, 0.52%)</title><rect x="33.2532%" y="532" width="0.5208%" height="15" fill="rgb(216,46,15)" fg:x="830" fg:w="13"/><text x="33.5032%" y="542.50"></text></g><g><title>get_running_loop (_asynciomodule.c:267) (12 samples, 0.48%)</title><rect x="33.2933%" y="548" width="0.4808%" height="15" fill="rgb(250,74,19)" fg:x="831" fg:w="12"/><text x="33.5433%" y="558.50"></text></g><g><title>getpid (libc-2.31.so) (12 samples, 0.48%)</title><rect x="33.2933%" y="564" width="0.4808%" height="15" fill="rgb(249,42,33)" fg:x="831" fg:w="12"/><text x="33.5433%" y="574.50"></text></g><g><title>producer (vllm/entrypoints/openai/serving_completion.py:67) (28 samples, 1.12%)</title><rect x="32.8526%" y="436" width="1.1218%" height="15" fill="rgb(242,149,17)" fg:x="820" fg:w="28"/><text x="33.1026%" y="446.50"></text></g><g><title>generate (vllm/engine/async_llm_engine.py:624) (26 samples, 1.04%)</title><rect x="32.9327%" y="452" width="1.0417%" height="15" fill="rgb(244,29,21)" fg:x="822" fg:w="26"/><text x="33.1827%" y="462.50"></text></g><g><title>__anext__ (vllm/engine/async_llm_engine.py:73) (23 samples, 0.92%)</title><rect x="33.0529%" y="468" width="0.9215%" height="15" fill="rgb(220,130,37)" fg:x="825" fg:w="23"/><text x="33.3029%" y="478.50"></text></g><g><title>get (asyncio/queues.py:174) (4 samples, 0.16%)</title><rect x="33.8141%" y="484" width="0.1603%" height="15" fill="rgb(211,67,2)" fg:x="844" fg:w="4"/><text x="34.0641%" y="494.50"></text></g><g><title>call_soon (_asynciomodule.c:375) (4 samples, 0.16%)</title><rect x="34.5353%" y="532" width="0.1603%" height="15" fill="rgb(235,68,52)" fg:x="862" fg:w="4"/><text x="34.7853%" y="542.50"></text></g><g><title>_Py_DECREF (object.h:492) (4 samples, 0.16%)</title><rect x="34.5353%" y="548" width="0.1603%" height="15" fill="rgb(246,142,3)" fg:x="862" fg:w="4"/><text x="34.7853%" y="558.50"></text></g><g><title>call_soon (loop.c:26958) (3 samples, 0.12%)</title><rect x="34.5753%" y="564" width="0.1202%" height="15" fill="rgb(241,25,7)" fg:x="863" fg:w="3"/><text x="34.8253%" y="574.50"></text></g><g><title>call_soon (loop.c:27024) (3 samples, 0.12%)</title><rect x="34.5753%" y="580" width="0.1202%" height="15" fill="rgb(242,119,39)" fg:x="863" fg:w="3"/><text x="34.8253%" y="590.50"></text></g><g><title>producer (vllm/entrypoints/openai/serving_completion.py:68) (19 samples, 0.76%)</title><rect x="33.9744%" y="436" width="0.7612%" height="15" fill="rgb(241,98,45)" fg:x="848" fg:w="19"/><text x="34.2244%" y="446.50"></text></g><g><title>put (asyncio/queues.py:136) (13 samples, 0.52%)</title><rect x="34.2147%" y="452" width="0.5208%" height="15" fill="rgb(254,28,30)" fg:x="854" fg:w="13"/><text x="34.4647%" y="462.50"></text></g><g><title>put_nowait (asyncio/queues.py:148) (9 samples, 0.36%)</title><rect x="34.3750%" y="468" width="0.3606%" height="15" fill="rgb(241,142,54)" fg:x="858" fg:w="9"/><text x="34.6250%" y="478.50"></text></g><g><title>_wakeup_next (asyncio/queues.py:64) (6 samples, 0.24%)</title><rect x="34.4952%" y="484" width="0.2404%" height="15" fill="rgb(222,85,15)" fg:x="861" fg:w="6"/><text x="34.7452%" y="494.50"></text></g><g><title>future_set_result (_asynciomodule.c:546) (6 samples, 0.24%)</title><rect x="34.4952%" y="500" width="0.2404%" height="15" fill="rgb(210,85,47)" fg:x="861" fg:w="6"/><text x="34.7452%" y="510.50"></text></g><g><title>future_schedule_callbacks (_asynciomodule.c:427) (6 samples, 0.24%)</title><rect x="34.4952%" y="516" width="0.2404%" height="15" fill="rgb(224,206,25)" fg:x="861" fg:w="6"/><text x="34.7452%" y="526.50"></text></g><g><title>consumer (vllm/entrypoints/openai/serving_completion.py:80) (5 samples, 0.20%)</title><rect x="35.0561%" y="484" width="0.2003%" height="15" fill="rgb(243,201,19)" fg:x="875" fg:w="5"/><text x="35.3061%" y="494.50"></text></g><g><title>completion_stream_generator (vllm/entrypoints/openai/serving_completion.py:219) (11 samples, 0.44%)</title><rect x="34.9760%" y="468" width="0.4407%" height="15" fill="rgb(236,59,4)" fg:x="873" fg:w="11"/><text x="35.2260%" y="478.50"></text></g><g><title>__enter__ (anyio/_backends/_asyncio.py:246) (12 samples, 0.48%)</title><rect x="35.5769%" y="500" width="0.4808%" height="15" fill="rgb(254,179,45)" fg:x="888" fg:w="12"/><text x="35.8269%" y="510.50"></text></g><g><title>current_task (asyncio/tasks.py:38) (12 samples, 0.48%)</title><rect x="35.5769%" y="516" width="0.4808%" height="15" fill="rgb(226,14,10)" fg:x="888" fg:w="12"/><text x="35.8269%" y="526.50"></text></g><g><title>_asyncio_get_running_loop (_asynciomodule.c.h:728) (12 samples, 0.48%)</title><rect x="35.5769%" y="532" width="0.4808%" height="15" fill="rgb(244,27,41)" fg:x="888" fg:w="12"/><text x="35.8269%" y="542.50"></text></g><g><title>_asyncio_get_running_loop_impl (_asynciomodule.c:3118) (12 samples, 0.48%)</title><rect x="35.5769%" y="548" width="0.4808%" height="15" fill="rgb(235,35,32)" fg:x="888" fg:w="12"/><text x="35.8269%" y="558.50"></text></g><g><title>get_running_loop (_asynciomodule.c:267) (12 samples, 0.48%)</title><rect x="35.5769%" y="564" width="0.4808%" height="15" fill="rgb(218,68,31)" fg:x="888" fg:w="12"/><text x="35.8269%" y="574.50"></text></g><g><title>getpid (libc-2.31.so) (12 samples, 0.48%)</title><rect x="35.5769%" y="580" width="0.4808%" height="15" fill="rgb(207,120,37)" fg:x="888" fg:w="12"/><text x="35.8269%" y="590.50"></text></g><g><title>is_disconnected (starlette/requests.py:299) (45 samples, 1.80%)</title><rect x="35.5369%" y="484" width="1.8029%" height="15" fill="rgb(227,98,0)" fg:x="887" fg:w="45"/><text x="35.7869%" y="494.50">i..</text></g><g><title>__new__ (anyio/_core/_tasks.py:35) (27 samples, 1.08%)</title><rect x="36.2580%" y="500" width="1.0817%" height="15" fill="rgb(207,7,3)" fg:x="905" fg:w="27"/><text x="36.5080%" y="510.50"></text></g><g><title>get_asynclib (anyio/_core/_eventloop.py:147) (25 samples, 1.00%)</title><rect x="36.3381%" y="516" width="1.0016%" height="15" fill="rgb(206,98,19)" fg:x="907" fg:w="25"/><text x="36.5881%" y="526.50"></text></g><g><title>current_async_library (sniffio/_impl.py:82) (19 samples, 0.76%)</title><rect x="36.5785%" y="532" width="0.7612%" height="15" fill="rgb(217,5,26)" fg:x="913" fg:w="19"/><text x="36.8285%" y="542.50"></text></g><g><title>current_task (asyncio/tasks.py:38) (18 samples, 0.72%)</title><rect x="36.6186%" y="548" width="0.7212%" height="15" fill="rgb(235,190,38)" fg:x="914" fg:w="18"/><text x="36.8686%" y="558.50"></text></g><g><title>_asyncio_get_running_loop (_asynciomodule.c.h:728) (18 samples, 0.72%)</title><rect x="36.6186%" y="564" width="0.7212%" height="15" fill="rgb(247,86,24)" fg:x="914" fg:w="18"/><text x="36.8686%" y="574.50"></text></g><g><title>_asyncio_get_running_loop_impl (_asynciomodule.c:3118) (18 samples, 0.72%)</title><rect x="36.6186%" y="580" width="0.7212%" height="15" fill="rgb(205,101,16)" fg:x="914" fg:w="18"/><text x="36.8686%" y="590.50"></text></g><g><title>get_running_loop (_asynciomodule.c:267) (18 samples, 0.72%)</title><rect x="36.6186%" y="596" width="0.7212%" height="15" fill="rgb(246,168,33)" fg:x="914" fg:w="18"/><text x="36.8686%" y="606.50"></text></g><g><title>getpid (libc-2.31.so) (18 samples, 0.72%)</title><rect x="36.6186%" y="612" width="0.7212%" height="15" fill="rgb(231,114,1)" fg:x="914" fg:w="18"/><text x="36.8686%" y="622.50"></text></g><g><title>_deliver_cancellation (anyio/_backends/_asyncio.py:347) (12 samples, 0.48%)</title><rect x="37.3798%" y="516" width="0.4808%" height="15" fill="rgb(207,184,53)" fg:x="933" fg:w="12"/><text x="37.6298%" y="526.50"></text></g><g><title>current_task (asyncio/tasks.py:38) (12 samples, 0.48%)</title><rect x="37.3798%" y="532" width="0.4808%" height="15" fill="rgb(224,95,51)" fg:x="933" fg:w="12"/><text x="37.6298%" y="542.50"></text></g><g><title>_asyncio_get_running_loop (_asynciomodule.c.h:728) (12 samples, 0.48%)</title><rect x="37.3798%" y="548" width="0.4808%" height="15" fill="rgb(212,188,45)" fg:x="933" fg:w="12"/><text x="37.6298%" y="558.50"></text></g><g><title>_asyncio_get_running_loop_impl (_asynciomodule.c:3118) (12 samples, 0.48%)</title><rect x="37.3798%" y="564" width="0.4808%" height="15" fill="rgb(223,154,38)" fg:x="933" fg:w="12"/><text x="37.6298%" y="574.50"></text></g><g><title>get_running_loop (_asynciomodule.c:267) (12 samples, 0.48%)</title><rect x="37.3798%" y="580" width="0.4808%" height="15" fill="rgb(251,22,52)" fg:x="933" fg:w="12"/><text x="37.6298%" y="590.50"></text></g><g><title>getpid (libc-2.31.so) (12 samples, 0.48%)</title><rect x="37.3798%" y="596" width="0.4808%" height="15" fill="rgb(229,209,22)" fg:x="933" fg:w="12"/><text x="37.6298%" y="606.50"></text></g><g><title>is_disconnected (starlette/requests.py:300) (21 samples, 0.84%)</title><rect x="37.3397%" y="484" width="0.8413%" height="15" fill="rgb(234,138,34)" fg:x="932" fg:w="21"/><text x="37.5897%" y="494.50"></text></g><g><title>cancel (anyio/_backends/_asyncio.py:412) (20 samples, 0.80%)</title><rect x="37.3798%" y="500" width="0.8013%" height="15" fill="rgb(212,95,11)" fg:x="933" fg:w="20"/><text x="37.6298%" y="510.50"></text></g><g><title>_deliver_cancellation (anyio/_backends/_asyncio.py:370) (8 samples, 0.32%)</title><rect x="37.8606%" y="516" width="0.3205%" height="15" fill="rgb(240,179,47)" fg:x="945" fg:w="8"/><text x="38.1106%" y="526.50"></text></g><g><title>_asyncio_get_running_loop (_asynciomodule.c.h:728) (8 samples, 0.32%)</title><rect x="37.8606%" y="532" width="0.3205%" height="15" fill="rgb(240,163,11)" fg:x="945" fg:w="8"/><text x="38.1106%" y="542.50"></text></g><g><title>_asyncio_get_running_loop_impl (_asynciomodule.c:3118) (8 samples, 0.32%)</title><rect x="37.8606%" y="548" width="0.3205%" height="15" fill="rgb(236,37,12)" fg:x="945" fg:w="8"/><text x="38.1106%" y="558.50"></text></g><g><title>get_running_loop (_asynciomodule.c:267) (8 samples, 0.32%)</title><rect x="37.8606%" y="564" width="0.3205%" height="15" fill="rgb(232,164,16)" fg:x="945" fg:w="8"/><text x="38.1106%" y="574.50"></text></g><g><title>getpid (libc-2.31.so) (8 samples, 0.32%)</title><rect x="37.8606%" y="580" width="0.3205%" height="15" fill="rgb(244,205,15)" fg:x="945" fg:w="8"/><text x="38.1106%" y="590.50"></text></g><g><title>stream_response (starlette/responses.py:262) (100 samples, 4.01%)</title><rect x="34.8958%" y="452" width="4.0064%" height="15" fill="rgb(223,117,47)" fg:x="871" fg:w="100"/><text x="35.1458%" y="462.50">stre..</text></g><g><title>completion_stream_generator (vllm/entrypoints/openai/serving_completion.py:222) (87 samples, 3.49%)</title><rect x="35.4167%" y="468" width="3.4856%" height="15" fill="rgb(244,107,35)" fg:x="884" fg:w="87"/><text x="35.6667%" y="478.50">com..</text></g><g><title>is_disconnected (starlette/requests.py:301) (18 samples, 0.72%)</title><rect x="38.1811%" y="484" width="0.7212%" height="15" fill="rgb(205,140,8)" fg:x="953" fg:w="18"/><text x="38.4311%" y="494.50"></text></g><g><title>receive (uvicorn/protocols/http/httptools_impl.py:587) (14 samples, 0.56%)</title><rect x="38.3413%" y="500" width="0.5609%" height="15" fill="rgb(228,84,46)" fg:x="957" fg:w="14"/><text x="38.5913%" y="510.50"></text></g><g><title>wait (asyncio/locks.py:211) (11 samples, 0.44%)</title><rect x="38.4615%" y="516" width="0.4407%" height="15" fill="rgb(254,188,9)" fg:x="960" fg:w="11"/><text x="38.7115%" y="526.50"></text></g><g><title>_get_loop (asyncio/mixins.py:23) (11 samples, 0.44%)</title><rect x="38.4615%" y="532" width="0.4407%" height="15" fill="rgb(206,112,54)" fg:x="960" fg:w="11"/><text x="38.7115%" y="542.50"></text></g><g><title>_asyncio__get_running_loop (_asynciomodule.c.h:632) (11 samples, 0.44%)</title><rect x="38.4615%" y="548" width="0.4407%" height="15" fill="rgb(216,84,49)" fg:x="960" fg:w="11"/><text x="38.7115%" y="558.50"></text></g><g><title>_asyncio__get_running_loop_impl (_asynciomodule.c:3037) (11 samples, 0.44%)</title><rect x="38.4615%" y="564" width="0.4407%" height="15" fill="rgb(214,194,35)" fg:x="960" fg:w="11"/><text x="38.7115%" y="574.50"></text></g><g><title>get_running_loop (_asynciomodule.c:267) (11 samples, 0.44%)</title><rect x="38.4615%" y="580" width="0.4407%" height="15" fill="rgb(249,28,3)" fg:x="960" fg:w="11"/><text x="38.7115%" y="590.50"></text></g><g><title>getpid (libc-2.31.so) (11 samples, 0.44%)</title><rect x="38.4615%" y="596" width="0.4407%" height="15" fill="rgb(222,56,52)" fg:x="960" fg:w="11"/><text x="38.7115%" y="606.50"></text></g><g><title>Handle__run (loop.c:60747) (561 samples, 22.48%)</title><rect x="16.4663%" y="388" width="22.4760%" height="15" fill="rgb(245,217,50)" fg:x="411" fg:w="561"/><text x="16.7163%" y="398.50">Handle__run (loop.c:60747)</text></g><g><title>task_step (_asynciomodule.c:2950) (558 samples, 22.36%)</title><rect x="16.5865%" y="404" width="22.3558%" height="15" fill="rgb(213,201,24)" fg:x="414" fg:w="558"/><text x="16.8365%" y="414.50">task_step (_asynciomodule.c:2950)</text></g><g><title>task_step_impl (_asynciomodule.c:2653) (558 samples, 22.36%)</title><rect x="16.5865%" y="420" width="22.3558%" height="15" fill="rgb(248,116,28)" fg:x="414" fg:w="558"/><text x="16.8365%" y="430.50">task_step_impl (_asynciomodule.c:26..</text></g><g><title>wrap (starlette/responses.py:273) (101 samples, 4.05%)</title><rect x="34.8958%" y="436" width="4.0465%" height="15" fill="rgb(219,72,43)" fg:x="871" fg:w="101"/><text x="35.1458%" y="446.50">wrap..</text></g><g><title>Handle__run (loop.c:60773) (4 samples, 0.16%)</title><rect x="38.9423%" y="388" width="0.1603%" height="15" fill="rgb(209,138,14)" fg:x="972" fg:w="4"/><text x="39.1923%" y="398.50"></text></g><g><title>TCPTransport__call_connection_made (loop.c:103338) (3 samples, 0.12%)</title><rect x="38.9824%" y="404" width="0.1202%" height="15" fill="rgb(222,18,33)" fg:x="973" fg:w="3"/><text x="39.2324%" y="414.50"></text></g><g><title>UVBaseTransport__call_connection_made (loop.c:86566) (3 samples, 0.12%)</title><rect x="38.9824%" y="420" width="0.1202%" height="15" fill="rgb(213,199,7)" fg:x="973" fg:w="3"/><text x="39.2324%" y="430.50"></text></g><g><title>__Pyx_PyObject_Call2Args (loop.c:171673) (3 samples, 0.12%)</title><rect x="38.9824%" y="436" width="0.1202%" height="15" fill="rgb(250,110,10)" fg:x="973" fg:w="3"/><text x="39.2324%" y="446.50"></text></g><g><title>connection_made (uvicorn/protocols/http/httptools_impl.py:121) (3 samples, 0.12%)</title><rect x="38.9824%" y="452" width="0.1202%" height="15" fill="rgb(248,123,6)" fg:x="973" fg:w="3"/><text x="39.2324%" y="462.50"></text></g><g><title>get_local_addr (uvicorn/protocols/utils.py:28) (3 samples, 0.12%)</title><rect x="38.9824%" y="468" width="0.1202%" height="15" fill="rgb(206,91,31)" fg:x="973" fg:w="3"/><text x="39.2324%" y="478.50"></text></g><g><title>getsockname (loop.c:68731) (3 samples, 0.12%)</title><rect x="38.9824%" y="484" width="0.1202%" height="15" fill="rgb(211,154,13)" fg:x="973" fg:w="3"/><text x="39.2324%" y="494.50"></text></g><g><title>Loop__on_idle (loop.c:14597) (974 samples, 39.02%)</title><rect x="0.1202%" y="372" width="39.0224%" height="15" fill="rgb(225,148,7)" fg:x="3" fg:w="974"/><text x="0.3702%" y="382.50">Loop__on_idle (loop.c:14597)</text></g><g><title>UVStream__exec_write (loop.c:93679) (50 samples, 2.00%)</title><rect x="39.1426%" y="404" width="2.0032%" height="15" fill="rgb(220,160,43)" fg:x="977" fg:w="50"/><text x="39.3926%" y="414.50">U..</text></g><g><title>UVStream__try_write (loop.c:92780) (48 samples, 1.92%)</title><rect x="39.2228%" y="420" width="1.9231%" height="15" fill="rgb(213,52,39)" fg:x="979" fg:w="48"/><text x="39.4728%" y="430.50">U..</text></g><g><title>write (libpthread-2.31.so) (48 samples, 1.92%)</title><rect x="39.2228%" y="436" width="1.9231%" height="15" fill="rgb(243,137,7)" fg:x="979" fg:w="48"/><text x="39.4728%" y="446.50">w..</text></g><g><title>Loop__on_idle (loop.c:14778) (51 samples, 2.04%)</title><rect x="39.1426%" y="372" width="2.0433%" height="15" fill="rgb(230,79,13)" fg:x="977" fg:w="51"/><text x="39.3926%" y="382.50">L..</text></g><g><title>Loop__exec_queued_writes (loop.c:17021) (51 samples, 2.04%)</title><rect x="39.1426%" y="388" width="2.0433%" height="15" fill="rgb(247,105,23)" fg:x="977" fg:w="51"/><text x="39.3926%" y="398.50">L..</text></g><g><title>loop_cb_idle_callback (loop.c:79836) (1,033 samples, 41.39%)</title><rect x="0.0000%" y="340" width="41.3862%" height="15" fill="rgb(223,179,41)" fg:x="0" fg:w="1033"/><text x="0.2500%" y="350.50">loop_cb_idle_callback (loop.c:79836)</text></g><g><title>Handle__run (loop.c:60773) (1,033 samples, 41.39%)</title><rect x="0.0000%" y="356" width="41.3862%" height="15" fill="rgb(218,9,34)" fg:x="0" fg:w="1033"/><text x="0.2500%" y="366.50">Handle__run (loop.c:60773)</text></g><g><title>Loop__on_idle (loop.c:14891) (5 samples, 0.20%)</title><rect x="41.1859%" y="372" width="0.2003%" height="15" fill="rgb(222,106,8)" fg:x="1028" fg:w="5"/><text x="41.4359%" y="382.50"></text></g><g><title>_Py_XDECREF (object.h:567) (5 samples, 0.20%)</title><rect x="41.1859%" y="388" width="0.2003%" height="15" fill="rgb(211,220,0)" fg:x="1028" fg:w="5"/><text x="41.4359%" y="398.50"></text></g><g><title>_Py_DECREF (object.h:500) (5 samples, 0.20%)</title><rect x="41.1859%" y="404" width="0.2003%" height="15" fill="rgb(229,52,16)" fg:x="1028" fg:w="5"/><text x="41.4359%" y="414.50"></text></g><g><title>__pyx_tp_dealloc_6uvloop_4loop_Handle (loop.c:153431) (3 samples, 0.12%)</title><rect x="41.2660%" y="420" width="0.1202%" height="15" fill="rgb(212,155,18)" fg:x="1030" fg:w="3"/><text x="41.5160%" y="430.50"></text></g><g><title>_Py_DECREF (object.h:500) (3 samples, 0.12%)</title><rect x="41.2660%" y="436" width="0.1202%" height="15" fill="rgb(242,21,14)" fg:x="1030" fg:w="3"/><text x="41.5160%" y="446.50"></text></g><g><title>FutureObj_dealloc (_asynciomodule.c:1580) (3 samples, 0.12%)</title><rect x="41.2660%" y="452" width="0.1202%" height="15" fill="rgb(222,19,48)" fg:x="1030" fg:w="3"/><text x="41.5160%" y="462.50"></text></g><g><title>FutureObj_clear (_asynciomodule.c:791) (3 samples, 0.12%)</title><rect x="41.2660%" y="468" width="0.1202%" height="15" fill="rgb(232,45,27)" fg:x="1030" fg:w="3"/><text x="41.5160%" y="478.50"></text></g><g><title>uv_run (core.c:439) (1,036 samples, 41.51%)</title><rect x="0.0000%" y="292" width="41.5064%" height="15" fill="rgb(249,103,42)" fg:x="0" fg:w="1036"/><text x="0.2500%" y="302.50">uv_run (core.c:439)</text></g><g><title>uv__run_idle (loop-watcher.c:68) (1,036 samples, 41.51%)</title><rect x="0.0000%" y="308" width="41.5064%" height="15" fill="rgb(246,81,33)" fg:x="0" fg:w="1036"/><text x="0.2500%" y="318.50">uv__run_idle (loop-watcher.c:68)</text></g><g><title>uv__queue_empty (queue.h:33) (1,036 samples, 41.51%)</title><rect x="0.0000%" y="324" width="41.5064%" height="15" fill="rgb(252,33,42)" fg:x="0" fg:w="1036"/><text x="0.2500%" y="334.50">uv__queue_empty (queue.h:33)</text></g><g><title>loop_cb_idle_callback (loop.c:79981) (3 samples, 0.12%)</title><rect x="41.3862%" y="340" width="0.1202%" height="15" fill="rgb(209,212,41)" fg:x="1033" fg:w="3"/><text x="41.6362%" y="350.50"></text></g><g><title>uv__io_poll (linux.c:1365) (153 samples, 6.13%)</title><rect x="41.5465%" y="308" width="6.1298%" height="15" fill="rgb(207,154,6)" fg:x="1037" fg:w="153"/><text x="41.7965%" y="318.50">uv__io_p..</text></g><g><title>epoll_pwait (libc-2.31.so) (153 samples, 6.13%)</title><rect x="41.5465%" y="324" width="6.1298%" height="15" fill="rgb(223,64,47)" fg:x="1037" fg:w="153"/><text x="41.7965%" y="334.50">epoll_pw..</text></g><g><title>loop___uv_streamserver_on_listen (loop.c:101445) (3 samples, 0.12%)</title><rect x="47.7163%" y="340" width="0.1202%" height="15" fill="rgb(211,161,38)" fg:x="1191" fg:w="3"/><text x="47.9663%" y="350.50"></text></g><g><title>loop___ensure_handle_data (loop.c:77454) (3 samples, 0.12%)</title><rect x="47.7163%" y="356" width="0.1202%" height="15" fill="rgb(219,138,40)" fg:x="1191" fg:w="3"/><text x="47.9663%" y="366.50"></text></g><g><title>pthread_cond_timedwait@@GLIBC_2.3.2 (libpthread-2.31.so) (3 samples, 0.12%)</title><rect x="47.7163%" y="372" width="0.1202%" height="15" fill="rgb(241,228,46)" fg:x="1191" fg:w="3"/><text x="47.9663%" y="382.50"></text></g><g><title>loop___uv_streamserver_on_listen (loop.c:101593) (4 samples, 0.16%)</title><rect x="47.8365%" y="340" width="0.1603%" height="15" fill="rgb(223,209,38)" fg:x="1194" fg:w="4"/><text x="48.0865%" y="350.50"></text></g><g><title>uv__server_io (stream.c:530) (8 samples, 0.32%)</title><rect x="47.7163%" y="324" width="0.3205%" height="15" fill="rgb(236,164,45)" fg:x="1191" fg:w="8"/><text x="47.9663%" y="334.50"></text></g><g><title>uv_run (core.c:451) (170 samples, 6.81%)</title><rect x="41.5465%" y="292" width="6.8109%" height="15" fill="rgb(231,15,5)" fg:x="1037" fg:w="170"/><text x="41.7965%" y="302.50">uv_run (c..</text></g><g><title>uv__io_poll (linux.c:1479) (17 samples, 0.68%)</title><rect x="47.6763%" y="308" width="0.6811%" height="15" fill="rgb(252,35,15)" fg:x="1190" fg:w="17"/><text x="47.9263%" y="318.50"></text></g><g><title>uv__stream_io (stream.c:1205) (8 samples, 0.32%)</title><rect x="48.0369%" y="324" width="0.3205%" height="15" fill="rgb(248,181,18)" fg:x="1199" fg:w="8"/><text x="48.2869%" y="334.50"></text></g><g><title>uv__read (stream.c:1146) (6 samples, 0.24%)</title><rect x="48.1170%" y="340" width="0.2404%" height="15" fill="rgb(233,39,42)" fg:x="1201" fg:w="6"/><text x="48.3670%" y="350.50"></text></g><g><title>loop___uv_stream_on_read (loop.c:98506) (5 samples, 0.20%)</title><rect x="48.1571%" y="356" width="0.2003%" height="15" fill="rgb(238,110,33)" fg:x="1202" fg:w="5"/><text x="48.4071%" y="366.50"></text></g><g><title>loop___uv_stream_on_read_impl (loop.c:97876) (5 samples, 0.20%)</title><rect x="48.1571%" y="372" width="0.2003%" height="15" fill="rgb(233,195,10)" fg:x="1202" fg:w="5"/><text x="48.4071%" y="382.50"></text></g><g><title>loop_run_in_context1 (loop.c:10098) (5 samples, 0.20%)</title><rect x="48.1571%" y="388" width="0.2003%" height="15" fill="rgb(254,105,3)" fg:x="1202" fg:w="5"/><text x="48.4071%" y="398.50"></text></g><g><title>data_received (uvicorn/protocols/http/httptools_impl.py:186) (5 samples, 0.20%)</title><rect x="48.1571%" y="404" width="0.2003%" height="15" fill="rgb(221,225,9)" fg:x="1202" fg:w="5"/><text x="48.4071%" y="414.50"></text></g><g><title>feed_data (parser.c:3357) (5 samples, 0.20%)</title><rect x="48.1571%" y="420" width="0.2003%" height="15" fill="rgb(224,227,45)" fg:x="1202" fg:w="5"/><text x="48.4071%" y="430.50"></text></g><g><title>feed_data (parser.c:3513) (5 samples, 0.20%)</title><rect x="48.1571%" y="436" width="0.2003%" height="15" fill="rgb(229,198,43)" fg:x="1202" fg:w="5"/><text x="48.4071%" y="446.50"></text></g><g><title>llhttp__internal_execute (llhttp.c:18661) (5 samples, 0.20%)</title><rect x="48.1571%" y="452" width="0.2003%" height="15" fill="rgb(206,209,35)" fg:x="1202" fg:w="5"/><text x="48.4071%" y="462.50"></text></g><g><title>llhttp__internal__run (llhttp.c:16463) (4 samples, 0.16%)</title><rect x="48.1971%" y="468" width="0.1603%" height="15" fill="rgb(245,195,53)" fg:x="1203" fg:w="4"/><text x="48.4471%" y="478.50"></text></g><g><title>parser_cb_on_headers_complete (parser.c:5723) (4 samples, 0.16%)</title><rect x="48.1971%" y="484" width="0.1603%" height="15" fill="rgb(240,92,26)" fg:x="1203" fg:w="4"/><text x="48.4471%" y="494.50"></text></g><g><title>HttpParser__on_headers_complete (parser.c:2755) (4 samples, 0.16%)</title><rect x="48.1971%" y="500" width="0.1603%" height="15" fill="rgb(207,40,23)" fg:x="1203" fg:w="4"/><text x="48.4471%" y="510.50"></text></g><g><title>_Py_XDECREF (object.h:567) (4 samples, 0.16%)</title><rect x="48.1971%" y="516" width="0.1603%" height="15" fill="rgb(223,111,35)" fg:x="1203" fg:w="4"/><text x="48.4471%" y="526.50"></text></g><g><title>_Py_DECREF (object.h:492) (4 samples, 0.16%)</title><rect x="48.1971%" y="532" width="0.1603%" height="15" fill="rgb(229,147,28)" fg:x="1203" fg:w="4"/><text x="48.4471%" y="542.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (parser.c:8374) (4 samples, 0.16%)</title><rect x="48.1971%" y="548" width="0.1603%" height="15" fill="rgb(211,29,28)" fg:x="1203" fg:w="4"/><text x="48.4471%" y="558.50"></text></g><g><title>run (asyncio/runners.py:44) (1,210 samples, 48.48%)</title><rect x="0.0000%" y="148" width="48.4776%" height="15" fill="rgb(228,72,33)" fg:x="0" fg:w="1210"/><text x="0.2500%" y="158.50">run (asyncio/runners.py:44)</text></g><g><title>run_until_complete (loop.c:29633) (1,210 samples, 48.48%)</title><rect x="0.0000%" y="164" width="48.4776%" height="15" fill="rgb(205,214,31)" fg:x="0" fg:w="1210"/><text x="0.2500%" y="174.50">run_until_complete (loop.c:29633)</text></g><g><title>run_until_complete (loop.c:30035) (1,210 samples, 48.48%)</title><rect x="0.0000%" y="180" width="48.4776%" height="15" fill="rgb(224,111,15)" fg:x="0" fg:w="1210"/><text x="0.2500%" y="190.50">run_until_complete (loop.c:30035)</text></g><g><title>__Pyx_PyObject_CallNoArg (loop.c:171493) (1,210 samples, 48.48%)</title><rect x="0.0000%" y="196" width="48.4776%" height="15" fill="rgb(253,21,26)" fg:x="0" fg:w="1210"/><text x="0.2500%" y="206.50">__Pyx_PyObject_CallNoArg (loop.c:171493)</text></g><g><title>__Pyx_PyObject_CallMethO (loop.c:171467) (1,210 samples, 48.48%)</title><rect x="0.0000%" y="212" width="48.4776%" height="15" fill="rgb(245,139,43)" fg:x="0" fg:w="1210"/><text x="0.2500%" y="222.50">__Pyx_PyObject_CallMethO (loop.c:171467)</text></g><g><title>run_forever (loop.c:27987) (1,210 samples, 48.48%)</title><rect x="0.0000%" y="228" width="48.4776%" height="15" fill="rgb(252,170,7)" fg:x="0" fg:w="1210"/><text x="0.2500%" y="238.50">run_forever (loop.c:27987)</text></g><g><title>run_forever (loop.c:28166) (1,210 samples, 48.48%)</title><rect x="0.0000%" y="244" width="48.4776%" height="15" fill="rgb(231,118,14)" fg:x="0" fg:w="1210"/><text x="0.2500%" y="254.50">run_forever (loop.c:28166)</text></g><g><title>Loop__run (loop.c:15471) (1,210 samples, 48.48%)</title><rect x="0.0000%" y="260" width="48.4776%" height="15" fill="rgb(238,83,0)" fg:x="0" fg:w="1210"/><text x="0.2500%" y="270.50">Loop__run (loop.c:15471)</text></g><g><title>Loop___run (loop.c:15106) (1,210 samples, 48.48%)</title><rect x="0.0000%" y="276" width="48.4776%" height="15" fill="rgb(221,39,39)" fg:x="0" fg:w="1210"/><text x="0.2500%" y="286.50">Loop___run (loop.c:15106)</text></g><g><title>uv_run (core.c:467) (3 samples, 0.12%)</title><rect x="48.3574%" y="292" width="0.1202%" height="15" fill="rgb(222,119,46)" fg:x="1207" fg:w="3"/><text x="48.6074%" y="302.50"></text></g><g><title>uv__loop_alive (core.c:383) (3 samples, 0.12%)</title><rect x="48.3574%" y="308" width="0.1202%" height="15" fill="rgb(222,165,49)" fg:x="1207" fg:w="3"/><text x="48.6074%" y="318.50"></text></g><g><title>schedule (vllm/core/scheduler.py:356) (3 samples, 0.12%)</title><rect x="48.4776%" y="500" width="0.1202%" height="15" fill="rgb(219,113,52)" fg:x="1210" fg:w="3"/><text x="48.7276%" y="510.50"></text></g><g><title>step_async (vllm/engine/async_llm_engine.py:207) (4 samples, 0.16%)</title><rect x="48.4776%" y="484" width="0.1603%" height="15" fill="rgb(214,7,15)" fg:x="1210" fg:w="4"/><text x="48.7276%" y="494.50"></text></g><g><title>Handle__run (loop.c:60720) (5 samples, 0.20%)</title><rect x="48.4776%" y="372" width="0.2003%" height="15" fill="rgb(235,32,4)" fg:x="1210" fg:w="5"/><text x="48.7276%" y="382.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (loop.c:171480) (5 samples, 0.20%)</title><rect x="48.4776%" y="388" width="0.2003%" height="15" fill="rgb(238,90,54)" fg:x="1210" fg:w="5"/><text x="48.7276%" y="398.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (loop.c:171496) (5 samples, 0.20%)</title><rect x="48.4776%" y="404" width="0.2003%" height="15" fill="rgb(213,208,19)" fg:x="1210" fg:w="5"/><text x="48.7276%" y="414.50"></text></g><g><title>task_step (_asynciomodule.c:2950) (5 samples, 0.20%)</title><rect x="48.4776%" y="420" width="0.2003%" height="15" fill="rgb(233,156,4)" fg:x="1210" fg:w="5"/><text x="48.7276%" y="430.50"></text></g><g><title>task_step_impl (_asynciomodule.c:2653) (5 samples, 0.20%)</title><rect x="48.4776%" y="436" width="0.2003%" height="15" fill="rgb(207,194,5)" fg:x="1210" fg:w="5"/><text x="48.7276%" y="446.50"></text></g><g><title>run (asyncio/runners.py:44) (5 samples, 0.20%)</title><rect x="48.4776%" y="452" width="0.2003%" height="15" fill="rgb(206,111,30)" fg:x="1210" fg:w="5"/><text x="48.7276%" y="462.50"></text></g><g><title>engine_step (vllm/engine/async_llm_engine.py:450) (5 samples, 0.20%)</title><rect x="48.4776%" y="468" width="0.2003%" height="15" fill="rgb(243,70,54)" fg:x="1210" fg:w="5"/><text x="48.7276%" y="478.50"></text></g><g><title>_process_model_outputs (vllm/engine/llm_engine.py:558) (5 samples, 0.20%)</title><rect x="48.6779%" y="468" width="0.2003%" height="15" fill="rgb(242,28,8)" fg:x="1215" fg:w="5"/><text x="48.9279%" y="478.50"></text></g><g><title>engine_step (vllm/engine/async_llm_engine.py:450) (7 samples, 0.28%)</title><rect x="48.6779%" y="436" width="0.2804%" height="15" fill="rgb(219,106,18)" fg:x="1215" fg:w="7"/><text x="48.9279%" y="446.50"></text></g><g><title>step_async (vllm/engine/async_llm_engine.py:218) (7 samples, 0.28%)</title><rect x="48.6779%" y="452" width="0.2804%" height="15" fill="rgb(244,222,10)" fg:x="1215" fg:w="7"/><text x="48.9279%" y="462.50"></text></g><g><title>_run_module_as_main (runpy.py:196) (1,225 samples, 49.08%)</title><rect x="0.0000%" y="68" width="49.0785%" height="15" fill="rgb(236,179,52)" fg:x="0" fg:w="1225"/><text x="0.2500%" y="78.50">_run_module_as_main (runpy.py:196)</text></g><g><title>_run_code (runpy.py:86) (1,225 samples, 49.08%)</title><rect x="0.0000%" y="84" width="49.0785%" height="15" fill="rgb(213,23,39)" fg:x="0" fg:w="1225"/><text x="0.2500%" y="94.50">_run_code (runpy.py:86)</text></g><g><title>&lt;module&gt; (vllm/entrypoints/openai/api_server.py:166) (1,225 samples, 49.08%)</title><rect x="0.0000%" y="100" width="49.0785%" height="15" fill="rgb(238,48,10)" fg:x="0" fg:w="1225"/><text x="0.2500%" y="110.50">&lt;module&gt; (vllm/entrypoints/openai/api_server.py:166)</text></g><g><title>run (uvicorn/main.py:587) (1,225 samples, 49.08%)</title><rect x="0.0000%" y="116" width="49.0785%" height="15" fill="rgb(251,196,23)" fg:x="0" fg:w="1225"/><text x="0.2500%" y="126.50">run (uvicorn/main.py:587)</text></g><g><title>run (uvicorn/server.py:61) (1,225 samples, 49.08%)</title><rect x="0.0000%" y="132" width="49.0785%" height="15" fill="rgb(250,152,24)" fg:x="0" fg:w="1225"/><text x="0.2500%" y="142.50">run (uvicorn/server.py:61)</text></g><g><title>run_until_complete (loop.c:29633) (15 samples, 0.60%)</title><rect x="48.4776%" y="148" width="0.6010%" height="15" fill="rgb(209,150,17)" fg:x="1210" fg:w="15"/><text x="48.7276%" y="158.50"></text></g><g><title>run_until_complete (loop.c:30035) (15 samples, 0.60%)</title><rect x="48.4776%" y="164" width="0.6010%" height="15" fill="rgb(234,202,34)" fg:x="1210" fg:w="15"/><text x="48.7276%" y="174.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (loop.c:171493) (15 samples, 0.60%)</title><rect x="48.4776%" y="180" width="0.6010%" height="15" fill="rgb(253,148,53)" fg:x="1210" fg:w="15"/><text x="48.7276%" y="190.50"></text></g><g><title>__Pyx_PyObject_CallMethO (loop.c:171467) (15 samples, 0.60%)</title><rect x="48.4776%" y="196" width="0.6010%" height="15" fill="rgb(218,129,16)" fg:x="1210" fg:w="15"/><text x="48.7276%" y="206.50"></text></g><g><title>run_forever (loop.c:27987) (15 samples, 0.60%)</title><rect x="48.4776%" y="212" width="0.6010%" height="15" fill="rgb(216,85,19)" fg:x="1210" fg:w="15"/><text x="48.7276%" y="222.50"></text></g><g><title>run_forever (loop.c:28166) (15 samples, 0.60%)</title><rect x="48.4776%" y="228" width="0.6010%" height="15" fill="rgb(235,228,7)" fg:x="1210" fg:w="15"/><text x="48.7276%" y="238.50"></text></g><g><title>Loop__run (loop.c:15471) (15 samples, 0.60%)</title><rect x="48.4776%" y="244" width="0.6010%" height="15" fill="rgb(245,175,0)" fg:x="1210" fg:w="15"/><text x="48.7276%" y="254.50"></text></g><g><title>Loop___run (loop.c:15106) (15 samples, 0.60%)</title><rect x="48.4776%" y="260" width="0.6010%" height="15" fill="rgb(208,168,36)" fg:x="1210" fg:w="15"/><text x="48.7276%" y="270.50"></text></g><g><title>uv_run (core.c:439) (15 samples, 0.60%)</title><rect x="48.4776%" y="276" width="0.6010%" height="15" fill="rgb(246,171,24)" fg:x="1210" fg:w="15"/><text x="48.7276%" y="286.50"></text></g><g><title>uv__run_idle (loop-watcher.c:68) (15 samples, 0.60%)</title><rect x="48.4776%" y="292" width="0.6010%" height="15" fill="rgb(215,142,24)" fg:x="1210" fg:w="15"/><text x="48.7276%" y="302.50"></text></g><g><title>uv__queue_empty (queue.h:33) (15 samples, 0.60%)</title><rect x="48.4776%" y="308" width="0.6010%" height="15" fill="rgb(250,187,7)" fg:x="1210" fg:w="15"/><text x="48.7276%" y="318.50"></text></g><g><title>loop_cb_idle_callback (loop.c:79836) (15 samples, 0.60%)</title><rect x="48.4776%" y="324" width="0.6010%" height="15" fill="rgb(228,66,33)" fg:x="1210" fg:w="15"/><text x="48.7276%" y="334.50"></text></g><g><title>Handle__run (loop.c:60773) (15 samples, 0.60%)</title><rect x="48.4776%" y="340" width="0.6010%" height="15" fill="rgb(234,215,21)" fg:x="1210" fg:w="15"/><text x="48.7276%" y="350.50"></text></g><g><title>Loop__on_idle (loop.c:14597) (15 samples, 0.60%)</title><rect x="48.4776%" y="356" width="0.6010%" height="15" fill="rgb(222,191,20)" fg:x="1210" fg:w="15"/><text x="48.7276%" y="366.50"></text></g><g><title>Handle__run (loop.c:60747) (10 samples, 0.40%)</title><rect x="48.6779%" y="372" width="0.4006%" height="15" fill="rgb(245,79,54)" fg:x="1215" fg:w="10"/><text x="48.9279%" y="382.50"></text></g><g><title>task_step (_asynciomodule.c:2950) (10 samples, 0.40%)</title><rect x="48.6779%" y="388" width="0.4006%" height="15" fill="rgb(240,10,37)" fg:x="1215" fg:w="10"/><text x="48.9279%" y="398.50"></text></g><g><title>task_step_impl (_asynciomodule.c:2653) (10 samples, 0.40%)</title><rect x="48.6779%" y="404" width="0.4006%" height="15" fill="rgb(214,192,32)" fg:x="1215" fg:w="10"/><text x="48.9279%" y="414.50"></text></g><g><title>run (asyncio/runners.py:44) (10 samples, 0.40%)</title><rect x="48.6779%" y="420" width="0.4006%" height="15" fill="rgb(209,36,54)" fg:x="1215" fg:w="10"/><text x="48.9279%" y="430.50"></text></g><g><title>_queue_SimpleQueue_get_impl (_queuemodule.c:248) (303 samples, 12.14%)</title><rect x="49.0785%" y="180" width="12.1394%" height="15" fill="rgb(220,10,11)" fg:x="1225" fg:w="303"/><text x="49.3285%" y="190.50">_queue_SimpleQueue..</text></g><g><title>PyThread_acquire_lock_timed.localalias (python3.10) (303 samples, 12.14%)</title><rect x="49.0785%" y="196" width="12.1394%" height="15" fill="rgb(221,106,17)" fg:x="1225" fg:w="303"/><text x="49.3285%" y="206.50">PyThread_acquire_l..</text></g><g><title>__new_sem_wait_slow.constprop.0 (libpthread-2.31.so) (303 samples, 12.14%)</title><rect x="49.0785%" y="212" width="12.1394%" height="15" fill="rgb(251,142,44)" fg:x="1225" fg:w="303"/><text x="49.3285%" y="222.50">__new_sem_wait_slo..</text></g><g><title>do_futex_wait.constprop.0 (libpthread-2.31.so) (303 samples, 12.14%)</title><rect x="49.0785%" y="228" width="12.1394%" height="15" fill="rgb(238,13,15)" fg:x="1225" fg:w="303"/><text x="49.3285%" y="238.50">do_futex_wait.cons..</text></g><g><title>_worker (concurrent/futures/thread.py:81) (312 samples, 12.50%)</title><rect x="49.0785%" y="148" width="12.5000%" height="15" fill="rgb(208,107,27)" fg:x="1225" fg:w="312"/><text x="49.3285%" y="158.50">_worker (concurrent..</text></g><g><title>_queue_SimpleQueue_get (_queuemodule.c.h:175) (312 samples, 12.50%)</title><rect x="49.0785%" y="164" width="12.5000%" height="15" fill="rgb(205,136,37)" fg:x="1225" fg:w="312"/><text x="49.3285%" y="174.50">_queue_SimpleQueue_..</text></g><g><title>_queue_SimpleQueue_get_impl (_queuemodule.c:250) (9 samples, 0.36%)</title><rect x="61.2179%" y="180" width="0.3606%" height="15" fill="rgb(250,205,27)" fg:x="1528" fg:w="9"/><text x="61.4679%" y="190.50"></text></g><g><title>pthread_cond_timedwait@@GLIBC_2.3.2 (libpthread-2.31.so) (9 samples, 0.36%)</title><rect x="61.2179%" y="196" width="0.3606%" height="15" fill="rgb(210,80,43)" fg:x="1528" fg:w="9"/><text x="61.4679%" y="206.50"></text></g><g><title>decorate_context (torch/utils/_contextlib.py:114) (3 samples, 0.12%)</title><rect x="61.6186%" y="212" width="0.1202%" height="15" fill="rgb(247,160,36)" fg:x="1538" fg:w="3"/><text x="61.8686%" y="222.50"></text></g><g><title>_prepare_decode (vllm/worker/model_runner.py:366) (3 samples, 0.12%)</title><rect x="61.8189%" y="260" width="0.1202%" height="15" fill="rgb(234,13,49)" fg:x="1543" fg:w="3"/><text x="62.0689%" y="270.50"></text></g><g><title>torch::autograd::THPVariable_tensor (libtorch_python.so) (3 samples, 0.12%)</title><rect x="61.8189%" y="276" width="0.1202%" height="15" fill="rgb(234,122,0)" fg:x="1543" fg:w="3"/><text x="62.0689%" y="286.50"></text></g><g><title>torch::utils::tensor_ctor (libtorch_python.so) (3 samples, 0.12%)</title><rect x="61.8189%" y="292" width="0.1202%" height="15" fill="rgb(207,146,38)" fg:x="1543" fg:w="3"/><text x="62.0689%" y="302.50"></text></g><g><title>torch::utils::(anonymous namespace)::internal_new_from_data (libtorch_python.so) (3 samples, 0.12%)</title><rect x="61.8189%" y="308" width="0.1202%" height="15" fill="rgb(207,177,25)" fg:x="1543" fg:w="3"/><text x="62.0689%" y="318.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (libtorch_python.so) (3 samples, 0.12%)</title><rect x="61.8189%" y="324" width="0.1202%" height="15" fill="rgb(211,178,42)" fg:x="1543" fg:w="3"/><text x="62.0689%" y="334.50"></text></g><g><title>pthread_cond_timedwait@@GLIBC_2.3.2 (libpthread-2.31.so) (3 samples, 0.12%)</title><rect x="61.8189%" y="340" width="0.1202%" height="15" fill="rgb(230,69,54)" fg:x="1543" fg:w="3"/><text x="62.0689%" y="350.50"></text></g><g><title>prepare_input_tensors (vllm/worker/model_runner.py:539) (4 samples, 0.16%)</title><rect x="61.8189%" y="244" width="0.1603%" height="15" fill="rgb(214,135,41)" fg:x="1543" fg:w="4"/><text x="62.0689%" y="254.50"></text></g><g><title>execute_model (vllm/worker/model_runner.py:595) (8 samples, 0.32%)</title><rect x="61.7788%" y="228" width="0.3205%" height="15" fill="rgb(237,67,25)" fg:x="1542" fg:w="8"/><text x="62.0288%" y="238.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:254) (6 samples, 0.24%)</title><rect x="62.2196%" y="372" width="0.2404%" height="15" fill="rgb(222,189,50)" fg:x="1553" fg:w="6"/><text x="62.4696%" y="382.50"></text></g><g><title>__getitem__ (torch/nn/modules/container.py:293) (4 samples, 0.16%)</title><rect x="62.2997%" y="388" width="0.1603%" height="15" fill="rgb(245,148,34)" fg:x="1555" fg:w="4"/><text x="62.5497%" y="398.50"></text></g><g><title>at::native::empty_like (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="62.9006%" y="628" width="0.1202%" height="15" fill="rgb(222,29,6)" fg:x="1570" fg:w="3"/><text x="63.1506%" y="638.50"></text></g><g><title>at::empty_symint (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="62.9006%" y="644" width="0.1202%" height="15" fill="rgb(221,189,43)" fg:x="1570" fg:w="3"/><text x="63.1506%" y="654.50"></text></g><g><title>at::_ops::empty_memory_format::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="62.9006%" y="660" width="0.1202%" height="15" fill="rgb(207,36,27)" fg:x="1570" fg:w="3"/><text x="63.1506%" y="670.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::empty_memory_format(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="62.9006%" y="676" width="0.1202%" height="15" fill="rgb(217,90,24)" fg:x="1570" fg:w="3"/><text x="63.1506%" y="686.50"></text></g><g><title>at::_ops::empty_memory_format::redispatch (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="62.9006%" y="692" width="0.1202%" height="15" fill="rgb(224,66,35)" fg:x="1570" fg:w="3"/><text x="63.1506%" y="702.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CUDA_memory_format_empty(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="62.9006%" y="708" width="0.1202%" height="15" fill="rgb(221,13,50)" fg:x="1570" fg:w="3"/><text x="63.1506%" y="718.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CUDA_memory_format_empty (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="62.9006%" y="724" width="0.1202%" height="15" fill="rgb(236,68,49)" fg:x="1570" fg:w="3"/><text x="63.1506%" y="734.50"></text></g><g><title>at::native::empty_cuda (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="62.9006%" y="740" width="0.1202%" height="15" fill="rgb(229,146,28)" fg:x="1570" fg:w="3"/><text x="63.1506%" y="750.50"></text></g><g><title>at::detail::empty_cuda (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="62.9006%" y="756" width="0.1202%" height="15" fill="rgb(225,31,38)" fg:x="1570" fg:w="3"/><text x="63.1506%" y="766.50"></text></g><g><title>at::detail::empty_cuda (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="62.9006%" y="772" width="0.1202%" height="15" fill="rgb(250,208,3)" fg:x="1570" fg:w="3"/><text x="63.1506%" y="782.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="62.9006%" y="788" width="0.1202%" height="15" fill="rgb(246,54,23)" fg:x="1570" fg:w="3"/><text x="63.1506%" y="798.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="62.9006%" y="804" width="0.1202%" height="15" fill="rgb(243,76,11)" fg:x="1570" fg:w="3"/><text x="63.1506%" y="814.50"></text></g><g><title>at::_ops::layer_norm::call (libtorch_cpu.so) (8 samples, 0.32%)</title><rect x="62.7404%" y="516" width="0.3205%" height="15" fill="rgb(245,21,50)" fg:x="1566" fg:w="8"/><text x="62.9904%" y="526.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__layer_norm(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, double, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, double, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, double, bool)&gt;::call (libtorch_cpu.so) (7 samples, 0.28%)</title><rect x="62.7804%" y="532" width="0.2804%" height="15" fill="rgb(228,9,43)" fg:x="1567" fg:w="7"/><text x="63.0304%" y="542.50"></text></g><g><title>at::native::layer_norm_symint (libtorch_cpu.so) (7 samples, 0.28%)</title><rect x="62.7804%" y="548" width="0.2804%" height="15" fill="rgb(208,100,47)" fg:x="1567" fg:w="7"/><text x="63.0304%" y="558.50"></text></g><g><title>at::_ops::native_layer_norm::call (libtorch_cpu.so) (7 samples, 0.28%)</title><rect x="62.7804%" y="564" width="0.2804%" height="15" fill="rgb(232,26,8)" fg:x="1567" fg:w="7"/><text x="63.0304%" y="574.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CUDA__native_layer_norm(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, double)&gt;::call (libtorch_cuda.so) (7 samples, 0.28%)</title><rect x="62.7804%" y="580" width="0.2804%" height="15" fill="rgb(216,166,38)" fg:x="1567" fg:w="7"/><text x="63.0304%" y="590.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CUDA__native_layer_norm (libtorch_cuda.so) (7 samples, 0.28%)</title><rect x="62.7804%" y="596" width="0.2804%" height="15" fill="rgb(251,202,51)" fg:x="1567" fg:w="7"/><text x="63.0304%" y="606.50"></text></g><g><title>at::native::layer_norm_cuda (libtorch_cuda.so) (7 samples, 0.28%)</title><rect x="62.7804%" y="612" width="0.2804%" height="15" fill="rgb(254,216,34)" fg:x="1567" fg:w="7"/><text x="63.0304%" y="622.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:196) (12 samples, 0.48%)</title><rect x="62.6202%" y="468" width="0.4808%" height="15" fill="rgb(251,32,27)" fg:x="1563" fg:w="12"/><text x="62.8702%" y="478.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2543) (11 samples, 0.44%)</title><rect x="62.6603%" y="484" width="0.4407%" height="15" fill="rgb(208,127,28)" fg:x="1564" fg:w="11"/><text x="62.9103%" y="494.50"></text></g><g><title>torch::autograd::THPVariable_layer_norm (libtorch_python.so) (9 samples, 0.36%)</title><rect x="62.7404%" y="500" width="0.3606%" height="15" fill="rgb(224,137,22)" fg:x="1566" fg:w="9"/><text x="62.9904%" y="510.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:162) (16 samples, 0.64%)</title><rect x="62.5000%" y="420" width="0.6410%" height="15" fill="rgb(254,70,32)" fg:x="1560" fg:w="16"/><text x="62.7500%" y="430.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (14 samples, 0.56%)</title><rect x="62.5801%" y="436" width="0.5609%" height="15" fill="rgb(229,75,37)" fg:x="1562" fg:w="14"/><text x="62.8301%" y="446.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (14 samples, 0.56%)</title><rect x="62.5801%" y="452" width="0.5609%" height="15" fill="rgb(252,64,23)" fg:x="1562" fg:w="14"/><text x="62.8301%" y="462.50"></text></g><g><title>cublasLtMatmul (nvidia/cublas/lib/libcublasLt.so.12) (3 samples, 0.12%)</title><rect x="63.5417%" y="692" width="0.1202%" height="15" fill="rgb(232,162,48)" fg:x="1586" fg:w="3"/><text x="63.7917%" y="702.50"></text></g><g><title>cublasLtMatmulAlgoGetHeuristic (nvidia/cublas/lib/libcublasLt.so.12) (3 samples, 0.12%)</title><rect x="63.6619%" y="692" width="0.1202%" height="15" fill="rgb(246,160,12)" fg:x="1589" fg:w="3"/><text x="63.9119%" y="702.50"></text></g><g><title>0x7f9b2e62dd2e (nvidia/cublas/lib/libcublasLt.so.12) (3 samples, 0.12%)</title><rect x="63.6619%" y="708" width="0.1202%" height="15" fill="rgb(247,166,0)" fg:x="1589" fg:w="3"/><text x="63.9119%" y="718.50"></text></g><g><title>at::cuda::blas::gemm_and_bias&lt;c10::Half&gt; (libtorch_cuda.so) (10 samples, 0.40%)</title><rect x="63.4215%" y="676" width="0.4006%" height="15" fill="rgb(249,219,21)" fg:x="1583" fg:w="10"/><text x="63.6715%" y="686.50"></text></g><g><title>at::native::(anonymous namespace)::addmm_out_cuda_impl (libtorch_cuda.so) (12 samples, 0.48%)</title><rect x="63.3814%" y="660" width="0.4808%" height="15" fill="rgb(205,209,3)" fg:x="1582" fg:w="12"/><text x="63.6314%" y="670.50"></text></g><g><title>at::_ops::addmm::call (libtorch_cpu.so) (14 samples, 0.56%)</title><rect x="63.3413%" y="612" width="0.5609%" height="15" fill="rgb(243,44,1)" fg:x="1581" fg:w="14"/><text x="63.5913%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CUDA_addmm(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cuda.so) (14 samples, 0.56%)</title><rect x="63.3413%" y="628" width="0.5609%" height="15" fill="rgb(206,159,16)" fg:x="1581" fg:w="14"/><text x="63.5913%" y="638.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CUDA_addmm (libtorch_cuda.so) (14 samples, 0.56%)</title><rect x="63.3413%" y="644" width="0.5609%" height="15" fill="rgb(244,77,30)" fg:x="1581" fg:w="14"/><text x="63.5913%" y="654.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:103) (17 samples, 0.68%)</title><rect x="63.3413%" y="468" width="0.6811%" height="15" fill="rgb(218,69,12)" fg:x="1581" fg:w="17"/><text x="63.5913%" y="478.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (17 samples, 0.68%)</title><rect x="63.3413%" y="484" width="0.6811%" height="15" fill="rgb(212,87,7)" fg:x="1581" fg:w="17"/><text x="63.5913%" y="494.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (17 samples, 0.68%)</title><rect x="63.3413%" y="500" width="0.6811%" height="15" fill="rgb(245,114,25)" fg:x="1581" fg:w="17"/><text x="63.5913%" y="510.50"></text></g><g><title>forward (vllm/model_executor/layers/linear.py:215) (17 samples, 0.68%)</title><rect x="63.3413%" y="516" width="0.6811%" height="15" fill="rgb(210,61,42)" fg:x="1581" fg:w="17"/><text x="63.5913%" y="526.50"></text></g><g><title>apply_weights (vllm/model_executor/layers/linear.py:79) (17 samples, 0.68%)</title><rect x="63.3413%" y="532" width="0.6811%" height="15" fill="rgb(211,52,33)" fg:x="1581" fg:w="17"/><text x="63.5913%" y="542.50"></text></g><g><title>torch::autograd::THPVariable_linear (libtorch_python.so) (17 samples, 0.68%)</title><rect x="63.3413%" y="548" width="0.6811%" height="15" fill="rgb(234,58,33)" fg:x="1581" fg:w="17"/><text x="63.5913%" y="558.50"></text></g><g><title>at::_ops::linear::call (libtorch_cpu.so) (17 samples, 0.68%)</title><rect x="63.3413%" y="564" width="0.6811%" height="15" fill="rgb(220,115,36)" fg:x="1581" fg:w="17"/><text x="63.5913%" y="574.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__linear(at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;)&gt;::call (libtorch_cpu.so) (17 samples, 0.68%)</title><rect x="63.3413%" y="580" width="0.6811%" height="15" fill="rgb(243,153,54)" fg:x="1581" fg:w="17"/><text x="63.5913%" y="590.50"></text></g><g><title>at::native::linear (libtorch_cpu.so) (17 samples, 0.68%)</title><rect x="63.3413%" y="596" width="0.6811%" height="15" fill="rgb(251,47,18)" fg:x="1581" fg:w="17"/><text x="63.5913%" y="606.50"></text></g><g><title>at::_ops::chunk::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="64.0224%" y="500" width="0.1202%" height="15" fill="rgb(242,102,42)" fg:x="1598" fg:w="3"/><text x="64.2724%" y="510.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (at::Tensor const&amp;, long, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__chunk(at::Tensor const&amp;, long, long)&gt;, std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, long&gt; &gt;, std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (at::Tensor const&amp;, long, long)&gt;::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="64.0224%" y="516" width="0.1202%" height="15" fill="rgb(234,31,38)" fg:x="1598" fg:w="3"/><text x="64.2724%" y="526.50"></text></g><g><title>at::native::chunk (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="64.0224%" y="532" width="0.1202%" height="15" fill="rgb(221,117,51)" fg:x="1598" fg:w="3"/><text x="64.2724%" y="542.50"></text></g><g><title>at::_ops::split_Tensor::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="64.0224%" y="548" width="0.1202%" height="15" fill="rgb(212,20,18)" fg:x="1598" fg:w="3"/><text x="64.2724%" y="558.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (at::Tensor const&amp;, c10::SymInt, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd_Tensor_split(at::Tensor const&amp;, c10::SymInt, long)&gt;, std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::SymInt, long&gt; &gt;, std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (at::Tensor const&amp;, c10::SymInt, long)&gt;::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="64.0224%" y="564" width="0.1202%" height="15" fill="rgb(245,133,36)" fg:x="1598" fg:w="3"/><text x="64.2724%" y="574.50"></text></g><g><title>at::native::split (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="64.0224%" y="580" width="0.1202%" height="15" fill="rgb(212,6,19)" fg:x="1598" fg:w="3"/><text x="64.2724%" y="590.50"></text></g><g><title>at::Tensor::narrow (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="64.0224%" y="596" width="0.1202%" height="15" fill="rgb(218,1,36)" fg:x="1598" fg:w="3"/><text x="64.2724%" y="606.50"></text></g><g><title>at::_ops::narrow::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="64.0224%" y="612" width="0.1202%" height="15" fill="rgb(246,84,54)" fg:x="1598" fg:w="3"/><text x="64.2724%" y="622.50"></text></g><g><title>c10::callUnboxedKernelFunction&lt;at::Tensor, at::Tensor const&amp;, long, c10::SymInt, c10::SymInt&gt; (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="64.0224%" y="628" width="0.1202%" height="15" fill="rgb(242,110,6)" fg:x="1598" fg:w="3"/><text x="64.2724%" y="638.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::SymInt, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__narrow(at::Tensor const&amp;, long, c10::SymInt, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::SymInt, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::SymInt, c10::SymInt)&gt;::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="64.0224%" y="644" width="0.1202%" height="15" fill="rgb(214,47,5)" fg:x="1598" fg:w="3"/><text x="64.2724%" y="654.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__narrow (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="64.0224%" y="660" width="0.1202%" height="15" fill="rgb(218,159,25)" fg:x="1598" fg:w="3"/><text x="64.2724%" y="670.50"></text></g><g><title>at::native::narrow_symint (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="64.0224%" y="676" width="0.1202%" height="15" fill="rgb(215,211,28)" fg:x="1598" fg:w="3"/><text x="64.2724%" y="686.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:104) (4 samples, 0.16%)</title><rect x="64.0224%" y="468" width="0.1603%" height="15" fill="rgb(238,59,32)" fg:x="1598" fg:w="4"/><text x="64.2724%" y="478.50"></text></g><g><title>torch::autograd::THPVariable_chunk (libtorch_python.so) (4 samples, 0.16%)</title><rect x="64.0224%" y="484" width="0.1603%" height="15" fill="rgb(226,82,3)" fg:x="1598" fg:w="4"/><text x="64.2724%" y="494.50"></text></g><g><title>_memory_efficient_attention_forward (xformers/ops/fmha/__init__.py:334) (3 samples, 0.12%)</title><rect x="64.5032%" y="580" width="0.1202%" height="15" fill="rgb(240,164,32)" fg:x="1610" fg:w="3"/><text x="64.7532%" y="590.50"></text></g><g><title>get_device_capability (torch/cuda/__init__.py:435) (4 samples, 0.16%)</title><rect x="64.9840%" y="660" width="0.1603%" height="15" fill="rgb(232,46,7)" fg:x="1622" fg:w="4"/><text x="65.2340%" y="670.50"></text></g><g><title>not_supported_reasons (xformers/ops/fmha/common.py:304) (6 samples, 0.24%)</title><rect x="64.9439%" y="644" width="0.2404%" height="15" fill="rgb(229,129,53)" fg:x="1621" fg:w="6"/><text x="65.1939%" y="654.50"></text></g><g><title>not_supported_reasons (xformers/ops/fmha/decoder.py:41) (17 samples, 0.68%)</title><rect x="64.6234%" y="628" width="0.6811%" height="15" fill="rgb(234,188,29)" fg:x="1613" fg:w="17"/><text x="64.8734%" y="638.50"></text></g><g><title>get_device_properties (torch/cuda/__init__.py:450) (3 samples, 0.12%)</title><rect x="65.3446%" y="676" width="0.1202%" height="15" fill="rgb(246,141,4)" fg:x="1631" fg:w="3"/><text x="65.5946%" y="686.50"></text></g><g><title>get_device_capability (torch/cuda/__init__.py:435) (4 samples, 0.16%)</title><rect x="65.3446%" y="660" width="0.1603%" height="15" fill="rgb(229,23,39)" fg:x="1631" fg:w="4"/><text x="65.5946%" y="670.50"></text></g><g><title>not_supported_reasons (xformers/ops/fmha/common.py:304) (5 samples, 0.20%)</title><rect x="65.3446%" y="644" width="0.2003%" height="15" fill="rgb(206,12,3)" fg:x="1631" fg:w="5"/><text x="65.5946%" y="654.50"></text></g><g><title>not_supported_reasons (xformers/ops/fmha/flash.py:430) (7 samples, 0.28%)</title><rect x="65.3045%" y="628" width="0.2804%" height="15" fill="rgb(252,226,20)" fg:x="1630" fg:w="7"/><text x="65.5545%" y="638.50"></text></g><g><title>_memory_efficient_attention_forward (xformers/ops/fmha/__init__.py:337) (26 samples, 1.04%)</title><rect x="64.6234%" y="580" width="1.0417%" height="15" fill="rgb(216,123,35)" fg:x="1613" fg:w="26"/><text x="64.8734%" y="590.50"></text></g><g><title>_dispatch_fw (xformers/ops/fmha/dispatch.py:120) (26 samples, 1.04%)</title><rect x="64.6234%" y="596" width="1.0417%" height="15" fill="rgb(212,68,40)" fg:x="1613" fg:w="26"/><text x="64.8734%" y="606.50"></text></g><g><title>_run_priority_list (xformers/ops/fmha/dispatch.py:53) (26 samples, 1.04%)</title><rect x="64.6234%" y="612" width="1.0417%" height="15" fill="rgb(254,125,32)" fg:x="1613" fg:w="26"/><text x="64.8734%" y="622.50"></text></g><g><title>apply (xformers/ops/fmha/flash.py:455) (8 samples, 0.32%)</title><rect x="65.7051%" y="596" width="0.3205%" height="15" fill="rgb(253,97,22)" fg:x="1640" fg:w="8"/><text x="65.9551%" y="606.50"></text></g><g><title>_convert_input_format (xformers/ops/fmha/flash.py:311) (3 samples, 0.12%)</title><rect x="65.9054%" y="612" width="0.1202%" height="15" fill="rgb(241,101,14)" fg:x="1645" fg:w="3"/><text x="66.1554%" y="622.50"></text></g><g><title>at::_ops::new_empty::call (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="66.3061%" y="756" width="0.1603%" height="15" fill="rgb(238,103,29)" fg:x="1655" fg:w="4"/><text x="66.5561%" y="766.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__new_empty(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="66.3061%" y="772" width="0.1603%" height="15" fill="rgb(233,195,47)" fg:x="1655" fg:w="4"/><text x="66.5561%" y="782.50"></text></g><g><title>at::native::new_empty_symint (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="66.3462%" y="788" width="0.1202%" height="15" fill="rgb(246,218,30)" fg:x="1656" fg:w="3"/><text x="66.5962%" y="798.50"></text></g><g><title>at::_ops::empty_memory_format::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="66.3462%" y="804" width="0.1202%" height="15" fill="rgb(219,145,47)" fg:x="1656" fg:w="3"/><text x="66.5962%" y="814.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::empty_memory_format(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="66.3462%" y="820" width="0.1202%" height="15" fill="rgb(243,12,26)" fg:x="1656" fg:w="3"/><text x="66.5962%" y="830.50"></text></g><g><title>at::_ops::empty_memory_format::redispatch (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="66.3462%" y="836" width="0.1202%" height="15" fill="rgb(214,87,16)" fg:x="1656" fg:w="3"/><text x="66.5962%" y="846.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CUDA_memory_format_empty(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="66.3462%" y="852" width="0.1202%" height="15" fill="rgb(208,99,42)" fg:x="1656" fg:w="3"/><text x="66.5962%" y="862.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CUDA_memory_format_empty (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="66.3462%" y="868" width="0.1202%" height="15" fill="rgb(253,99,2)" fg:x="1656" fg:w="3"/><text x="66.5962%" y="878.50"></text></g><g><title>at::native::empty_cuda (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="66.3462%" y="884" width="0.1202%" height="15" fill="rgb(220,168,23)" fg:x="1656" fg:w="3"/><text x="66.5962%" y="894.50"></text></g><g><title>at::detail::empty_cuda (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="66.3462%" y="900" width="0.1202%" height="15" fill="rgb(242,38,24)" fg:x="1656" fg:w="3"/><text x="66.5962%" y="910.50"></text></g><g><title>at::detail::empty_cuda (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="66.3462%" y="916" width="0.1202%" height="15" fill="rgb(225,182,9)" fg:x="1656" fg:w="3"/><text x="66.5962%" y="926.50"></text></g><g><title>_flash_fwd (xformers/ops/fmha/flash.py:120) (8 samples, 0.32%)</title><rect x="66.2660%" y="724" width="0.3205%" height="15" fill="rgb(243,178,37)" fg:x="1654" fg:w="8"/><text x="66.5160%" y="734.50"></text></g><g><title>torch::autograd::THPVariable_new_empty (libtorch_python.so) (7 samples, 0.28%)</title><rect x="66.3061%" y="740" width="0.2804%" height="15" fill="rgb(232,139,19)" fg:x="1655" fg:w="7"/><text x="66.5561%" y="750.50"></text></g><g><title>cudaFuncSetAttribute (nvidia/cuda_runtime/lib/libcudart.so.12) (3 samples, 0.12%)</title><rect x="66.8269%" y="900" width="0.1202%" height="15" fill="rgb(225,201,24)" fg:x="1668" fg:w="3"/><text x="67.0769%" y="910.50"></text></g><g><title>_flash_fwd (xformers/ops/fmha/flash.py:130) (15 samples, 0.60%)</title><rect x="66.5865%" y="724" width="0.6010%" height="15" fill="rgb(221,47,46)" fg:x="1662" fg:w="15"/><text x="66.8365%" y="734.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:946) (13 samples, 0.52%)</title><rect x="66.6667%" y="740" width="0.5208%" height="15" fill="rgb(249,23,13)" fg:x="1664" fg:w="13"/><text x="66.9167%" y="750.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (*&amp;)(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;), std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;, pybind11::name, pybind11::scope, pybind11::sibling, char [31]&gt;(std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (*&amp;)(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;), std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (*)(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;), pybind11::name const, pybind11::scope&amp;, pybind11::sibling, char [31])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:224) (13 samples, 0.52%)</title><rect x="66.6667%" y="756" width="0.5208%" height="15" fill="rgb(219,9,5)" fg:x="1664" fg:w="13"/><text x="66.9167%" y="766.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (*&amp;)(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;), std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;, pybind11::name, pybind11::scope, pybind11::sibling, char [31]&gt;(std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (*&amp;)(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;), std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (*)(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;), pybind11::name const, pybind11::scope&amp;, pybind11::sibling, char [31])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:254) (12 samples, 0.48%)</title><rect x="66.7067%" y="772" width="0.4808%" height="15" fill="rgb(254,171,16)" fg:x="1665" fg:w="12"/><text x="66.9567%" y="782.50"></text></g><g><title>pybind11::detail::argument_loader&lt;at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt; &gt;::call&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;, pybind11::detail::void_type, std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (*&amp;)(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;)&gt; &amp;&amp; (cast.h:1449) (12 samples, 0.48%)</title><rect x="66.7067%" y="788" width="0.4808%" height="15" fill="rgb(230,171,20)" fg:x="1665" fg:w="12"/><text x="66.9567%" y="798.50"></text></g><g><title>pybind11::detail::argument_loader&lt;at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt; &gt;::call_impl&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;, std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; (*&amp;)(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt;&amp;, int, int, float, float, bool, bool, int, int, bool, c10::optional&lt;at::Generator&gt;), (unsigned long)0, (unsigned long)1, (unsigned long)2, (unsigned long)3, (unsigned long)4, (unsigned long)5, (unsigned long)6, (unsigned long)7, (unsigned long)8, (unsigned long)9, (unsigned long)10, (unsigned long)11, (unsigned long)12, (unsigned long)13, (unsigned long)14, (unsigned long)15, (unsigned long)16, pybind11::detail::void_type&gt; &amp;&amp; (cast.h:1480) (12 samples, 0.48%)</title><rect x="66.7067%" y="804" width="0.4808%" height="15" fill="rgb(210,71,41)" fg:x="1665" fg:w="12"/><text x="66.9567%" y="814.50"></text></g><g><title>mha_varlen_fwd (flash_api.cpp:597) (9 samples, 0.36%)</title><rect x="66.8269%" y="820" width="0.3606%" height="15" fill="rgb(206,173,20)" fg:x="1668" fg:w="9"/><text x="67.0769%" y="830.50"></text></g><g><title>at::Tensor::Tensor (TensorBody.h:109) (9 samples, 0.36%)</title><rect x="66.8269%" y="836" width="0.3606%" height="15" fill="rgb(233,88,34)" fg:x="1668" fg:w="9"/><text x="67.0769%" y="846.50"></text></g><g><title>at::TensorBase::TensorBase (TensorBase.h:104) (9 samples, 0.36%)</title><rect x="66.8269%" y="852" width="0.3606%" height="15" fill="rgb(223,209,46)" fg:x="1668" fg:w="9"/><text x="67.0769%" y="862.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (intrusive_ptr.h:353) (9 samples, 0.36%)</title><rect x="66.8269%" y="868" width="0.3606%" height="15" fill="rgb(250,43,18)" fg:x="1668" fg:w="9"/><text x="67.0769%" y="878.50"></text></g><g><title>run_flash_fwd&lt;Flash_fwd_kernel_traits&lt;64, 128, 128, 4, false, false, cutlass::half_t, Flash_kernel_traits&lt;64, 128, 128, 4, cutlass::half_t&gt; &gt;, false, true&gt; (xformers/_C_flashattention.so) (9 samples, 0.36%)</title><rect x="66.8269%" y="884" width="0.3606%" height="15" fill="rgb(208,13,10)" fg:x="1668" fg:w="9"/><text x="67.0769%" y="894.50"></text></g><g><title>cudaLaunchKernel (nvidia/cuda_runtime/lib/libcudart.so.12) (5 samples, 0.20%)</title><rect x="66.9872%" y="900" width="0.2003%" height="15" fill="rgb(212,200,36)" fg:x="1672" fg:w="5"/><text x="67.2372%" y="910.50"></text></g><g><title>0x7f9b2dbef98c (nvidia/cuda_runtime/lib/libcudart.so.12) (5 samples, 0.20%)</title><rect x="66.9872%" y="916" width="0.2003%" height="15" fill="rgb(225,90,30)" fg:x="1672" fg:w="5"/><text x="67.2372%" y="926.50"></text></g><g><title>0x7f9b2bc4a3e0 (libcuda.so.545.23.08) (5 samples, 0.20%)</title><rect x="66.9872%" y="932" width="0.2003%" height="15" fill="rgb(236,182,39)" fg:x="1672" fg:w="5"/><text x="67.2372%" y="942.50"></text></g><g><title>0x7f9b2ba48dcc (libcuda.so.545.23.08) (5 samples, 0.20%)</title><rect x="66.9872%" y="948" width="0.2003%" height="15" fill="rgb(212,144,35)" fg:x="1672" fg:w="5"/><text x="67.2372%" y="958.50"></text></g><g><title>0x7f9b2ba46230 (libcuda.so.545.23.08) (3 samples, 0.12%)</title><rect x="67.0673%" y="964" width="0.1202%" height="15" fill="rgb(228,63,44)" fg:x="1674" fg:w="3"/><text x="67.3173%" y="974.50"></text></g><g><title>0x7f9b2ba45a26 (libcuda.so.545.23.08) (3 samples, 0.12%)</title><rect x="67.0673%" y="980" width="0.1202%" height="15" fill="rgb(228,109,6)" fg:x="1674" fg:w="3"/><text x="67.3173%" y="990.50"></text></g><g><title>c10::Dispatcher::callBoxed (libtorch_python.so) (30 samples, 1.20%)</title><rect x="66.1458%" y="692" width="1.2019%" height="15" fill="rgb(238,117,24)" fg:x="1651" fg:w="30"/><text x="66.3958%" y="702.50"></text></g><g><title>torch::impl::dispatch::PythonKernelHolder::operator() (libtorch_python.so) (30 samples, 1.20%)</title><rect x="66.1458%" y="708" width="1.2019%" height="15" fill="rgb(242,26,26)" fg:x="1651" fg:w="30"/><text x="66.3958%" y="718.50"></text></g><g><title>apply (xformers/ops/fmha/flash.py:458) (33 samples, 1.32%)</title><rect x="66.0657%" y="596" width="1.3221%" height="15" fill="rgb(221,92,48)" fg:x="1649" fg:w="33"/><text x="66.3157%" y="606.50"></text></g><g><title>__call__ (torch/_ops.py:692) (33 samples, 1.32%)</title><rect x="66.0657%" y="612" width="1.3221%" height="15" fill="rgb(209,209,32)" fg:x="1649" fg:w="33"/><text x="66.3157%" y="622.50"></text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (33 samples, 1.32%)</title><rect x="66.0657%" y="628" width="1.3221%" height="15" fill="rgb(221,70,22)" fg:x="1649" fg:w="33"/><text x="66.3157%" y="638.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;torch::jit::initJITBindings(_object*)::{lambda(std::string const&amp;)#195}::operator()(std::string const&amp;) const::{lambda(pybind11::args, pybind11::kwargs)#3}, pybind11::object, pybind11::args, pybind11::kwargs, pybind11::name, pybind11::doc&gt;(torch::jit::initJITBindings(_object*)::{lambda(std::string const&amp;)#195}::operator()(std::string const&amp;) const::{lambda(pybind11::args&amp;&amp;, pybind11::kwargs)#3}, pybind11::object (*)(pybind11::args, pybind11::kwargs), pybind11::name const, pybind11::doc&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (libtorch_python.so) (32 samples, 1.28%)</title><rect x="66.1058%" y="644" width="1.2821%" height="15" fill="rgb(248,145,5)" fg:x="1650" fg:w="32"/><text x="66.3558%" y="654.50"></text></g><g><title>torch::jit::_get_operation_for_overload_or_packet (libtorch_python.so) (31 samples, 1.24%)</title><rect x="66.1458%" y="660" width="1.2420%" height="15" fill="rgb(226,116,26)" fg:x="1651" fg:w="31"/><text x="66.3958%" y="670.50"></text></g><g><title>torch::jit::invokeOperatorFromPython (libtorch_python.so) (31 samples, 1.24%)</title><rect x="66.1458%" y="676" width="1.2420%" height="15" fill="rgb(244,5,17)" fg:x="1651" fg:w="31"/><text x="66.3958%" y="686.50"></text></g><g><title>memory_efficient_attention_forward (xformers/ops/fmha/__init__.py:244) (76 samples, 3.04%)</title><rect x="64.4631%" y="564" width="3.0449%" height="15" fill="rgb(252,159,33)" fg:x="1609" fg:w="76"/><text x="64.7131%" y="574.50">mem..</text></g><g><title>_memory_efficient_attention_forward (xformers/ops/fmha/__init__.py:341) (46 samples, 1.84%)</title><rect x="65.6651%" y="580" width="1.8429%" height="15" fill="rgb(206,71,0)" fg:x="1639" fg:w="46"/><text x="65.9151%" y="590.50">_..</text></g><g><title>_run_memory_efficient_xformer_forward (vllm/model_executor/layers/attention/backends/xformers.py:216) (79 samples, 3.17%)</title><rect x="64.4631%" y="548" width="3.1651%" height="15" fill="rgb(233,118,54)" fg:x="1609" fg:w="79"/><text x="64.7131%" y="558.50">_ru..</text></g><g><title>memory_efficient_attention_forward (xformers/ops/fmha/__init__.py:245) (3 samples, 0.12%)</title><rect x="67.5080%" y="564" width="0.1202%" height="15" fill="rgb(234,83,48)" fg:x="1685" fg:w="3"/><text x="67.7580%" y="574.50"></text></g><g><title>forward (vllm/model_executor/layers/attention/backends/xformers.py:146) (82 samples, 3.29%)</title><rect x="64.3830%" y="532" width="3.2853%" height="15" fill="rgb(228,3,54)" fg:x="1607" fg:w="82"/><text x="64.6330%" y="542.50">for..</text></g><g><title>forward (vllm/model_executor/layers/attention/backends/xformers.py:85) (3 samples, 0.12%)</title><rect x="67.7484%" y="532" width="0.1202%" height="15" fill="rgb(226,155,13)" fg:x="1691" fg:w="3"/><text x="67.9984%" y="542.50"></text></g><g><title>forward (vllm/model_executor/layers/attention/backends/xformers.py:87) (3 samples, 0.12%)</title><rect x="67.9087%" y="532" width="0.1202%" height="15" fill="rgb(241,28,37)" fg:x="1695" fg:w="3"/><text x="68.1587%" y="542.50"></text></g><g><title>torch::autograd::THPVariable_view (libtorch_python.so) (3 samples, 0.12%)</title><rect x="67.9087%" y="548" width="0.1202%" height="15" fill="rgb(233,93,10)" fg:x="1695" fg:w="3"/><text x="68.1587%" y="558.50"></text></g><g><title>forward (vllm/model_executor/layers/attention/backends/xformers.py:94) (4 samples, 0.16%)</title><rect x="68.0288%" y="532" width="0.1603%" height="15" fill="rgb(225,113,19)" fg:x="1698" fg:w="4"/><text x="68.2788%" y="542.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:106) (101 samples, 4.05%)</title><rect x="64.1827%" y="468" width="4.0465%" height="15" fill="rgb(241,2,18)" fg:x="1602" fg:w="101"/><text x="64.4327%" y="478.50">forw..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (100 samples, 4.01%)</title><rect x="64.2228%" y="484" width="4.0064%" height="15" fill="rgb(228,207,21)" fg:x="1603" fg:w="100"/><text x="64.4728%" y="494.50">_wra..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (99 samples, 3.97%)</title><rect x="64.2628%" y="500" width="3.9663%" height="15" fill="rgb(213,211,35)" fg:x="1604" fg:w="99"/><text x="64.5128%" y="510.50">_cal..</text></g><g><title>forward (vllm/model_executor/layers/attention/attention.py:58) (98 samples, 3.93%)</title><rect x="64.3029%" y="516" width="3.9263%" height="15" fill="rgb(209,83,10)" fg:x="1605" fg:w="98"/><text x="64.5529%" y="526.50">forw..</text></g><g><title>at::cuda::getCurrentCUDABlasHandle (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="68.7099%" y="772" width="0.1202%" height="15" fill="rgb(209,164,1)" fg:x="1715" fg:w="3"/><text x="68.9599%" y="782.50"></text></g><g><title>0x7f9b2ec221e3 (nvidia/cublas/lib/libcublasLt.so.12) (3 samples, 0.12%)</title><rect x="68.9103%" y="900" width="0.1202%" height="15" fill="rgb(213,184,43)" fg:x="1720" fg:w="3"/><text x="69.1603%" y="910.50"></text></g><g><title>0x7f9b2eb9bbf2 (nvidia/cublas/lib/libcublasLt.so.12) (3 samples, 0.12%)</title><rect x="68.9103%" y="916" width="0.1202%" height="15" fill="rgb(231,61,34)" fg:x="1720" fg:w="3"/><text x="69.1603%" y="926.50"></text></g><g><title>0x7f9b506a9ba6 (nvidia/cublas/lib/libcublas.so.12) (6 samples, 0.24%)</title><rect x="68.8702%" y="852" width="0.2404%" height="15" fill="rgb(235,75,3)" fg:x="1719" fg:w="6"/><text x="69.1202%" y="862.50"></text></g><g><title>cublasLtHSHMatmul (nvidia/cublas/lib/libcublasLt.so.12) (6 samples, 0.24%)</title><rect x="68.8702%" y="868" width="0.2404%" height="15" fill="rgb(220,106,47)" fg:x="1719" fg:w="6"/><text x="69.1202%" y="878.50"></text></g><g><title>0x7f9b2e62d6a8 (nvidia/cublas/lib/libcublasLt.so.12) (5 samples, 0.20%)</title><rect x="68.9103%" y="884" width="0.2003%" height="15" fill="rgb(210,196,33)" fg:x="1720" fg:w="5"/><text x="69.1603%" y="894.50"></text></g><g><title>at::native::structured_mm_out_cuda::impl (libtorch_cuda.so) (12 samples, 0.48%)</title><rect x="68.7099%" y="724" width="0.4808%" height="15" fill="rgb(229,154,42)" fg:x="1715" fg:w="12"/><text x="68.9599%" y="734.50"></text></g><g><title>at::native::(anonymous namespace)::addmm_out_cuda_impl (libtorch_cuda.so) (12 samples, 0.48%)</title><rect x="68.7099%" y="740" width="0.4808%" height="15" fill="rgb(228,114,26)" fg:x="1715" fg:w="12"/><text x="68.9599%" y="750.50"></text></g><g><title>at::cuda::blas::gemm&lt;c10::Half&gt; (libtorch_cuda.so) (12 samples, 0.48%)</title><rect x="68.7099%" y="756" width="0.4808%" height="15" fill="rgb(208,144,1)" fg:x="1715" fg:w="12"/><text x="68.9599%" y="766.50"></text></g><g><title>cublasGemmEx (nvidia/cublas/lib/libcublas.so.12) (9 samples, 0.36%)</title><rect x="68.8301%" y="772" width="0.3606%" height="15" fill="rgb(239,112,37)" fg:x="1718" fg:w="9"/><text x="69.0801%" y="782.50"></text></g><g><title>0x7f9b509143d8 (nvidia/cublas/lib/libcublas.so.12) (9 samples, 0.36%)</title><rect x="68.8301%" y="788" width="0.3606%" height="15" fill="rgb(210,96,50)" fg:x="1718" fg:w="9"/><text x="69.0801%" y="798.50"></text></g><g><title>0x7f9b50913ecf (nvidia/cublas/lib/libcublas.so.12) (9 samples, 0.36%)</title><rect x="68.8301%" y="804" width="0.3606%" height="15" fill="rgb(222,178,2)" fg:x="1718" fg:w="9"/><text x="69.0801%" y="814.50"></text></g><g><title>0x7f9b5068f2ef (nvidia/cublas/lib/libcublas.so.12) (9 samples, 0.36%)</title><rect x="68.8301%" y="820" width="0.3606%" height="15" fill="rgb(226,74,18)" fg:x="1718" fg:w="9"/><text x="69.0801%" y="830.50"></text></g><g><title>0x7f9b506ac122 (nvidia/cublas/lib/libcublas.so.12) (9 samples, 0.36%)</title><rect x="68.8301%" y="836" width="0.3606%" height="15" fill="rgb(225,67,54)" fg:x="1718" fg:w="9"/><text x="69.0801%" y="846.50"></text></g><g><title>at::_ops::matmul::call (libtorch_cpu.so) (15 samples, 0.60%)</title><rect x="68.6699%" y="612" width="0.6010%" height="15" fill="rgb(251,92,32)" fg:x="1714" fg:w="15"/><text x="68.9199%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__matmul(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (14 samples, 0.56%)</title><rect x="68.7099%" y="628" width="0.5609%" height="15" fill="rgb(228,149,22)" fg:x="1715" fg:w="14"/><text x="68.9599%" y="638.50"></text></g><g><title>at::native::matmul (libtorch_cpu.so) (14 samples, 0.56%)</title><rect x="68.7099%" y="644" width="0.5609%" height="15" fill="rgb(243,54,13)" fg:x="1715" fg:w="14"/><text x="68.9599%" y="654.50"></text></g><g><title>at::native::_matmul_impl (libtorch_cpu.so) (14 samples, 0.56%)</title><rect x="68.7099%" y="660" width="0.5609%" height="15" fill="rgb(243,180,28)" fg:x="1715" fg:w="14"/><text x="68.9599%" y="670.50"></text></g><g><title>at::_ops::mm::call (libtorch_cpu.so) (14 samples, 0.56%)</title><rect x="68.7099%" y="676" width="0.5609%" height="15" fill="rgb(208,167,24)" fg:x="1715" fg:w="14"/><text x="68.9599%" y="686.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CUDA_mm(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cuda.so) (14 samples, 0.56%)</title><rect x="68.7099%" y="692" width="0.5609%" height="15" fill="rgb(245,73,45)" fg:x="1715" fg:w="14"/><text x="68.9599%" y="702.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CUDA_mm (libtorch_cuda.so) (14 samples, 0.56%)</title><rect x="68.7099%" y="708" width="0.5609%" height="15" fill="rgb(237,203,48)" fg:x="1715" fg:w="14"/><text x="68.9599%" y="718.50"></text></g><g><title>at::_ops::t::call (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="69.2708%" y="612" width="0.2003%" height="15" fill="rgb(211,197,16)" fg:x="1729" fg:w="5"/><text x="69.5208%" y="622.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::t(c10::DispatchKeySet, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="69.3109%" y="628" width="0.1603%" height="15" fill="rgb(243,99,51)" fg:x="1730" fg:w="4"/><text x="69.5609%" y="638.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::t (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="69.3109%" y="644" width="0.1603%" height="15" fill="rgb(215,123,29)" fg:x="1730" fg:w="4"/><text x="69.5609%" y="654.50"></text></g><g><title>at::_ops::linear::call (libtorch_cpu.so) (22 samples, 0.88%)</title><rect x="68.6699%" y="564" width="0.8814%" height="15" fill="rgb(239,186,37)" fg:x="1714" fg:w="22"/><text x="68.9199%" y="574.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__linear(at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;)&gt;::call (libtorch_cpu.so) (22 samples, 0.88%)</title><rect x="68.6699%" y="580" width="0.8814%" height="15" fill="rgb(252,136,39)" fg:x="1714" fg:w="22"/><text x="68.9199%" y="590.50"></text></g><g><title>at::native::linear (libtorch_cpu.so) (22 samples, 0.88%)</title><rect x="68.6699%" y="596" width="0.8814%" height="15" fill="rgb(223,213,32)" fg:x="1714" fg:w="22"/><text x="68.9199%" y="606.50"></text></g><g><title>forward (vllm/model_executor/layers/linear.py:572) (25 samples, 1.00%)</title><rect x="68.6298%" y="516" width="1.0016%" height="15" fill="rgb(233,115,5)" fg:x="1713" fg:w="25"/><text x="68.8798%" y="526.50"></text></g><g><title>apply_weights (vllm/model_executor/layers/linear.py:79) (25 samples, 1.00%)</title><rect x="68.6298%" y="532" width="1.0016%" height="15" fill="rgb(207,226,44)" fg:x="1713" fg:w="25"/><text x="68.8798%" y="542.50"></text></g><g><title>torch::autograd::THPVariable_linear (libtorch_python.so) (24 samples, 0.96%)</title><rect x="68.6699%" y="548" width="0.9615%" height="15" fill="rgb(208,126,0)" fg:x="1714" fg:w="24"/><text x="68.9199%" y="558.50"></text></g><g><title>at::meta::structured_add_Tensor::meta (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="69.7516%" y="612" width="0.1202%" height="15" fill="rgb(244,66,21)" fg:x="1741" fg:w="3"/><text x="70.0016%" y="622.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="69.7516%" y="628" width="0.1202%" height="15" fill="rgb(222,97,12)" fg:x="1741" fg:w="3"/><text x="70.0016%" y="638.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="69.7516%" y="644" width="0.1202%" height="15" fill="rgb(219,213,19)" fg:x="1741" fg:w="3"/><text x="70.0016%" y="654.50"></text></g><g><title>at::_ops::add_Tensor::call (libtorch_cpu.so) (6 samples, 0.24%)</title><rect x="69.7115%" y="564" width="0.2404%" height="15" fill="rgb(252,169,30)" fg:x="1740" fg:w="6"/><text x="69.9615%" y="574.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CUDA_add_Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cuda.so) (6 samples, 0.24%)</title><rect x="69.7115%" y="580" width="0.2404%" height="15" fill="rgb(206,32,51)" fg:x="1740" fg:w="6"/><text x="69.9615%" y="590.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CUDA_add_Tensor (libtorch_cuda.so) (6 samples, 0.24%)</title><rect x="69.7115%" y="596" width="0.2404%" height="15" fill="rgb(250,172,42)" fg:x="1740" fg:w="6"/><text x="69.9615%" y="606.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:163) (172 samples, 6.89%)</title><rect x="63.1410%" y="420" width="6.8910%" height="15" fill="rgb(209,34,43)" fg:x="1576" fg:w="172"/><text x="63.3910%" y="430.50">forward (..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (168 samples, 6.73%)</title><rect x="63.3013%" y="436" width="6.7308%" height="15" fill="rgb(223,11,35)" fg:x="1580" fg:w="168"/><text x="63.5513%" y="446.50">_wrapped_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (167 samples, 6.69%)</title><rect x="63.3413%" y="452" width="6.6907%" height="15" fill="rgb(251,219,26)" fg:x="1581" fg:w="167"/><text x="63.5913%" y="462.50">_call_imp..</text></g><g><title>forward (vllm/model_executor/models/opt.py:108) (45 samples, 1.80%)</title><rect x="68.2292%" y="468" width="1.8029%" height="15" fill="rgb(231,119,3)" fg:x="1703" fg:w="45"/><text x="68.4792%" y="478.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (37 samples, 1.48%)</title><rect x="68.5497%" y="484" width="1.4824%" height="15" fill="rgb(216,97,11)" fg:x="1711" fg:w="37"/><text x="68.7997%" y="494.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (35 samples, 1.40%)</title><rect x="68.6298%" y="500" width="1.4022%" height="15" fill="rgb(223,59,9)" fg:x="1713" fg:w="35"/><text x="68.8798%" y="510.50"></text></g><g><title>forward (vllm/model_executor/layers/linear.py:580) (10 samples, 0.40%)</title><rect x="69.6314%" y="516" width="0.4006%" height="15" fill="rgb(233,93,31)" fg:x="1738" fg:w="10"/><text x="69.8814%" y="526.50"></text></g><g><title>torch::autograd::TypeError_to_NotImplemented_&lt;&amp;torch::autograd::THPVariable_add(_object*, _object*, _object*)&gt; (libtorch_python.so) (9 samples, 0.36%)</title><rect x="69.6715%" y="532" width="0.3606%" height="15" fill="rgb(239,81,33)" fg:x="1739" fg:w="9"/><text x="69.9215%" y="542.50"></text></g><g><title>torch::autograd::THPVariable_add (libtorch_python.so) (9 samples, 0.36%)</title><rect x="69.6715%" y="548" width="0.3606%" height="15" fill="rgb(213,120,34)" fg:x="1739" fg:w="9"/><text x="69.9215%" y="558.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:166) (6 samples, 0.24%)</title><rect x="70.0321%" y="420" width="0.2404%" height="15" fill="rgb(243,49,53)" fg:x="1748" fg:w="6"/><text x="70.2821%" y="430.50"></text></g><g><title>torch::autograd::TypeError_to_NotImplemented_&lt;&amp;torch::autograd::THPVariable_add(_object*, _object*, _object*)&gt; (libtorch_python.so) (4 samples, 0.16%)</title><rect x="70.1122%" y="436" width="0.1603%" height="15" fill="rgb(247,216,33)" fg:x="1750" fg:w="4"/><text x="70.3622%" y="446.50"></text></g><g><title>torch::autograd::THPVariable_add (libtorch_python.so) (4 samples, 0.16%)</title><rect x="70.1122%" y="452" width="0.1603%" height="15" fill="rgb(226,26,14)" fg:x="1750" fg:w="4"/><text x="70.3622%" y="462.50"></text></g><g><title>at::_ops::add_Tensor::call (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="70.1122%" y="468" width="0.1603%" height="15" fill="rgb(215,49,53)" fg:x="1750" fg:w="4"/><text x="70.3622%" y="478.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CUDA_add_Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cuda.so) (4 samples, 0.16%)</title><rect x="70.1122%" y="484" width="0.1603%" height="15" fill="rgb(245,162,40)" fg:x="1750" fg:w="4"/><text x="70.3622%" y="494.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CUDA_add_Tensor (libtorch_cuda.so) (4 samples, 0.16%)</title><rect x="70.1122%" y="500" width="0.1603%" height="15" fill="rgb(229,68,17)" fg:x="1750" fg:w="4"/><text x="70.3622%" y="510.50"></text></g><g><title>at::native::(anonymous namespace)::LayerNormKernelImpl (libtorch_cuda.so) (4 samples, 0.16%)</title><rect x="70.6731%" y="628" width="0.1603%" height="15" fill="rgb(213,182,10)" fg:x="1764" fg:w="4"/><text x="70.9231%" y="638.50"></text></g><g><title>at::native::(anonymous namespace)::LayerNormKernelImplInternal&lt;c10::Half, float&gt; (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="70.7131%" y="644" width="0.1202%" height="15" fill="rgb(245,125,30)" fg:x="1765" fg:w="3"/><text x="70.9631%" y="654.50"></text></g><g><title>at::native::empty_like (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="70.8333%" y="628" width="0.1202%" height="15" fill="rgb(232,202,2)" fg:x="1768" fg:w="3"/><text x="71.0833%" y="638.50"></text></g><g><title>at::native::layer_norm_cuda (libtorch_cuda.so) (10 samples, 0.40%)</title><rect x="70.5929%" y="612" width="0.4006%" height="15" fill="rgb(237,140,51)" fg:x="1762" fg:w="10"/><text x="70.8429%" y="622.50"></text></g><g><title>at::_ops::native_layer_norm::call (libtorch_cpu.so) (11 samples, 0.44%)</title><rect x="70.5929%" y="564" width="0.4407%" height="15" fill="rgb(236,157,25)" fg:x="1762" fg:w="11"/><text x="70.8429%" y="574.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CUDA__native_layer_norm(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, double)&gt;::call (libtorch_cuda.so) (11 samples, 0.44%)</title><rect x="70.5929%" y="580" width="0.4407%" height="15" fill="rgb(219,209,0)" fg:x="1762" fg:w="11"/><text x="70.8429%" y="590.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CUDA__native_layer_norm (libtorch_cuda.so) (11 samples, 0.44%)</title><rect x="70.5929%" y="596" width="0.4407%" height="15" fill="rgb(240,116,54)" fg:x="1762" fg:w="11"/><text x="70.8429%" y="606.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:196) (15 samples, 0.60%)</title><rect x="70.4728%" y="468" width="0.6010%" height="15" fill="rgb(216,10,36)" fg:x="1759" fg:w="15"/><text x="70.7228%" y="478.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2543) (15 samples, 0.60%)</title><rect x="70.4728%" y="484" width="0.6010%" height="15" fill="rgb(222,72,44)" fg:x="1759" fg:w="15"/><text x="70.7228%" y="494.50"></text></g><g><title>torch::autograd::THPVariable_layer_norm (libtorch_python.so) (13 samples, 0.52%)</title><rect x="70.5529%" y="500" width="0.5208%" height="15" fill="rgb(232,159,9)" fg:x="1761" fg:w="13"/><text x="70.8029%" y="510.50"></text></g><g><title>at::_ops::layer_norm::call (libtorch_cpu.so) (12 samples, 0.48%)</title><rect x="70.5929%" y="516" width="0.4808%" height="15" fill="rgb(210,39,32)" fg:x="1762" fg:w="12"/><text x="70.8429%" y="526.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__layer_norm(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, double, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, double, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, double, bool)&gt;::call (libtorch_cpu.so) (12 samples, 0.48%)</title><rect x="70.5929%" y="532" width="0.4808%" height="15" fill="rgb(216,194,45)" fg:x="1762" fg:w="12"/><text x="70.8429%" y="542.50"></text></g><g><title>at::native::layer_norm_symint (libtorch_cpu.so) (12 samples, 0.48%)</title><rect x="70.5929%" y="548" width="0.4808%" height="15" fill="rgb(218,18,35)" fg:x="1762" fg:w="12"/><text x="70.8429%" y="558.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:175) (22 samples, 0.88%)</title><rect x="70.3526%" y="420" width="0.8814%" height="15" fill="rgb(207,83,51)" fg:x="1756" fg:w="22"/><text x="70.6026%" y="430.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (21 samples, 0.84%)</title><rect x="70.3926%" y="436" width="0.8413%" height="15" fill="rgb(225,63,43)" fg:x="1757" fg:w="21"/><text x="70.6426%" y="446.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (19 samples, 0.76%)</title><rect x="70.4728%" y="452" width="0.7612%" height="15" fill="rgb(207,57,36)" fg:x="1759" fg:w="19"/><text x="70.7228%" y="462.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:197) (4 samples, 0.16%)</title><rect x="71.0737%" y="468" width="0.1603%" height="15" fill="rgb(216,99,33)" fg:x="1774" fg:w="4"/><text x="71.3237%" y="478.50"></text></g><g><title>0x7f9b2e62d675 (nvidia/cublas/lib/libcublasLt.so.12) (3 samples, 0.12%)</title><rect x="71.5946%" y="660" width="0.1202%" height="15" fill="rgb(225,42,16)" fg:x="1787" fg:w="3"/><text x="71.8446%" y="670.50"></text></g><g><title>cublasLtMatmul (nvidia/cublas/lib/libcublasLt.so.12) (9 samples, 0.36%)</title><rect x="71.5545%" y="644" width="0.3606%" height="15" fill="rgb(220,201,45)" fg:x="1786" fg:w="9"/><text x="71.8045%" y="654.50"></text></g><g><title>0x7f9b2e62d6a8 (nvidia/cublas/lib/libcublasLt.so.12) (5 samples, 0.20%)</title><rect x="71.7147%" y="660" width="0.2003%" height="15" fill="rgb(225,33,4)" fg:x="1790" fg:w="5"/><text x="71.9647%" y="670.50"></text></g><g><title>0x7f9b2ef16a53 (nvidia/cublas/lib/libcublasLt.so.12) (3 samples, 0.12%)</title><rect x="71.7949%" y="676" width="0.1202%" height="15" fill="rgb(224,33,50)" fg:x="1792" fg:w="3"/><text x="72.0449%" y="686.50"></text></g><g><title>at::_ops::addmm::call (libtorch_cpu.so) (17 samples, 0.68%)</title><rect x="71.4744%" y="564" width="0.6811%" height="15" fill="rgb(246,198,51)" fg:x="1784" fg:w="17"/><text x="71.7244%" y="574.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CUDA_addmm(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cuda.so) (17 samples, 0.68%)</title><rect x="71.4744%" y="580" width="0.6811%" height="15" fill="rgb(205,22,4)" fg:x="1784" fg:w="17"/><text x="71.7244%" y="590.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CUDA_addmm (libtorch_cuda.so) (17 samples, 0.68%)</title><rect x="71.4744%" y="596" width="0.6811%" height="15" fill="rgb(206,3,8)" fg:x="1784" fg:w="17"/><text x="71.7244%" y="606.50"></text></g><g><title>at::native::(anonymous namespace)::addmm_out_cuda_impl (libtorch_cuda.so) (15 samples, 0.60%)</title><rect x="71.5545%" y="612" width="0.6010%" height="15" fill="rgb(251,23,15)" fg:x="1786" fg:w="15"/><text x="71.8045%" y="622.50"></text></g><g><title>at::cuda::blas::gemm_and_bias&lt;c10::Half&gt; (libtorch_cuda.so) (15 samples, 0.60%)</title><rect x="71.5545%" y="628" width="0.6010%" height="15" fill="rgb(252,88,28)" fg:x="1786" fg:w="15"/><text x="71.8045%" y="638.50"></text></g><g><title>at::_ops::linear::call (libtorch_cpu.so) (18 samples, 0.72%)</title><rect x="71.4744%" y="516" width="0.7212%" height="15" fill="rgb(212,127,14)" fg:x="1784" fg:w="18"/><text x="71.7244%" y="526.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__linear(at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;)&gt;::call (libtorch_cpu.so) (18 samples, 0.72%)</title><rect x="71.4744%" y="532" width="0.7212%" height="15" fill="rgb(247,145,37)" fg:x="1784" fg:w="18"/><text x="71.7244%" y="542.50"></text></g><g><title>at::native::linear (libtorch_cpu.so) (18 samples, 0.72%)</title><rect x="71.4744%" y="548" width="0.7212%" height="15" fill="rgb(209,117,53)" fg:x="1784" fg:w="18"/><text x="71.7244%" y="558.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:176) (25 samples, 1.00%)</title><rect x="71.2340%" y="420" width="1.0016%" height="15" fill="rgb(212,90,42)" fg:x="1778" fg:w="25"/><text x="71.4840%" y="430.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (22 samples, 0.88%)</title><rect x="71.3542%" y="436" width="0.8814%" height="15" fill="rgb(218,164,37)" fg:x="1781" fg:w="22"/><text x="71.6042%" y="446.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (21 samples, 0.84%)</title><rect x="71.3942%" y="452" width="0.8413%" height="15" fill="rgb(246,65,34)" fg:x="1782" fg:w="21"/><text x="71.6442%" y="462.50"></text></g><g><title>forward (vllm/model_executor/layers/linear.py:215) (20 samples, 0.80%)</title><rect x="71.4343%" y="468" width="0.8013%" height="15" fill="rgb(231,100,33)" fg:x="1783" fg:w="20"/><text x="71.6843%" y="478.50"></text></g><g><title>apply_weights (vllm/model_executor/layers/linear.py:79) (19 samples, 0.76%)</title><rect x="71.4744%" y="484" width="0.7612%" height="15" fill="rgb(228,126,14)" fg:x="1784" fg:w="19"/><text x="71.7244%" y="494.50"></text></g><g><title>torch::autograd::THPVariable_linear (libtorch_python.so) (19 samples, 0.76%)</title><rect x="71.4744%" y="500" width="0.7612%" height="15" fill="rgb(215,173,21)" fg:x="1784" fg:w="19"/><text x="71.7244%" y="510.50"></text></g><g><title>at::_ops::relu::call (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="72.3558%" y="516" width="0.2003%" height="15" fill="rgb(210,6,40)" fg:x="1806" fg:w="5"/><text x="72.6058%" y="526.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CUDA__relu(at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;)&gt;::call (libtorch_cuda.so) (5 samples, 0.20%)</title><rect x="72.3558%" y="532" width="0.2003%" height="15" fill="rgb(212,48,18)" fg:x="1806" fg:w="5"/><text x="72.6058%" y="542.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CUDA__relu (libtorch_cuda.so) (5 samples, 0.20%)</title><rect x="72.3558%" y="548" width="0.2003%" height="15" fill="rgb(230,214,11)" fg:x="1806" fg:w="5"/><text x="72.6058%" y="558.50"></text></g><g><title>at::native::relu (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="72.3558%" y="564" width="0.2003%" height="15" fill="rgb(254,105,39)" fg:x="1806" fg:w="5"/><text x="72.6058%" y="574.50"></text></g><g><title>at::_ops::clamp_min::call (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="72.3558%" y="580" width="0.2003%" height="15" fill="rgb(245,158,5)" fg:x="1806" fg:w="5"/><text x="72.6058%" y="590.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CUDA_clamp_min(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cuda.so) (4 samples, 0.16%)</title><rect x="72.3958%" y="596" width="0.1603%" height="15" fill="rgb(249,208,11)" fg:x="1807" fg:w="4"/><text x="72.6458%" y="606.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CUDA_clamp_min (libtorch_cuda.so) (4 samples, 0.16%)</title><rect x="72.3958%" y="612" width="0.1603%" height="15" fill="rgb(210,39,28)" fg:x="1807" fg:w="4"/><text x="72.6458%" y="622.50"></text></g><g><title>at::native::structured_clamp_min_out::impl (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="72.4359%" y="628" width="0.1202%" height="15" fill="rgb(211,56,53)" fg:x="1808" fg:w="3"/><text x="72.6859%" y="638.50"></text></g><g><title>at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="72.4359%" y="644" width="0.1202%" height="15" fill="rgb(226,201,30)" fg:x="1808" fg:w="3"/><text x="72.6859%" y="654.50"></text></g><g><title>at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&amp;, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits)::{lambda()#1}::operator() const (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="72.4359%" y="660" width="0.1202%" height="15" fill="rgb(239,101,34)" fg:x="1808" fg:w="3"/><text x="72.6859%" y="670.50"></text></g><g><title>at::native::gpu_kernel&lt;__nv_hdl_wrapper_t&lt;false, false, false, __nv_dl_tag&lt;void (*)(at::TensorIteratorBase&amp;, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits), &amp;at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&amp;, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits), (unsigned int)8&gt;, c10::Half(c10::Half), at::native::detail::ClampLimits, float, float&gt; &gt; (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="72.4359%" y="676" width="0.1202%" height="15" fill="rgb(226,209,5)" fg:x="1808" fg:w="3"/><text x="72.6859%" y="686.50"></text></g><g><title>at::native::gpu_kernel_impl&lt;__nv_hdl_wrapper_t&lt;false, false, false, __nv_dl_tag&lt;void (*)(at::TensorIteratorBase&amp;, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits), &amp;at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&amp;, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits), (unsigned int)8&gt;, c10::Half(c10::Half), at::native::detail::ClampLimits, float, float&gt; &gt; (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="72.4359%" y="692" width="0.1202%" height="15" fill="rgb(250,105,47)" fg:x="1808" fg:w="3"/><text x="72.6859%" y="702.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:177) (9 samples, 0.36%)</title><rect x="72.2356%" y="420" width="0.3606%" height="15" fill="rgb(230,72,3)" fg:x="1803" fg:w="9"/><text x="72.4856%" y="430.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (6 samples, 0.24%)</title><rect x="72.3558%" y="436" width="0.2404%" height="15" fill="rgb(232,218,39)" fg:x="1806" fg:w="6"/><text x="72.6058%" y="446.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (6 samples, 0.24%)</title><rect x="72.3558%" y="452" width="0.2404%" height="15" fill="rgb(248,166,6)" fg:x="1806" fg:w="6"/><text x="72.6058%" y="462.50"></text></g><g><title>forward (torch/nn/modules/activation.py:101) (6 samples, 0.24%)</title><rect x="72.3558%" y="468" width="0.2404%" height="15" fill="rgb(247,89,20)" fg:x="1806" fg:w="6"/><text x="72.6058%" y="478.50"></text></g><g><title>relu (torch/nn/functional.py:1471) (6 samples, 0.24%)</title><rect x="72.3558%" y="484" width="0.2404%" height="15" fill="rgb(248,130,54)" fg:x="1806" fg:w="6"/><text x="72.6058%" y="494.50"></text></g><g><title>torch::autograd::THPVariable_relu (libtorch_python.so) (6 samples, 0.24%)</title><rect x="72.3558%" y="500" width="0.2404%" height="15" fill="rgb(234,196,4)" fg:x="1806" fg:w="6"/><text x="72.6058%" y="510.50"></text></g><g><title>0x7f9b2e62d675 (nvidia/cublas/lib/libcublasLt.so.12) (4 samples, 0.16%)</title><rect x="73.1170%" y="836" width="0.1603%" height="15" fill="rgb(250,143,31)" fg:x="1825" fg:w="4"/><text x="73.3670%" y="846.50"></text></g><g><title>0x7f9b2ec221e3 (nvidia/cublas/lib/libcublasLt.so.12) (3 samples, 0.12%)</title><rect x="73.3173%" y="852" width="0.1202%" height="15" fill="rgb(211,110,34)" fg:x="1830" fg:w="3"/><text x="73.5673%" y="862.50"></text></g><g><title>0x7f9b2eb9bbf2 (nvidia/cublas/lib/libcublasLt.so.12) (3 samples, 0.12%)</title><rect x="73.3173%" y="868" width="0.1202%" height="15" fill="rgb(215,124,48)" fg:x="1830" fg:w="3"/><text x="73.5673%" y="878.50"></text></g><g><title>0x7f9b2ef16a53 (nvidia/cublas/lib/libcublasLt.so.12) (3 samples, 0.12%)</title><rect x="73.4375%" y="852" width="0.1202%" height="15" fill="rgb(216,46,13)" fg:x="1833" fg:w="3"/><text x="73.6875%" y="862.50"></text></g><g><title>0x7f9b506a9ba6 (nvidia/cublas/lib/libcublas.so.12) (17 samples, 0.68%)</title><rect x="73.0369%" y="804" width="0.6811%" height="15" fill="rgb(205,184,25)" fg:x="1823" fg:w="17"/><text x="73.2869%" y="814.50"></text></g><g><title>cublasLtHSHMatmul (nvidia/cublas/lib/libcublasLt.so.12) (17 samples, 0.68%)</title><rect x="73.0369%" y="820" width="0.6811%" height="15" fill="rgb(228,1,10)" fg:x="1823" fg:w="17"/><text x="73.2869%" y="830.50"></text></g><g><title>0x7f9b2e62d6a8 (nvidia/cublas/lib/libcublasLt.so.12) (11 samples, 0.44%)</title><rect x="73.2772%" y="836" width="0.4407%" height="15" fill="rgb(213,116,27)" fg:x="1829" fg:w="11"/><text x="73.5272%" y="846.50"></text></g><g><title>at::_ops::matmul::call (libtorch_cpu.so) (21 samples, 0.84%)</title><rect x="72.9567%" y="564" width="0.8413%" height="15" fill="rgb(241,95,50)" fg:x="1821" fg:w="21"/><text x="73.2067%" y="574.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__matmul(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (21 samples, 0.84%)</title><rect x="72.9567%" y="580" width="0.8413%" height="15" fill="rgb(238,48,32)" fg:x="1821" fg:w="21"/><text x="73.2067%" y="590.50"></text></g><g><title>at::native::matmul (libtorch_cpu.so) (21 samples, 0.84%)</title><rect x="72.9567%" y="596" width="0.8413%" height="15" fill="rgb(235,113,49)" fg:x="1821" fg:w="21"/><text x="73.2067%" y="606.50"></text></g><g><title>at::native::_matmul_impl (libtorch_cpu.so) (21 samples, 0.84%)</title><rect x="72.9567%" y="612" width="0.8413%" height="15" fill="rgb(205,127,43)" fg:x="1821" fg:w="21"/><text x="73.2067%" y="622.50"></text></g><g><title>at::_ops::mm::call (libtorch_cpu.so) (21 samples, 0.84%)</title><rect x="72.9567%" y="628" width="0.8413%" height="15" fill="rgb(250,162,2)" fg:x="1821" fg:w="21"/><text x="73.2067%" y="638.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CUDA_mm(at::Tensor const&amp;, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cuda.so) (21 samples, 0.84%)</title><rect x="72.9567%" y="644" width="0.8413%" height="15" fill="rgb(220,13,41)" fg:x="1821" fg:w="21"/><text x="73.2067%" y="654.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CUDA_mm (libtorch_cuda.so) (21 samples, 0.84%)</title><rect x="72.9567%" y="660" width="0.8413%" height="15" fill="rgb(249,221,25)" fg:x="1821" fg:w="21"/><text x="73.2067%" y="670.50"></text></g><g><title>at::native::structured_mm_out_cuda::impl (libtorch_cuda.so) (20 samples, 0.80%)</title><rect x="72.9968%" y="676" width="0.8013%" height="15" fill="rgb(215,208,19)" fg:x="1822" fg:w="20"/><text x="73.2468%" y="686.50"></text></g><g><title>at::native::(anonymous namespace)::addmm_out_cuda_impl (libtorch_cuda.so) (20 samples, 0.80%)</title><rect x="72.9968%" y="692" width="0.8013%" height="15" fill="rgb(236,175,2)" fg:x="1822" fg:w="20"/><text x="73.2468%" y="702.50"></text></g><g><title>at::cuda::blas::gemm&lt;c10::Half&gt; (libtorch_cuda.so) (20 samples, 0.80%)</title><rect x="72.9968%" y="708" width="0.8013%" height="15" fill="rgb(241,52,2)" fg:x="1822" fg:w="20"/><text x="73.2468%" y="718.50"></text></g><g><title>cublasGemmEx (nvidia/cublas/lib/libcublas.so.12) (19 samples, 0.76%)</title><rect x="73.0369%" y="724" width="0.7612%" height="15" fill="rgb(248,140,14)" fg:x="1823" fg:w="19"/><text x="73.2869%" y="734.50"></text></g><g><title>0x7f9b509143d8 (nvidia/cublas/lib/libcublas.so.12) (19 samples, 0.76%)</title><rect x="73.0369%" y="740" width="0.7612%" height="15" fill="rgb(253,22,42)" fg:x="1823" fg:w="19"/><text x="73.2869%" y="750.50"></text></g><g><title>0x7f9b50913ecf (nvidia/cublas/lib/libcublas.so.12) (19 samples, 0.76%)</title><rect x="73.0369%" y="756" width="0.7612%" height="15" fill="rgb(234,61,47)" fg:x="1823" fg:w="19"/><text x="73.2869%" y="766.50"></text></g><g><title>0x7f9b5068f2ef (nvidia/cublas/lib/libcublas.so.12) (19 samples, 0.76%)</title><rect x="73.0369%" y="772" width="0.7612%" height="15" fill="rgb(208,226,15)" fg:x="1823" fg:w="19"/><text x="73.2869%" y="782.50"></text></g><g><title>0x7f9b506ac122 (nvidia/cublas/lib/libcublas.so.12) (19 samples, 0.76%)</title><rect x="73.0369%" y="788" width="0.7612%" height="15" fill="rgb(217,221,4)" fg:x="1823" fg:w="19"/><text x="73.2869%" y="798.50"></text></g><g><title>at::_ops::linear::call (libtorch_cpu.so) (23 samples, 0.92%)</title><rect x="72.9167%" y="516" width="0.9215%" height="15" fill="rgb(212,174,34)" fg:x="1820" fg:w="23"/><text x="73.1667%" y="526.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__linear(at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;)&gt;::call (libtorch_cpu.so) (22 samples, 0.88%)</title><rect x="72.9567%" y="532" width="0.8814%" height="15" fill="rgb(253,83,4)" fg:x="1821" fg:w="22"/><text x="73.2067%" y="542.50"></text></g><g><title>at::native::linear (libtorch_cpu.so) (22 samples, 0.88%)</title><rect x="72.9567%" y="548" width="0.8814%" height="15" fill="rgb(250,195,49)" fg:x="1821" fg:w="22"/><text x="73.2067%" y="558.50"></text></g><g><title>forward (vllm/model_executor/layers/linear.py:572) (26 samples, 1.04%)</title><rect x="72.8365%" y="468" width="1.0417%" height="15" fill="rgb(241,192,25)" fg:x="1818" fg:w="26"/><text x="73.0865%" y="478.50"></text></g><g><title>apply_weights (vllm/model_executor/layers/linear.py:79) (24 samples, 0.96%)</title><rect x="72.9167%" y="484" width="0.9615%" height="15" fill="rgb(208,124,10)" fg:x="1820" fg:w="24"/><text x="73.1667%" y="494.50"></text></g><g><title>torch::autograd::THPVariable_linear (libtorch_python.so) (24 samples, 0.96%)</title><rect x="72.9167%" y="500" width="0.9615%" height="15" fill="rgb(222,33,0)" fg:x="1820" fg:w="24"/><text x="73.1667%" y="510.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:178) (44 samples, 1.76%)</title><rect x="72.5962%" y="420" width="1.7628%" height="15" fill="rgb(234,209,28)" fg:x="1812" fg:w="44"/><text x="72.8462%" y="430.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (43 samples, 1.72%)</title><rect x="72.6362%" y="436" width="1.7228%" height="15" fill="rgb(224,11,23)" fg:x="1813" fg:w="43"/><text x="72.8862%" y="446.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (42 samples, 1.68%)</title><rect x="72.6763%" y="452" width="1.6827%" height="15" fill="rgb(232,99,1)" fg:x="1814" fg:w="42"/><text x="72.9263%" y="462.50"></text></g><g><title>forward (vllm/model_executor/layers/linear.py:580) (11 samples, 0.44%)</title><rect x="73.9183%" y="468" width="0.4407%" height="15" fill="rgb(237,95,45)" fg:x="1845" fg:w="11"/><text x="74.1683%" y="478.50"></text></g><g><title>torch::autograd::TypeError_to_NotImplemented_&lt;&amp;torch::autograd::THPVariable_add(_object*, _object*, _object*)&gt; (libtorch_python.so) (11 samples, 0.44%)</title><rect x="73.9183%" y="484" width="0.4407%" height="15" fill="rgb(208,109,11)" fg:x="1845" fg:w="11"/><text x="74.1683%" y="494.50"></text></g><g><title>torch::autograd::THPVariable_add (libtorch_python.so) (11 samples, 0.44%)</title><rect x="73.9183%" y="500" width="0.4407%" height="15" fill="rgb(216,190,48)" fg:x="1845" fg:w="11"/><text x="74.1683%" y="510.50"></text></g><g><title>at::_ops::add_Tensor::call (libtorch_cpu.so) (11 samples, 0.44%)</title><rect x="73.9183%" y="516" width="0.4407%" height="15" fill="rgb(251,171,36)" fg:x="1845" fg:w="11"/><text x="74.1683%" y="526.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CUDA_add_Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cuda.so) (11 samples, 0.44%)</title><rect x="73.9183%" y="532" width="0.4407%" height="15" fill="rgb(230,62,22)" fg:x="1845" fg:w="11"/><text x="74.1683%" y="542.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CUDA_add_Tensor (libtorch_cuda.so) (11 samples, 0.44%)</title><rect x="73.9183%" y="548" width="0.4407%" height="15" fill="rgb(225,114,35)" fg:x="1845" fg:w="11"/><text x="74.1683%" y="558.50"></text></g><g><title>at::native::add_kernel (libtorch_cuda.so) (10 samples, 0.40%)</title><rect x="73.9583%" y="564" width="0.4006%" height="15" fill="rgb(215,118,42)" fg:x="1846" fg:w="10"/><text x="74.2083%" y="574.50"></text></g><g><title>at::native::add_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator() const (libtorch_cuda.so) (10 samples, 0.40%)</title><rect x="73.9583%" y="580" width="0.4006%" height="15" fill="rgb(243,119,21)" fg:x="1846" fg:w="10"/><text x="74.2083%" y="590.50"></text></g><g><title>at::native::gpu_kernel&lt;at::native::CUDAFunctor_add&lt;c10::Half&gt; &gt; (libtorch_cuda.so) (10 samples, 0.40%)</title><rect x="73.9583%" y="596" width="0.4006%" height="15" fill="rgb(252,177,53)" fg:x="1846" fg:w="10"/><text x="74.2083%" y="606.50"></text></g><g><title>at::native::gpu_kernel_impl&lt;at::native::CUDAFunctor_add&lt;c10::Half&gt; &gt; (libtorch_cuda.so) (10 samples, 0.40%)</title><rect x="73.9583%" y="612" width="0.4006%" height="15" fill="rgb(237,209,29)" fg:x="1846" fg:w="10"/><text x="74.2083%" y="622.50"></text></g><g><title>cudaLaunchKernel (nvidia/cuda_runtime/lib/libcudart.so.12) (5 samples, 0.20%)</title><rect x="74.1587%" y="628" width="0.2003%" height="15" fill="rgb(212,65,23)" fg:x="1851" fg:w="5"/><text x="74.4087%" y="638.50"></text></g><g><title>0x7f9b2dbef98c (nvidia/cuda_runtime/lib/libcudart.so.12) (3 samples, 0.12%)</title><rect x="74.2388%" y="644" width="0.1202%" height="15" fill="rgb(230,222,46)" fg:x="1853" fg:w="3"/><text x="74.4888%" y="654.50"></text></g><g><title>0x7f9b2bc4a3e0 (libcuda.so.545.23.08) (3 samples, 0.12%)</title><rect x="74.2388%" y="660" width="0.1202%" height="15" fill="rgb(215,135,32)" fg:x="1853" fg:w="3"/><text x="74.4888%" y="670.50"></text></g><g><title>0x7f9b2ba48dcc (libcuda.so.545.23.08) (3 samples, 0.12%)</title><rect x="74.2388%" y="676" width="0.1202%" height="15" fill="rgb(246,101,22)" fg:x="1853" fg:w="3"/><text x="74.4888%" y="686.50"></text></g><g><title>0x7f9b2ba46230 (libcuda.so.545.23.08) (3 samples, 0.12%)</title><rect x="74.2388%" y="692" width="0.1202%" height="15" fill="rgb(206,107,13)" fg:x="1853" fg:w="3"/><text x="74.4888%" y="702.50"></text></g><g><title>0x7f9b2ba45a26 (libcuda.so.545.23.08) (3 samples, 0.12%)</title><rect x="74.2388%" y="708" width="0.1202%" height="15" fill="rgb(250,100,44)" fg:x="1853" fg:w="3"/><text x="74.4888%" y="718.50"></text></g><g><title>forward (vllm/model_executor/models/opt.py:255) (303 samples, 12.14%)</title><rect x="62.4599%" y="372" width="12.1394%" height="15" fill="rgb(231,147,38)" fg:x="1559" fg:w="303"/><text x="62.7099%" y="382.50">forward (vllm/mode..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (303 samples, 12.14%)</title><rect x="62.4599%" y="388" width="12.1394%" height="15" fill="rgb(229,8,40)" fg:x="1559" fg:w="303"/><text x="62.7099%" y="398.50">_wrapped_call_impl..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (302 samples, 12.10%)</title><rect x="62.5000%" y="404" width="12.0994%" height="15" fill="rgb(221,135,30)" fg:x="1560" fg:w="302"/><text x="62.7500%" y="414.50">_call_impl (torch/..</text></g><g><title>forward (vllm/model_executor/models/opt.py:179) (6 samples, 0.24%)</title><rect x="74.3590%" y="420" width="0.2404%" height="15" fill="rgb(249,193,18)" fg:x="1856" fg:w="6"/><text x="74.6090%" y="430.50"></text></g><g><title>torch::autograd::TypeError_to_NotImplemented_&lt;&amp;torch::autograd::THPVariable_add(_object*, _object*, _object*)&gt; (libtorch_python.so) (3 samples, 0.12%)</title><rect x="74.4792%" y="436" width="0.1202%" height="15" fill="rgb(209,133,39)" fg:x="1859" fg:w="3"/><text x="74.7292%" y="446.50"></text></g><g><title>torch::autograd::THPVariable_add (libtorch_python.so) (3 samples, 0.12%)</title><rect x="74.4792%" y="452" width="0.1202%" height="15" fill="rgb(232,100,14)" fg:x="1859" fg:w="3"/><text x="74.7292%" y="462.50"></text></g><g><title>execute_model (vllm/worker/model_runner.py:606) (316 samples, 12.66%)</title><rect x="62.0994%" y="228" width="12.6603%" height="15" fill="rgb(224,185,1)" fg:x="1550" fg:w="316"/><text x="62.3494%" y="238.50">execute_model (vllm..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (316 samples, 12.66%)</title><rect x="62.0994%" y="244" width="12.6603%" height="15" fill="rgb(223,139,8)" fg:x="1550" fg:w="316"/><text x="62.3494%" y="254.50">_wrapped_call_impl ..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (315 samples, 12.62%)</title><rect x="62.1394%" y="260" width="12.6202%" height="15" fill="rgb(232,213,38)" fg:x="1551" fg:w="315"/><text x="62.3894%" y="270.50">_call_impl (torch/n..</text></g><g><title>forward (vllm/model_executor/models/opt.py:306) (315 samples, 12.62%)</title><rect x="62.1394%" y="276" width="12.6202%" height="15" fill="rgb(207,94,22)" fg:x="1551" fg:w="315"/><text x="62.3894%" y="286.50">forward (vllm/model..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (313 samples, 12.54%)</title><rect x="62.2196%" y="292" width="12.5401%" height="15" fill="rgb(219,183,54)" fg:x="1553" fg:w="313"/><text x="62.4696%" y="302.50">_wrapped_call_impl ..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (313 samples, 12.54%)</title><rect x="62.2196%" y="308" width="12.5401%" height="15" fill="rgb(216,185,54)" fg:x="1553" fg:w="313"/><text x="62.4696%" y="318.50">_call_impl (torch/n..</text></g><g><title>forward (vllm/model_executor/models/opt.py:281) (313 samples, 12.54%)</title><rect x="62.2196%" y="324" width="12.5401%" height="15" fill="rgb(254,217,39)" fg:x="1553" fg:w="313"/><text x="62.4696%" y="334.50">forward (vllm/model..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (313 samples, 12.54%)</title><rect x="62.2196%" y="340" width="12.5401%" height="15" fill="rgb(240,178,23)" fg:x="1553" fg:w="313"/><text x="62.4696%" y="350.50">_wrapped_call_impl ..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (313 samples, 12.54%)</title><rect x="62.2196%" y="356" width="12.5401%" height="15" fill="rgb(218,11,47)" fg:x="1553" fg:w="313"/><text x="62.4696%" y="366.50">_call_impl (torch/n..</text></g><g><title>forward (vllm/model_executor/models/opt.py:258) (3 samples, 0.12%)</title><rect x="74.6394%" y="372" width="0.1202%" height="15" fill="rgb(218,51,51)" fg:x="1863" fg:w="3"/><text x="74.8894%" y="382.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (3 samples, 0.12%)</title><rect x="74.6394%" y="388" width="0.1202%" height="15" fill="rgb(238,126,27)" fg:x="1863" fg:w="3"/><text x="74.8894%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (3 samples, 0.12%)</title><rect x="74.6394%" y="404" width="0.1202%" height="15" fill="rgb(249,202,22)" fg:x="1863" fg:w="3"/><text x="74.8894%" y="414.50"></text></g><g><title>execute_model (vllm/worker/model_runner.py:614) (5 samples, 0.20%)</title><rect x="74.7596%" y="228" width="0.2003%" height="15" fill="rgb(254,195,49)" fg:x="1866" fg:w="5"/><text x="75.0096%" y="238.50"></text></g><g><title>compute_logits (vllm/model_executor/models/opt.py:312) (5 samples, 0.20%)</title><rect x="74.7596%" y="244" width="0.2003%" height="15" fill="rgb(208,123,14)" fg:x="1866" fg:w="5"/><text x="75.0096%" y="254.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (5 samples, 0.20%)</title><rect x="74.7596%" y="260" width="0.2003%" height="15" fill="rgb(224,200,8)" fg:x="1866" fg:w="5"/><text x="75.0096%" y="270.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (5 samples, 0.20%)</title><rect x="74.7596%" y="276" width="0.2003%" height="15" fill="rgb(217,61,36)" fg:x="1866" fg:w="5"/><text x="75.0096%" y="286.50"></text></g><g><title>THPVariable_subclass_dealloc (libtorch_python.so) (4 samples, 0.16%)</title><rect x="75.7612%" y="324" width="0.1603%" height="15" fill="rgb(206,35,45)" fg:x="1891" fg:w="4"/><text x="76.0112%" y="334.50"></text></g><g><title>THPVariable_clear (libtorch_python.so) (3 samples, 0.12%)</title><rect x="75.8013%" y="340" width="0.1202%" height="15" fill="rgb(217,65,33)" fg:x="1892" fg:w="3"/><text x="76.0513%" y="350.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (3 samples, 0.12%)</title><rect x="75.8013%" y="356" width="0.1202%" height="15" fill="rgb(222,158,48)" fg:x="1892" fg:w="3"/><text x="76.0513%" y="366.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (3 samples, 0.12%)</title><rect x="75.8013%" y="372" width="0.1202%" height="15" fill="rgb(254,2,54)" fg:x="1892" fg:w="3"/><text x="76.0513%" y="382.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::reset_ (libc10.so) (3 samples, 0.12%)</title><rect x="75.8013%" y="388" width="0.1202%" height="15" fill="rgb(250,143,38)" fg:x="1892" fg:w="3"/><text x="76.0513%" y="398.50"></text></g><g><title>c10::StorageImpl::~StorageImpl (libtorch_python.so) (3 samples, 0.12%)</title><rect x="75.8013%" y="404" width="0.1202%" height="15" fill="rgb(248,25,0)" fg:x="1892" fg:w="3"/><text x="76.0513%" y="414.50"></text></g><g><title>at::cuda::(anonymous namespace)::CUDAHostAllocator::free (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="75.8013%" y="420" width="0.1202%" height="15" fill="rgb(206,152,27)" fg:x="1892" fg:w="3"/><text x="76.0513%" y="430.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:218) (6 samples, 0.24%)</title><rect x="75.9215%" y="324" width="0.2404%" height="15" fill="rgb(240,77,30)" fg:x="1895" fg:w="6"/><text x="76.1715%" y="334.50"></text></g><g><title>&lt;listcomp&gt; (vllm/model_executor/sampling_metadata.py:219) (6 samples, 0.24%)</title><rect x="75.9215%" y="340" width="0.2404%" height="15" fill="rgb(231,5,3)" fg:x="1895" fg:w="6"/><text x="76.1715%" y="350.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:223) (5 samples, 0.20%)</title><rect x="76.1619%" y="324" width="0.2003%" height="15" fill="rgb(207,226,32)" fg:x="1901" fg:w="5"/><text x="76.4119%" y="334.50"></text></g><g><title>&lt;listcomp&gt; (vllm/model_executor/sampling_metadata.py:224) (4 samples, 0.16%)</title><rect x="76.2019%" y="340" width="0.1603%" height="15" fill="rgb(222,207,47)" fg:x="1902" fg:w="4"/><text x="76.4519%" y="350.50"></text></g><g><title>at::empty (libtorch_python.so) (3 samples, 0.12%)</title><rect x="76.4824%" y="388" width="0.1202%" height="15" fill="rgb(229,115,45)" fg:x="1909" fg:w="3"/><text x="76.7324%" y="398.50"></text></g><g><title>at::_ops::empty_memory_format::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="76.4824%" y="404" width="0.1202%" height="15" fill="rgb(224,191,6)" fg:x="1909" fg:w="3"/><text x="76.7324%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::empty_memory_format(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="76.4824%" y="420" width="0.1202%" height="15" fill="rgb(230,227,24)" fg:x="1909" fg:w="3"/><text x="76.7324%" y="430.50"></text></g><g><title>at::_ops::empty_memory_format::redispatch (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="76.4824%" y="436" width="0.1202%" height="15" fill="rgb(228,80,19)" fg:x="1909" fg:w="3"/><text x="76.7324%" y="446.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU_memory_format_empty(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="76.4824%" y="452" width="0.1202%" height="15" fill="rgb(247,229,0)" fg:x="1909" fg:w="3"/><text x="76.7324%" y="462.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU_memory_format_empty (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="76.4824%" y="468" width="0.1202%" height="15" fill="rgb(237,194,15)" fg:x="1909" fg:w="3"/><text x="76.7324%" y="478.50"></text></g><g><title>at::native::empty_cpu (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="76.4824%" y="484" width="0.1202%" height="15" fill="rgb(219,203,20)" fg:x="1909" fg:w="3"/><text x="76.7324%" y="494.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="76.4824%" y="500" width="0.1202%" height="15" fill="rgb(234,128,8)" fg:x="1909" fg:w="3"/><text x="76.7324%" y="510.50"></text></g><g><title>at::detail::empty_cpu (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="76.4824%" y="516" width="0.1202%" height="15" fill="rgb(248,202,8)" fg:x="1909" fg:w="3"/><text x="76.7324%" y="526.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:228) (7 samples, 0.28%)</title><rect x="76.3622%" y="324" width="0.2804%" height="15" fill="rgb(206,104,37)" fg:x="1906" fg:w="7"/><text x="76.6122%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_tensor (libtorch_python.so) (6 samples, 0.24%)</title><rect x="76.4022%" y="340" width="0.2404%" height="15" fill="rgb(223,8,27)" fg:x="1907" fg:w="6"/><text x="76.6522%" y="350.50"></text></g><g><title>torch::utils::tensor_ctor (libtorch_python.so) (5 samples, 0.20%)</title><rect x="76.4423%" y="356" width="0.2003%" height="15" fill="rgb(216,217,28)" fg:x="1908" fg:w="5"/><text x="76.6923%" y="366.50"></text></g><g><title>torch::utils::(anonymous namespace)::internal_new_from_data (libtorch_python.so) (5 samples, 0.20%)</title><rect x="76.4423%" y="372" width="0.2003%" height="15" fill="rgb(249,199,1)" fg:x="1908" fg:w="5"/><text x="76.6923%" y="382.50"></text></g><g><title>torch::utils::(anonymous namespace)::recursive_store (libtorch_python.so) (170 samples, 6.81%)</title><rect x="78.8061%" y="420" width="6.8109%" height="15" fill="rgb(240,85,17)" fg:x="1967" fg:w="170"/><text x="79.0561%" y="430.50">torch::ut..</text></g><g><title>torch::utils::store_scalar (libtorch_python.so) (27 samples, 1.08%)</title><rect x="84.5353%" y="436" width="1.0817%" height="15" fill="rgb(206,108,45)" fg:x="2110" fg:w="27"/><text x="84.7853%" y="446.50"></text></g><g><title>THPUtils_unpackLong (libtorch_python.so) (15 samples, 0.60%)</title><rect x="85.0160%" y="452" width="0.6010%" height="15" fill="rgb(245,210,41)" fg:x="2122" fg:w="15"/><text x="85.2660%" y="462.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:276) (220 samples, 8.81%)</title><rect x="76.8830%" y="324" width="8.8141%" height="15" fill="rgb(206,13,37)" fg:x="1919" fg:w="220"/><text x="77.1330%" y="334.50">from_lists (..</text></g><g><title>torch::autograd::THPVariable_tensor (libtorch_python.so) (220 samples, 8.81%)</title><rect x="76.8830%" y="340" width="8.8141%" height="15" fill="rgb(250,61,18)" fg:x="1919" fg:w="220"/><text x="77.1330%" y="350.50">torch::autog..</text></g><g><title>torch::utils::tensor_ctor (libtorch_python.so) (220 samples, 8.81%)</title><rect x="76.8830%" y="356" width="8.8141%" height="15" fill="rgb(235,172,48)" fg:x="1919" fg:w="220"/><text x="77.1330%" y="366.50">torch::utils..</text></g><g><title>torch::utils::(anonymous namespace)::internal_new_from_data (libtorch_python.so) (220 samples, 8.81%)</title><rect x="76.8830%" y="372" width="8.8141%" height="15" fill="rgb(249,201,17)" fg:x="1919" fg:w="220"/><text x="77.1330%" y="382.50">torch::utils..</text></g><g><title>torch::utils::(anonymous namespace)::recursive_store (libtorch_python.so) (218 samples, 8.73%)</title><rect x="76.9631%" y="388" width="8.7340%" height="15" fill="rgb(219,208,6)" fg:x="1921" fg:w="218"/><text x="77.2131%" y="398.50">torch::utils..</text></g><g><title>torch::utils::(anonymous namespace)::recursive_store (libtorch_python.so) (218 samples, 8.73%)</title><rect x="76.9631%" y="404" width="8.7340%" height="15" fill="rgb(248,31,23)" fg:x="1921" fg:w="218"/><text x="77.2131%" y="414.50">torch::utils..</text></g><g><title>torch::utils::(anonymous namespace)::recursive_store (libtorch_python.so) (122 samples, 4.89%)</title><rect x="87.2196%" y="420" width="4.8878%" height="15" fill="rgb(245,15,42)" fg:x="2177" fg:w="122"/><text x="87.4696%" y="430.50">torch:..</text></g><g><title>torch::utils::store_scalar (libtorch_python.so) (16 samples, 0.64%)</title><rect x="91.4663%" y="436" width="0.6410%" height="15" fill="rgb(222,217,39)" fg:x="2283" fg:w="16"/><text x="91.7163%" y="446.50"></text></g><g><title>THPUtils_unpackLong (libtorch_python.so) (11 samples, 0.44%)</title><rect x="91.6667%" y="452" width="0.4407%" height="15" fill="rgb(210,219,27)" fg:x="2288" fg:w="11"/><text x="91.9167%" y="462.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:282) (161 samples, 6.45%)</title><rect x="85.6971%" y="324" width="6.4503%" height="15" fill="rgb(252,166,36)" fg:x="2139" fg:w="161"/><text x="85.9471%" y="334.50">from_lis..</text></g><g><title>torch::autograd::THPVariable_tensor (libtorch_python.so) (161 samples, 6.45%)</title><rect x="85.6971%" y="340" width="6.4503%" height="15" fill="rgb(245,132,34)" fg:x="2139" fg:w="161"/><text x="85.9471%" y="350.50">torch::a..</text></g><g><title>torch::utils::tensor_ctor (libtorch_python.so) (161 samples, 6.45%)</title><rect x="85.6971%" y="356" width="6.4503%" height="15" fill="rgb(236,54,3)" fg:x="2139" fg:w="161"/><text x="85.9471%" y="366.50">torch::u..</text></g><g><title>torch::utils::(anonymous namespace)::internal_new_from_data (libtorch_python.so) (160 samples, 6.41%)</title><rect x="85.7372%" y="372" width="6.4103%" height="15" fill="rgb(241,173,43)" fg:x="2140" fg:w="160"/><text x="85.9872%" y="382.50">torch::u..</text></g><g><title>torch::utils::(anonymous namespace)::recursive_store (libtorch_python.so) (159 samples, 6.37%)</title><rect x="85.7772%" y="388" width="6.3702%" height="15" fill="rgb(215,190,9)" fg:x="2141" fg:w="159"/><text x="86.0272%" y="398.50">torch::u..</text></g><g><title>torch::utils::(anonymous namespace)::recursive_store (libtorch_python.so) (159 samples, 6.37%)</title><rect x="85.7772%" y="404" width="6.3702%" height="15" fill="rgb(242,101,16)" fg:x="2141" fg:w="159"/><text x="86.0272%" y="414.50">torch::u..</text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="92.3077%" y="580" width="0.1202%" height="15" fill="rgb(223,190,21)" fg:x="2304" fg:w="3"/><text x="92.5577%" y="590.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (6 samples, 0.24%)</title><rect x="92.3077%" y="532" width="0.2404%" height="15" fill="rgb(215,228,25)" fg:x="2304" fg:w="6"/><text x="92.5577%" y="542.50"></text></g><g><title>at::native::copy_ (libtorch_cpu.so) (6 samples, 0.24%)</title><rect x="92.3077%" y="548" width="0.2404%" height="15" fill="rgb(225,36,22)" fg:x="2304" fg:w="6"/><text x="92.5577%" y="558.50"></text></g><g><title>at::native::copy_impl (libtorch_cpu.so) (6 samples, 0.24%)</title><rect x="92.3077%" y="564" width="0.2404%" height="15" fill="rgb(251,106,46)" fg:x="2304" fg:w="6"/><text x="92.5577%" y="574.50"></text></g><g><title>at::native::copy_kernel_cuda (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="92.4279%" y="580" width="0.1202%" height="15" fill="rgb(208,90,1)" fg:x="2307" fg:w="3"/><text x="92.6779%" y="590.50"></text></g><g><title>at::_ops::to_dtype_layout::call (libtorch_cpu.so) (9 samples, 0.36%)</title><rect x="92.3077%" y="372" width="0.3606%" height="15" fill="rgb(243,10,4)" fg:x="2304" fg:w="9"/><text x="92.5577%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::to_dtype_layout(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (9 samples, 0.36%)</title><rect x="92.3077%" y="388" width="0.3606%" height="15" fill="rgb(212,137,27)" fg:x="2304" fg:w="9"/><text x="92.5577%" y="398.50"></text></g><g><title>at::_ops::to_dtype_layout::redispatch (libtorch_cpu.so) (9 samples, 0.36%)</title><rect x="92.3077%" y="404" width="0.3606%" height="15" fill="rgb(231,220,49)" fg:x="2304" fg:w="9"/><text x="92.5577%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_dtype_layout_to(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (9 samples, 0.36%)</title><rect x="92.3077%" y="420" width="0.3606%" height="15" fill="rgb(237,96,20)" fg:x="2304" fg:w="9"/><text x="92.5577%" y="430.50"></text></g><g><title>at::native::to (libtorch_cpu.so) (9 samples, 0.36%)</title><rect x="92.3077%" y="436" width="0.3606%" height="15" fill="rgb(239,229,30)" fg:x="2304" fg:w="9"/><text x="92.5577%" y="446.50"></text></g><g><title>at::_ops::_to_copy::call (libtorch_cpu.so) (9 samples, 0.36%)</title><rect x="92.3077%" y="452" width="0.3606%" height="15" fill="rgb(219,65,33)" fg:x="2304" fg:w="9"/><text x="92.5577%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::_to_copy(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (9 samples, 0.36%)</title><rect x="92.3077%" y="468" width="0.3606%" height="15" fill="rgb(243,134,7)" fg:x="2304" fg:w="9"/><text x="92.5577%" y="478.50"></text></g><g><title>at::_ops::_to_copy::redispatch (libtorch_cpu.so) (9 samples, 0.36%)</title><rect x="92.3077%" y="484" width="0.3606%" height="15" fill="rgb(216,177,54)" fg:x="2304" fg:w="9"/><text x="92.5577%" y="494.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___to_copy(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (9 samples, 0.36%)</title><rect x="92.3077%" y="500" width="0.3606%" height="15" fill="rgb(211,160,20)" fg:x="2304" fg:w="9"/><text x="92.5577%" y="510.50"></text></g><g><title>at::native::_to_copy (libtorch_cpu.so) (9 samples, 0.36%)</title><rect x="92.3077%" y="516" width="0.3606%" height="15" fill="rgb(239,85,39)" fg:x="2304" fg:w="9"/><text x="92.5577%" y="526.50"></text></g><g><title>at::empty_strided (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="92.5481%" y="532" width="0.1202%" height="15" fill="rgb(232,125,22)" fg:x="2310" fg:w="3"/><text x="92.7981%" y="542.50"></text></g><g><title>at::_ops::empty_strided::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="92.5481%" y="548" width="0.1202%" height="15" fill="rgb(244,57,34)" fg:x="2310" fg:w="3"/><text x="92.7981%" y="558.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::empty_strided(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="92.5481%" y="564" width="0.1202%" height="15" fill="rgb(214,203,32)" fg:x="2310" fg:w="3"/><text x="92.7981%" y="574.50"></text></g><g><title>at::_ops::empty_strided::redispatch (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="92.5481%" y="580" width="0.1202%" height="15" fill="rgb(207,58,43)" fg:x="2310" fg:w="3"/><text x="92.7981%" y="590.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CUDA__empty_strided(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="92.5481%" y="596" width="0.1202%" height="15" fill="rgb(215,193,15)" fg:x="2310" fg:w="3"/><text x="92.7981%" y="606.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CUDA__empty_strided (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="92.5481%" y="612" width="0.1202%" height="15" fill="rgb(232,15,44)" fg:x="2310" fg:w="3"/><text x="92.7981%" y="622.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:303) (10 samples, 0.40%)</title><rect x="92.3077%" y="324" width="0.4006%" height="15" fill="rgb(212,3,48)" fg:x="2304" fg:w="10"/><text x="92.5577%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_to (libtorch_python.so) (10 samples, 0.40%)</title><rect x="92.3077%" y="340" width="0.4006%" height="15" fill="rgb(218,128,7)" fg:x="2304" fg:w="10"/><text x="92.5577%" y="350.50"></text></g><g><title>torch::autograd::dispatch_to (libtorch_python.so) (10 samples, 0.40%)</title><rect x="92.3077%" y="356" width="0.4006%" height="15" fill="rgb(226,216,39)" fg:x="2304" fg:w="10"/><text x="92.5577%" y="366.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:305) (4 samples, 0.16%)</title><rect x="92.7083%" y="324" width="0.1603%" height="15" fill="rgb(243,47,51)" fg:x="2314" fg:w="4"/><text x="92.9583%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_getitem (libtorch_python.so) (3 samples, 0.12%)</title><rect x="92.7484%" y="340" width="0.1202%" height="15" fill="rgb(241,183,40)" fg:x="2315" fg:w="3"/><text x="92.9984%" y="350.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:311) (3 samples, 0.12%)</title><rect x="92.9487%" y="324" width="0.1202%" height="15" fill="rgb(231,217,32)" fg:x="2320" fg:w="3"/><text x="93.1987%" y="334.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:314) (4 samples, 0.16%)</title><rect x="93.2292%" y="324" width="0.1603%" height="15" fill="rgb(229,61,38)" fg:x="2327" fg:w="4"/><text x="93.4792%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_to (libtorch_python.so) (4 samples, 0.16%)</title><rect x="93.2292%" y="340" width="0.1603%" height="15" fill="rgb(225,210,5)" fg:x="2327" fg:w="4"/><text x="93.4792%" y="350.50"></text></g><g><title>torch::autograd::dispatch_to (libtorch_python.so) (4 samples, 0.16%)</title><rect x="93.2292%" y="356" width="0.1603%" height="15" fill="rgb(231,79,45)" fg:x="2327" fg:w="4"/><text x="93.4792%" y="366.50"></text></g><g><title>at::_ops::to_dtype_layout::call (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="93.2292%" y="372" width="0.1603%" height="15" fill="rgb(224,100,7)" fg:x="2327" fg:w="4"/><text x="93.4792%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::to_dtype_layout(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="93.2292%" y="388" width="0.1603%" height="15" fill="rgb(241,198,18)" fg:x="2327" fg:w="4"/><text x="93.4792%" y="398.50"></text></g><g><title>at::_ops::to_dtype_layout::redispatch (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="93.2292%" y="404" width="0.1603%" height="15" fill="rgb(252,97,53)" fg:x="2327" fg:w="4"/><text x="93.4792%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_dtype_layout_to(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="93.2292%" y="420" width="0.1603%" height="15" fill="rgb(220,88,7)" fg:x="2327" fg:w="4"/><text x="93.4792%" y="430.50"></text></g><g><title>at::native::to (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="93.2292%" y="436" width="0.1603%" height="15" fill="rgb(213,176,14)" fg:x="2327" fg:w="4"/><text x="93.4792%" y="446.50"></text></g><g><title>at::_ops::_to_copy::call (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="93.2292%" y="452" width="0.1603%" height="15" fill="rgb(246,73,7)" fg:x="2327" fg:w="4"/><text x="93.4792%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::_to_copy(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="93.2292%" y="468" width="0.1603%" height="15" fill="rgb(245,64,36)" fg:x="2327" fg:w="4"/><text x="93.4792%" y="478.50"></text></g><g><title>at::_ops::_to_copy::redispatch (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="93.2292%" y="484" width="0.1603%" height="15" fill="rgb(245,80,10)" fg:x="2327" fg:w="4"/><text x="93.4792%" y="494.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___to_copy(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="93.2292%" y="500" width="0.1603%" height="15" fill="rgb(232,107,50)" fg:x="2327" fg:w="4"/><text x="93.4792%" y="510.50"></text></g><g><title>at::native::_to_copy (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="93.2292%" y="516" width="0.1603%" height="15" fill="rgb(253,3,0)" fg:x="2327" fg:w="4"/><text x="93.4792%" y="526.50"></text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:322) (3 samples, 0.12%)</title><rect x="93.5897%" y="324" width="0.1202%" height="15" fill="rgb(212,99,53)" fg:x="2336" fg:w="3"/><text x="93.8397%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_to (libtorch_python.so) (3 samples, 0.12%)</title><rect x="93.5897%" y="340" width="0.1202%" height="15" fill="rgb(249,111,54)" fg:x="2336" fg:w="3"/><text x="93.8397%" y="350.50"></text></g><g><title>torch::autograd::dispatch_to (libtorch_python.so) (3 samples, 0.12%)</title><rect x="93.5897%" y="356" width="0.1202%" height="15" fill="rgb(249,55,30)" fg:x="2336" fg:w="3"/><text x="93.8397%" y="366.50"></text></g><g><title>at::_ops::to_dtype_layout::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="93.5897%" y="372" width="0.1202%" height="15" fill="rgb(237,47,42)" fg:x="2336" fg:w="3"/><text x="93.8397%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::to_dtype_layout(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="93.5897%" y="388" width="0.1202%" height="15" fill="rgb(211,20,18)" fg:x="2336" fg:w="3"/><text x="93.8397%" y="398.50"></text></g><g><title>at::_ops::to_dtype_layout::redispatch (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="93.5897%" y="404" width="0.1202%" height="15" fill="rgb(231,203,46)" fg:x="2336" fg:w="3"/><text x="93.8397%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_dtype_layout_to(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="93.5897%" y="420" width="0.1202%" height="15" fill="rgb(237,142,3)" fg:x="2336" fg:w="3"/><text x="93.8397%" y="430.50"></text></g><g><title>at::native::to (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="93.5897%" y="436" width="0.1202%" height="15" fill="rgb(241,107,1)" fg:x="2336" fg:w="3"/><text x="93.8397%" y="446.50"></text></g><g><title>at::_ops::_to_copy::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="93.5897%" y="452" width="0.1202%" height="15" fill="rgb(229,83,13)" fg:x="2336" fg:w="3"/><text x="93.8397%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::_to_copy(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="93.5897%" y="468" width="0.1202%" height="15" fill="rgb(241,91,40)" fg:x="2336" fg:w="3"/><text x="93.8397%" y="478.50"></text></g><g><title>at::_ops::_to_copy::redispatch (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="93.5897%" y="484" width="0.1202%" height="15" fill="rgb(225,3,45)" fg:x="2336" fg:w="3"/><text x="93.8397%" y="494.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___to_copy(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="93.5897%" y="500" width="0.1202%" height="15" fill="rgb(244,223,14)" fg:x="2336" fg:w="3"/><text x="93.8397%" y="510.50"></text></g><g><title>at::native::_to_copy (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="93.5897%" y="516" width="0.1202%" height="15" fill="rgb(224,124,37)" fg:x="2336" fg:w="3"/><text x="93.8397%" y="526.50"></text></g><g><title>at::_ops::to_dtype_layout::call (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="93.7099%" y="372" width="0.2003%" height="15" fill="rgb(251,171,30)" fg:x="2339" fg:w="5"/><text x="93.9599%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::to_dtype_layout(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="93.7099%" y="388" width="0.2003%" height="15" fill="rgb(236,46,54)" fg:x="2339" fg:w="5"/><text x="93.9599%" y="398.50"></text></g><g><title>at::_ops::to_dtype_layout::redispatch (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="93.7099%" y="404" width="0.2003%" height="15" fill="rgb(245,213,5)" fg:x="2339" fg:w="5"/><text x="93.9599%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_dtype_layout_to(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="93.7099%" y="420" width="0.2003%" height="15" fill="rgb(230,144,27)" fg:x="2339" fg:w="5"/><text x="93.9599%" y="430.50"></text></g><g><title>at::native::to (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="93.7099%" y="436" width="0.2003%" height="15" fill="rgb(220,86,6)" fg:x="2339" fg:w="5"/><text x="93.9599%" y="446.50"></text></g><g><title>at::_ops::_to_copy::call (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="93.7099%" y="452" width="0.2003%" height="15" fill="rgb(240,20,13)" fg:x="2339" fg:w="5"/><text x="93.9599%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::_to_copy(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="93.7099%" y="468" width="0.2003%" height="15" fill="rgb(217,89,34)" fg:x="2339" fg:w="5"/><text x="93.9599%" y="478.50"></text></g><g><title>at::_ops::_to_copy::redispatch (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="93.7099%" y="484" width="0.2003%" height="15" fill="rgb(229,13,5)" fg:x="2339" fg:w="5"/><text x="93.9599%" y="494.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___to_copy(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="93.7099%" y="500" width="0.2003%" height="15" fill="rgb(244,67,35)" fg:x="2339" fg:w="5"/><text x="93.9599%" y="510.50"></text></g><g><title>at::native::_to_copy (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="93.7099%" y="516" width="0.2003%" height="15" fill="rgb(221,40,2)" fg:x="2339" fg:w="5"/><text x="93.9599%" y="526.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="93.7099%" y="532" width="0.2003%" height="15" fill="rgb(237,157,21)" fg:x="2339" fg:w="5"/><text x="93.9599%" y="542.50"></text></g><g><title>at::native::copy_ (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="93.7099%" y="548" width="0.2003%" height="15" fill="rgb(222,94,11)" fg:x="2339" fg:w="5"/><text x="93.9599%" y="558.50"></text></g><g><title>at::native::copy_impl (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="93.7099%" y="564" width="0.2003%" height="15" fill="rgb(249,113,6)" fg:x="2339" fg:w="5"/><text x="93.9599%" y="574.50"></text></g><g><title>at::native::copy_kernel_cuda (libtorch_cuda.so) (5 samples, 0.20%)</title><rect x="93.7099%" y="580" width="0.2003%" height="15" fill="rgb(238,137,36)" fg:x="2339" fg:w="5"/><text x="93.9599%" y="590.50"></text></g><g><title>cudaMemcpyAsync (nvidia/cuda_runtime/lib/libcudart.so.12) (3 samples, 0.12%)</title><rect x="93.7901%" y="596" width="0.1202%" height="15" fill="rgb(210,102,26)" fg:x="2341" fg:w="3"/><text x="94.0401%" y="606.50"></text></g><g><title>forward (vllm/model_executor/layers/sampler.py:41) (472 samples, 18.91%)</title><rect x="75.0401%" y="292" width="18.9103%" height="15" fill="rgb(218,30,30)" fg:x="1873" fg:w="472"/><text x="75.2901%" y="302.50">forward (vllm/model_executor/l..</text></g><g><title>from_sampling_metadata (vllm/model_executor/sampling_metadata.py:196) (466 samples, 18.67%)</title><rect x="75.2804%" y="308" width="18.6699%" height="15" fill="rgb(214,67,26)" fg:x="1879" fg:w="466"/><text x="75.5304%" y="318.50">from_sampling_metadata (vllm/..</text></g><g><title>from_lists (vllm/model_executor/sampling_metadata.py:324) (6 samples, 0.24%)</title><rect x="93.7099%" y="324" width="0.2404%" height="15" fill="rgb(251,9,53)" fg:x="2339" fg:w="6"/><text x="93.9599%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_to (libtorch_python.so) (6 samples, 0.24%)</title><rect x="93.7099%" y="340" width="0.2404%" height="15" fill="rgb(228,204,25)" fg:x="2339" fg:w="6"/><text x="93.9599%" y="350.50"></text></g><g><title>torch::autograd::dispatch_to (libtorch_python.so) (6 samples, 0.24%)</title><rect x="93.7099%" y="356" width="0.2404%" height="15" fill="rgb(207,153,8)" fg:x="2339" fg:w="6"/><text x="93.9599%" y="366.50"></text></g><g><title>forward (vllm/model_executor/layers/sampler.py:54) (5 samples, 0.20%)</title><rect x="93.9503%" y="292" width="0.2003%" height="15" fill="rgb(242,9,16)" fg:x="2345" fg:w="5"/><text x="94.2003%" y="302.50"></text></g><g><title>torch::autograd::THPVariable_unsqueeze_ (libtorch_python.so) (3 samples, 0.12%)</title><rect x="94.0304%" y="308" width="0.1202%" height="15" fill="rgb(217,211,10)" fg:x="2347" fg:w="3"/><text x="94.2804%" y="318.50"></text></g><g><title>at::TensorBase::__dispatch_contiguous (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="94.1907%" y="452" width="0.1202%" height="15" fill="rgb(219,228,52)" fg:x="2351" fg:w="3"/><text x="94.4407%" y="462.50"></text></g><g><title>at::_ops::contiguous::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="94.1907%" y="468" width="0.1202%" height="15" fill="rgb(231,92,29)" fg:x="2351" fg:w="3"/><text x="94.4407%" y="478.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::MemoryFormat), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__contiguous(at::Tensor const&amp;, c10::MemoryFormat)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::MemoryFormat&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::MemoryFormat)&gt;::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="94.1907%" y="484" width="0.1202%" height="15" fill="rgb(232,8,23)" fg:x="2351" fg:w="3"/><text x="94.4407%" y="494.50"></text></g><g><title>at::native::contiguous (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="94.1907%" y="500" width="0.1202%" height="15" fill="rgb(216,211,34)" fg:x="2351" fg:w="3"/><text x="94.4407%" y="510.50"></text></g><g><title>at::_ops::clone::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="94.1907%" y="516" width="0.1202%" height="15" fill="rgb(236,151,0)" fg:x="2351" fg:w="3"/><text x="94.4407%" y="526.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__clone(at::Tensor const&amp;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="94.1907%" y="532" width="0.1202%" height="15" fill="rgb(209,168,3)" fg:x="2351" fg:w="3"/><text x="94.4407%" y="542.50"></text></g><g><title>at::native::clone (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="94.1907%" y="548" width="0.1202%" height="15" fill="rgb(208,129,28)" fg:x="2351" fg:w="3"/><text x="94.4407%" y="558.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="94.1907%" y="564" width="0.1202%" height="15" fill="rgb(229,78,22)" fg:x="2351" fg:w="3"/><text x="94.4407%" y="574.50"></text></g><g><title>at::native::copy_ (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="94.1907%" y="580" width="0.1202%" height="15" fill="rgb(228,187,13)" fg:x="2351" fg:w="3"/><text x="94.4407%" y="590.50"></text></g><g><title>at::native::copy_impl (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="94.1907%" y="596" width="0.1202%" height="15" fill="rgb(240,119,24)" fg:x="2351" fg:w="3"/><text x="94.4407%" y="606.50"></text></g><g><title>at::native::copy_kernel_cuda (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="94.1907%" y="612" width="0.1202%" height="15" fill="rgb(209,194,42)" fg:x="2351" fg:w="3"/><text x="94.4407%" y="622.50"></text></g><g><title>at::native::copy_device_to_device (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="94.1907%" y="628" width="0.1202%" height="15" fill="rgb(247,200,46)" fg:x="2351" fg:w="3"/><text x="94.4407%" y="638.50"></text></g><g><title>at::_ops::softmax_int::call (libtorch_cpu.so) (7 samples, 0.28%)</title><rect x="94.1506%" y="324" width="0.2804%" height="15" fill="rgb(218,76,16)" fg:x="2350" fg:w="7"/><text x="94.4006%" y="334.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::optional&lt;c10::ScalarType&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_int_softmax(at::Tensor const&amp;, long, c10::optional&lt;c10::ScalarType&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::optional&lt;c10::ScalarType&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::optional&lt;c10::ScalarType&gt;)&gt;::call (libtorch_cpu.so) (6 samples, 0.24%)</title><rect x="94.1907%" y="340" width="0.2404%" height="15" fill="rgb(225,21,48)" fg:x="2351" fg:w="6"/><text x="94.4407%" y="350.50"></text></g><g><title>at::native::softmax (libtorch_cpu.so) (6 samples, 0.24%)</title><rect x="94.1907%" y="356" width="0.2404%" height="15" fill="rgb(239,223,50)" fg:x="2351" fg:w="6"/><text x="94.4407%" y="366.50"></text></g><g><title>at::_ops::_softmax::call (libtorch_cpu.so) (6 samples, 0.24%)</title><rect x="94.1907%" y="372" width="0.2404%" height="15" fill="rgb(244,45,21)" fg:x="2351" fg:w="6"/><text x="94.4407%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, bool), &amp;at::(anonymous namespace)::wrapper_CUDA__softmax(at::Tensor const&amp;, long, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, bool)&gt;::call (libtorch_cuda.so) (6 samples, 0.24%)</title><rect x="94.1907%" y="388" width="0.2404%" height="15" fill="rgb(232,33,43)" fg:x="2351" fg:w="6"/><text x="94.4407%" y="398.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CUDA__softmax (libtorch_cuda.so) (6 samples, 0.24%)</title><rect x="94.1907%" y="404" width="0.2404%" height="15" fill="rgb(209,8,3)" fg:x="2351" fg:w="6"/><text x="94.4407%" y="414.50"></text></g><g><title>at::native::structured_softmax_cuda_out::impl (libtorch_cuda.so) (6 samples, 0.24%)</title><rect x="94.1907%" y="420" width="0.2404%" height="15" fill="rgb(214,25,53)" fg:x="2351" fg:w="6"/><text x="94.4407%" y="430.50"></text></g><g><title>at::native::(anonymous namespace)::host_softmax&lt;at::native::(anonymous namespace)::SoftMaxForwardEpilogue, false&gt; (libtorch_cuda.so) (6 samples, 0.24%)</title><rect x="94.1907%" y="436" width="0.2404%" height="15" fill="rgb(254,186,54)" fg:x="2351" fg:w="6"/><text x="94.4407%" y="446.50"></text></g><g><title>at::native::(anonymous namespace)::host_softmax&lt;at::native::(anonymous namespace)::SoftMaxForwardEpilogue, false&gt;(at::Tensor const&amp;, long, bool, at::Tensor const&amp;)::{lambda()#1}::operator()() const::{lambda()#3}::operator() const (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="94.3109%" y="452" width="0.1202%" height="15" fill="rgb(208,174,49)" fg:x="2354" fg:w="3"/><text x="94.5609%" y="462.50"></text></g><g><title>forward (vllm/model_executor/layers/sampler.py:65) (9 samples, 0.36%)</title><rect x="94.1506%" y="292" width="0.3606%" height="15" fill="rgb(233,191,51)" fg:x="2350" fg:w="9"/><text x="94.4006%" y="302.50"></text></g><g><title>torch::autograd::THPVariable_softmax (libtorch_python.so) (9 samples, 0.36%)</title><rect x="94.1506%" y="308" width="0.3606%" height="15" fill="rgb(222,134,10)" fg:x="2350" fg:w="9"/><text x="94.4006%" y="318.50"></text></g><g><title>at::TensorBase::__dispatch_contiguous (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="94.5913%" y="452" width="0.1603%" height="15" fill="rgb(230,226,20)" fg:x="2361" fg:w="4"/><text x="94.8413%" y="462.50"></text></g><g><title>at::_ops::contiguous::call (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="94.5913%" y="468" width="0.1603%" height="15" fill="rgb(251,111,25)" fg:x="2361" fg:w="4"/><text x="94.8413%" y="478.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::MemoryFormat), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__contiguous(at::Tensor const&amp;, c10::MemoryFormat)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::MemoryFormat&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::MemoryFormat)&gt;::call (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="94.5913%" y="484" width="0.1603%" height="15" fill="rgb(224,40,46)" fg:x="2361" fg:w="4"/><text x="94.8413%" y="494.50"></text></g><g><title>at::native::contiguous (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="94.5913%" y="500" width="0.1603%" height="15" fill="rgb(236,108,47)" fg:x="2361" fg:w="4"/><text x="94.8413%" y="510.50"></text></g><g><title>at::_ops::clone::call (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="94.5913%" y="516" width="0.1603%" height="15" fill="rgb(234,93,0)" fg:x="2361" fg:w="4"/><text x="94.8413%" y="526.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__clone(at::Tensor const&amp;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="94.6314%" y="532" width="0.1202%" height="15" fill="rgb(224,213,32)" fg:x="2362" fg:w="3"/><text x="94.8814%" y="542.50"></text></g><g><title>at::native::clone (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="94.6314%" y="548" width="0.1202%" height="15" fill="rgb(251,11,48)" fg:x="2362" fg:w="3"/><text x="94.8814%" y="558.50"></text></g><g><title>forward (vllm/model_executor/layers/sampler.py:68) (7 samples, 0.28%)</title><rect x="94.5112%" y="292" width="0.2804%" height="15" fill="rgb(236,173,5)" fg:x="2359" fg:w="7"/><text x="94.7612%" y="302.50"></text></g><g><title>torch::autograd::THPVariable_log_softmax (libtorch_python.so) (7 samples, 0.28%)</title><rect x="94.5112%" y="308" width="0.2804%" height="15" fill="rgb(230,95,12)" fg:x="2359" fg:w="7"/><text x="94.7612%" y="318.50"></text></g><g><title>at::_ops::log_softmax_int::call (libtorch_cpu.so) (7 samples, 0.28%)</title><rect x="94.5112%" y="324" width="0.2804%" height="15" fill="rgb(232,209,1)" fg:x="2359" fg:w="7"/><text x="94.7612%" y="334.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, c10::optional&lt;c10::ScalarType&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_int_log_softmax(at::Tensor const&amp;, long, c10::optional&lt;c10::ScalarType&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, c10::optional&lt;c10::ScalarType&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, long, c10::optional&lt;c10::ScalarType&gt;)&gt;::call (libtorch_cpu.so) (7 samples, 0.28%)</title><rect x="94.5112%" y="340" width="0.2804%" height="15" fill="rgb(232,6,1)" fg:x="2359" fg:w="7"/><text x="94.7612%" y="350.50"></text></g><g><title>at::native::log_softmax (libtorch_cpu.so) (7 samples, 0.28%)</title><rect x="94.5112%" y="356" width="0.2804%" height="15" fill="rgb(210,224,50)" fg:x="2359" fg:w="7"/><text x="94.7612%" y="366.50"></text></g><g><title>at::_ops::_log_softmax::call (libtorch_cpu.so) (7 samples, 0.28%)</title><rect x="94.5112%" y="372" width="0.2804%" height="15" fill="rgb(228,127,35)" fg:x="2359" fg:w="7"/><text x="94.7612%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, long, bool), &amp;at::(anonymous namespace)::wrapper_CUDA__log_softmax(at::Tensor const&amp;, long, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, long, bool)&gt;::call (libtorch_cuda.so) (7 samples, 0.28%)</title><rect x="94.5112%" y="388" width="0.2804%" height="15" fill="rgb(245,102,45)" fg:x="2359" fg:w="7"/><text x="94.7612%" y="398.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CUDA__log_softmax (libtorch_cuda.so) (7 samples, 0.28%)</title><rect x="94.5112%" y="404" width="0.2804%" height="15" fill="rgb(214,1,49)" fg:x="2359" fg:w="7"/><text x="94.7612%" y="414.50"></text></g><g><title>at::native::structured_log_softmax_cuda_out::impl (libtorch_cuda.so) (5 samples, 0.20%)</title><rect x="94.5913%" y="420" width="0.2003%" height="15" fill="rgb(226,163,40)" fg:x="2361" fg:w="5"/><text x="94.8413%" y="430.50"></text></g><g><title>at::native::(anonymous namespace)::host_softmax&lt;at::native::(anonymous namespace)::LogSoftMaxForwardEpilogue, true&gt; (libtorch_cuda.so) (5 samples, 0.20%)</title><rect x="94.5913%" y="436" width="0.2003%" height="15" fill="rgb(239,212,28)" fg:x="2361" fg:w="5"/><text x="94.8413%" y="446.50"></text></g><g><title>_sample_with_torch (vllm/model_executor/layers/sampler.py:319) (5 samples, 0.20%)</title><rect x="95.0721%" y="324" width="0.2003%" height="15" fill="rgb(220,20,13)" fg:x="2373" fg:w="5"/><text x="95.3221%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_getitem (libtorch_python.so) (5 samples, 0.20%)</title><rect x="95.0721%" y="340" width="0.2003%" height="15" fill="rgb(210,164,35)" fg:x="2373" fg:w="5"/><text x="95.3221%" y="350.50"></text></g><g><title>_sample_with_torch (vllm/model_executor/layers/sampler.py:320) (4 samples, 0.16%)</title><rect x="95.2724%" y="324" width="0.1603%" height="15" fill="rgb(248,109,41)" fg:x="2378" fg:w="4"/><text x="95.5224%" y="334.50"></text></g><g><title>at::TensorIteratorBase::build (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="95.6330%" y="420" width="0.1202%" height="15" fill="rgb(238,23,50)" fg:x="2387" fg:w="3"/><text x="95.8830%" y="430.50"></text></g><g><title>at::TensorIteratorBase::allocate_or_resize_outputs (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="95.6330%" y="436" width="0.1202%" height="15" fill="rgb(211,48,49)" fg:x="2387" fg:w="3"/><text x="95.8830%" y="446.50"></text></g><g><title>at::(anonymous namespace)::structured_index_out_functional::set_output_raw_strided (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="95.6330%" y="452" width="0.1202%" height="15" fill="rgb(223,36,21)" fg:x="2387" fg:w="3"/><text x="95.8830%" y="462.50"></text></g><g><title>at::(anonymous namespace)::create_out (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="95.6330%" y="468" width="0.1202%" height="15" fill="rgb(207,123,46)" fg:x="2387" fg:w="3"/><text x="95.8830%" y="478.50"></text></g><g><title>at::detail::empty_cuda (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="95.6330%" y="484" width="0.1202%" height="15" fill="rgb(240,218,32)" fg:x="2387" fg:w="3"/><text x="95.8830%" y="494.50"></text></g><g><title>at::detail::empty_cuda (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="95.6330%" y="500" width="0.1202%" height="15" fill="rgb(252,5,43)" fg:x="2387" fg:w="3"/><text x="95.8830%" y="510.50"></text></g><g><title>at::detail::empty_cuda (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="95.6330%" y="516" width="0.1202%" height="15" fill="rgb(252,84,19)" fg:x="2387" fg:w="3"/><text x="95.8830%" y="526.50"></text></g><g><title>at::detail::empty_generic (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="95.6330%" y="532" width="0.1202%" height="15" fill="rgb(243,152,39)" fg:x="2387" fg:w="3"/><text x="95.8830%" y="542.50"></text></g><g><title>at::detail::_empty_generic&lt;long&gt; (libtorch_cpu.so) (3 samples, 0.12%)</title><rect x="95.6330%" y="548" width="0.1202%" height="15" fill="rgb(234,160,15)" fg:x="2387" fg:w="3"/><text x="95.8830%" y="558.50"></text></g><g><title>at::meta::structured_index_Tensor::meta (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="95.6330%" y="404" width="0.2003%" height="15" fill="rgb(237,34,20)" fg:x="2387" fg:w="5"/><text x="95.8830%" y="414.50"></text></g><g><title>torch::autograd::THPVariable_getitem (libtorch_python.so) (9 samples, 0.36%)</title><rect x="95.5929%" y="340" width="0.3606%" height="15" fill="rgb(229,97,13)" fg:x="2386" fg:w="9"/><text x="95.8429%" y="350.50"></text></g><g><title>at::_ops::index_Tensor::call (libtorch_cpu.so) (9 samples, 0.36%)</title><rect x="95.5929%" y="356" width="0.3606%" height="15" fill="rgb(234,71,50)" fg:x="2386" fg:w="9"/><text x="95.8429%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::List&lt;c10::optional&lt;at::Tensor&gt; &gt; const&amp;), &amp;at::(anonymous namespace)::wrapper_CUDA_index_Tensor(at::Tensor const&amp;, c10::List&lt;c10::optional&lt;at::Tensor&gt; &gt; const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::List&lt;c10::optional&lt;at::Tensor&gt; &gt; const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::List&lt;c10::optional&lt;at::Tensor&gt; &gt; const&amp;)&gt;::call (libtorch_cuda.so) (9 samples, 0.36%)</title><rect x="95.5929%" y="372" width="0.3606%" height="15" fill="rgb(253,155,4)" fg:x="2386" fg:w="9"/><text x="95.8429%" y="382.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CUDA_index_Tensor (libtorch_cuda.so) (9 samples, 0.36%)</title><rect x="95.5929%" y="388" width="0.3606%" height="15" fill="rgb(222,185,37)" fg:x="2386" fg:w="9"/><text x="95.8429%" y="398.50"></text></g><g><title>_sample_with_torch (vllm/model_executor/layers/sampler.py:329) (15 samples, 0.60%)</title><rect x="95.4327%" y="324" width="0.6010%" height="15" fill="rgb(251,177,13)" fg:x="2382" fg:w="15"/><text x="95.6827%" y="334.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (14 samples, 0.56%)</title><rect x="96.0737%" y="564" width="0.5609%" height="15" fill="rgb(250,179,40)" fg:x="2398" fg:w="14"/><text x="96.3237%" y="574.50"></text></g><g><title>at::native::copy_ (libtorch_cpu.so) (14 samples, 0.56%)</title><rect x="96.0737%" y="580" width="0.5609%" height="15" fill="rgb(242,44,2)" fg:x="2398" fg:w="14"/><text x="96.3237%" y="590.50"></text></g><g><title>at::native::copy_impl (libtorch_cpu.so) (14 samples, 0.56%)</title><rect x="96.0737%" y="596" width="0.5609%" height="15" fill="rgb(216,177,13)" fg:x="2398" fg:w="14"/><text x="96.3237%" y="606.50"></text></g><g><title>at::native::copy_kernel_cuda (libtorch_cuda.so) (13 samples, 0.52%)</title><rect x="96.1138%" y="612" width="0.5208%" height="15" fill="rgb(216,106,43)" fg:x="2399" fg:w="13"/><text x="96.3638%" y="622.50"></text></g><g><title>cudaMemcpyAsync (nvidia/cuda_runtime/lib/libcudart.so.12) (13 samples, 0.52%)</title><rect x="96.1138%" y="628" width="0.5208%" height="15" fill="rgb(216,183,2)" fg:x="2399" fg:w="13"/><text x="96.3638%" y="638.50"></text></g><g><title>0x7f9b2dbf28ad (nvidia/cuda_runtime/lib/libcudart.so.12) (13 samples, 0.52%)</title><rect x="96.1138%" y="644" width="0.5208%" height="15" fill="rgb(249,75,3)" fg:x="2399" fg:w="13"/><text x="96.3638%" y="654.50"></text></g><g><title>0x7f9b2dc1f9f9 (nvidia/cuda_runtime/lib/libcudart.so.12) (13 samples, 0.52%)</title><rect x="96.1138%" y="660" width="0.5208%" height="15" fill="rgb(219,67,39)" fg:x="2399" fg:w="13"/><text x="96.3638%" y="670.50"></text></g><g><title>0x7f9b2bc43e51 (libcuda.so.545.23.08) (13 samples, 0.52%)</title><rect x="96.1138%" y="676" width="0.5208%" height="15" fill="rgb(253,228,2)" fg:x="2399" fg:w="13"/><text x="96.3638%" y="686.50"></text></g><g><title>0x7f9b2ba54a37 (libcuda.so.545.23.08) (13 samples, 0.52%)</title><rect x="96.1138%" y="692" width="0.5208%" height="15" fill="rgb(235,138,27)" fg:x="2399" fg:w="13"/><text x="96.3638%" y="702.50"></text></g><g><title>0x7f9b2ba535f1 (libcuda.so.545.23.08) (12 samples, 0.48%)</title><rect x="96.1538%" y="708" width="0.4808%" height="15" fill="rgb(236,97,51)" fg:x="2400" fg:w="12"/><text x="96.4038%" y="718.50"></text></g><g><title>0x7f9b2ba531d6 (libcuda.so.545.23.08) (12 samples, 0.48%)</title><rect x="96.1538%" y="724" width="0.4808%" height="15" fill="rgb(240,80,30)" fg:x="2400" fg:w="12"/><text x="96.4038%" y="734.50"></text></g><g><title>0x7f9b2be107c2 (libcuda.so.545.23.08) (12 samples, 0.48%)</title><rect x="96.1538%" y="740" width="0.4808%" height="15" fill="rgb(230,178,19)" fg:x="2400" fg:w="12"/><text x="96.4038%" y="750.50"></text></g><g><title>0x7f9b2bcdc1a1 (libcuda.so.545.23.08) (11 samples, 0.44%)</title><rect x="96.1939%" y="756" width="0.4407%" height="15" fill="rgb(210,190,27)" fg:x="2401" fg:w="11"/><text x="96.4439%" y="766.50"></text></g><g><title>0x7f9b2be10dfd (libcuda.so.545.23.08) (11 samples, 0.44%)</title><rect x="96.1939%" y="772" width="0.4407%" height="15" fill="rgb(222,107,31)" fg:x="2401" fg:w="11"/><text x="96.4439%" y="782.50"></text></g><g><title>0x7f9b2ba92b50 (libcuda.so.545.23.08) (10 samples, 0.40%)</title><rect x="96.2340%" y="788" width="0.4006%" height="15" fill="rgb(216,127,34)" fg:x="2402" fg:w="10"/><text x="96.4840%" y="798.50"></text></g><g><title>0x7f9b2be1947e (libcuda.so.545.23.08) (9 samples, 0.36%)</title><rect x="96.2740%" y="804" width="0.3606%" height="15" fill="rgb(234,116,52)" fg:x="2403" fg:w="9"/><text x="96.5240%" y="814.50"></text></g><g><title>0x7f9b2be1910f (libcuda.so.545.23.08) (9 samples, 0.36%)</title><rect x="96.2740%" y="820" width="0.3606%" height="15" fill="rgb(222,124,15)" fg:x="2403" fg:w="9"/><text x="96.5240%" y="830.50"></text></g><g><title>0x7f9b2ba8da02 (libcuda.so.545.23.08) (9 samples, 0.36%)</title><rect x="96.2740%" y="836" width="0.3606%" height="15" fill="rgb(231,179,28)" fg:x="2403" fg:w="9"/><text x="96.5240%" y="846.50"></text></g><g><title>at::Tensor::toBackend (libtorch_python.so) (16 samples, 0.64%)</title><rect x="96.0737%" y="388" width="0.6410%" height="15" fill="rgb(226,93,45)" fg:x="2398" fg:w="16"/><text x="96.3237%" y="398.50"></text></g><g><title>at::_ops::to_dtype_layout::call (libtorch_cpu.so) (16 samples, 0.64%)</title><rect x="96.0737%" y="404" width="0.6410%" height="15" fill="rgb(215,8,51)" fg:x="2398" fg:w="16"/><text x="96.3237%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::to_dtype_layout(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (16 samples, 0.64%)</title><rect x="96.0737%" y="420" width="0.6410%" height="15" fill="rgb(223,106,5)" fg:x="2398" fg:w="16"/><text x="96.3237%" y="430.50"></text></g><g><title>at::_ops::to_dtype_layout::redispatch (libtorch_cpu.so) (16 samples, 0.64%)</title><rect x="96.0737%" y="436" width="0.6410%" height="15" fill="rgb(250,191,5)" fg:x="2398" fg:w="16"/><text x="96.3237%" y="446.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_dtype_layout_to(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (16 samples, 0.64%)</title><rect x="96.0737%" y="452" width="0.6410%" height="15" fill="rgb(242,132,44)" fg:x="2398" fg:w="16"/><text x="96.3237%" y="462.50"></text></g><g><title>at::native::to (libtorch_cpu.so) (16 samples, 0.64%)</title><rect x="96.0737%" y="468" width="0.6410%" height="15" fill="rgb(251,152,29)" fg:x="2398" fg:w="16"/><text x="96.3237%" y="478.50"></text></g><g><title>at::_ops::_to_copy::call (libtorch_cpu.so) (16 samples, 0.64%)</title><rect x="96.0737%" y="484" width="0.6410%" height="15" fill="rgb(218,179,5)" fg:x="2398" fg:w="16"/><text x="96.3237%" y="494.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::_to_copy(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (16 samples, 0.64%)</title><rect x="96.0737%" y="500" width="0.6410%" height="15" fill="rgb(227,67,19)" fg:x="2398" fg:w="16"/><text x="96.3237%" y="510.50"></text></g><g><title>at::_ops::_to_copy::redispatch (libtorch_cpu.so) (16 samples, 0.64%)</title><rect x="96.0737%" y="516" width="0.6410%" height="15" fill="rgb(233,119,31)" fg:x="2398" fg:w="16"/><text x="96.3237%" y="526.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___to_copy(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (16 samples, 0.64%)</title><rect x="96.0737%" y="532" width="0.6410%" height="15" fill="rgb(241,120,22)" fg:x="2398" fg:w="16"/><text x="96.3237%" y="542.50"></text></g><g><title>at::native::_to_copy (libtorch_cpu.so) (16 samples, 0.64%)</title><rect x="96.0737%" y="548" width="0.6410%" height="15" fill="rgb(224,102,30)" fg:x="2398" fg:w="16"/><text x="96.3237%" y="558.50"></text></g><g><title>_greedy_sample (vllm/model_executor/layers/sampler.py:173) (17 samples, 0.68%)</title><rect x="96.0737%" y="340" width="0.6811%" height="15" fill="rgb(210,164,37)" fg:x="2398" fg:w="17"/><text x="96.3237%" y="350.50"></text></g><g><title>torch::autograd::THPVariable_tolist (libtorch_python.so) (17 samples, 0.68%)</title><rect x="96.0737%" y="356" width="0.6811%" height="15" fill="rgb(226,191,16)" fg:x="2398" fg:w="17"/><text x="96.3237%" y="366.50"></text></g><g><title>torch::utils::tensor_to_list (libtorch_python.so) (17 samples, 0.68%)</title><rect x="96.0737%" y="372" width="0.6811%" height="15" fill="rgb(214,40,45)" fg:x="2398" fg:w="17"/><text x="96.3237%" y="382.50"></text></g><g><title>_sample_with_torch (vllm/model_executor/layers/sampler.py:358) (19 samples, 0.76%)</title><rect x="96.0737%" y="324" width="0.7612%" height="15" fill="rgb(244,29,26)" fg:x="2398" fg:w="19"/><text x="96.3237%" y="334.50"></text></g><g><title>forward (vllm/model_executor/layers/sampler.py:71) (53 samples, 2.12%)</title><rect x="94.7917%" y="292" width="2.1234%" height="15" fill="rgb(216,16,5)" fg:x="2366" fg:w="53"/><text x="95.0417%" y="302.50">f..</text></g><g><title>_sample (vllm/model_executor/layers/sampler.py:461) (52 samples, 2.08%)</title><rect x="94.8317%" y="308" width="2.0833%" height="15" fill="rgb(249,76,35)" fg:x="2367" fg:w="52"/><text x="95.0817%" y="318.50">_..</text></g><g><title>at::_ops::to_device::call (libtorch_cpu.so) (6 samples, 0.24%)</title><rect x="97.2356%" y="388" width="0.2404%" height="15" fill="rgb(207,11,44)" fg:x="2427" fg:w="6"/><text x="97.4856%" y="398.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::Device, c10::ScalarType, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_device_to(at::Tensor const&amp;, c10::Device, c10::ScalarType, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Device, c10::ScalarType, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::Device, c10::ScalarType, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (6 samples, 0.24%)</title><rect x="97.2356%" y="404" width="0.2404%" height="15" fill="rgb(228,190,49)" fg:x="2427" fg:w="6"/><text x="97.4856%" y="414.50"></text></g><g><title>at::native::to (libtorch_cpu.so) (6 samples, 0.24%)</title><rect x="97.2356%" y="420" width="0.2404%" height="15" fill="rgb(214,173,12)" fg:x="2427" fg:w="6"/><text x="97.4856%" y="430.50"></text></g><g><title>at::_ops::_to_copy::call (libtorch_cpu.so) (6 samples, 0.24%)</title><rect x="97.2356%" y="436" width="0.2404%" height="15" fill="rgb(218,26,35)" fg:x="2427" fg:w="6"/><text x="97.4856%" y="446.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::_to_copy(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (6 samples, 0.24%)</title><rect x="97.2356%" y="452" width="0.2404%" height="15" fill="rgb(220,200,19)" fg:x="2427" fg:w="6"/><text x="97.4856%" y="462.50"></text></g><g><title>at::_ops::_to_copy::redispatch (libtorch_cpu.so) (6 samples, 0.24%)</title><rect x="97.2356%" y="468" width="0.2404%" height="15" fill="rgb(239,95,49)" fg:x="2427" fg:w="6"/><text x="97.4856%" y="478.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___to_copy(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (6 samples, 0.24%)</title><rect x="97.2356%" y="484" width="0.2404%" height="15" fill="rgb(235,85,53)" fg:x="2427" fg:w="6"/><text x="97.4856%" y="494.50"></text></g><g><title>at::native::_to_copy (libtorch_cpu.so) (6 samples, 0.24%)</title><rect x="97.2356%" y="500" width="0.2404%" height="15" fill="rgb(233,133,31)" fg:x="2427" fg:w="6"/><text x="97.4856%" y="510.50"></text></g><g><title>at::empty_strided (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="97.3157%" y="516" width="0.1603%" height="15" fill="rgb(218,25,20)" fg:x="2429" fg:w="4"/><text x="97.5657%" y="526.50"></text></g><g><title>at::_ops::empty_strided::call (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="97.3157%" y="532" width="0.1603%" height="15" fill="rgb(252,210,38)" fg:x="2429" fg:w="4"/><text x="97.5657%" y="542.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::empty_strided(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="97.3157%" y="548" width="0.1603%" height="15" fill="rgb(242,134,21)" fg:x="2429" fg:w="4"/><text x="97.5657%" y="558.50"></text></g><g><title>at::_ops::empty_strided::redispatch (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="97.3157%" y="564" width="0.1603%" height="15" fill="rgb(213,28,48)" fg:x="2429" fg:w="4"/><text x="97.5657%" y="574.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CUDA__empty_strided(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor(c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (libtorch_cuda.so) (4 samples, 0.16%)</title><rect x="97.3157%" y="580" width="0.1603%" height="15" fill="rgb(250,196,2)" fg:x="2429" fg:w="4"/><text x="97.5657%" y="590.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CUDA__empty_strided (libtorch_cuda.so) (4 samples, 0.16%)</title><rect x="97.3157%" y="596" width="0.1603%" height="15" fill="rgb(227,5,17)" fg:x="2429" fg:w="4"/><text x="97.5657%" y="606.50"></text></g><g><title>c10::impl::InlineDeviceGuard&lt;c10::impl::VirtualGuardImpl&gt;::InlineDeviceGuard (libtorch_cuda.so) (3 samples, 0.12%)</title><rect x="97.3558%" y="612" width="0.1202%" height="15" fill="rgb(221,226,24)" fg:x="2430" fg:w="3"/><text x="97.6058%" y="622.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (libtorch_python.so) (3 samples, 0.12%)</title><rect x="97.4760%" y="388" width="0.1202%" height="15" fill="rgb(211,5,48)" fg:x="2433" fg:w="3"/><text x="97.7260%" y="398.50"></text></g><g><title>_get_logprobs (vllm/model_executor/layers/sampler.py:506) (14 samples, 0.56%)</title><rect x="97.0753%" y="308" width="0.5609%" height="15" fill="rgb(219,150,6)" fg:x="2423" fg:w="14"/><text x="97.3253%" y="318.50"></text></g><g><title>torch::autograd::THPVariable_getitem (libtorch_python.so) (14 samples, 0.56%)</title><rect x="97.0753%" y="324" width="0.5609%" height="15" fill="rgb(251,46,16)" fg:x="2423" fg:w="14"/><text x="97.3253%" y="334.50"></text></g><g><title>torch::autograd::applySlicing (libtorch_python.so) (11 samples, 0.44%)</title><rect x="97.1955%" y="340" width="0.4407%" height="15" fill="rgb(220,204,40)" fg:x="2426" fg:w="11"/><text x="97.4455%" y="350.50"></text></g><g><title>torch::utils::indexing_tensor_from_data (libtorch_python.so) (11 samples, 0.44%)</title><rect x="97.1955%" y="356" width="0.4407%" height="15" fill="rgb(211,85,2)" fg:x="2426" fg:w="11"/><text x="97.4455%" y="366.50"></text></g><g><title>torch::utils::(anonymous namespace)::internal_new_from_data (libtorch_python.so) (11 samples, 0.44%)</title><rect x="97.1955%" y="372" width="0.4407%" height="15" fill="rgb(229,17,7)" fg:x="2426" fg:w="11"/><text x="97.4455%" y="382.50"></text></g><g><title>_get_logprobs (vllm/model_executor/layers/sampler.py:521) (5 samples, 0.20%)</title><rect x="97.6362%" y="308" width="0.2003%" height="15" fill="rgb(239,72,28)" fg:x="2437" fg:w="5"/><text x="97.8862%" y="318.50"></text></g><g><title>torch::autograd::THPVariable_cpu (libtorch_python.so) (5 samples, 0.20%)</title><rect x="97.6362%" y="324" width="0.2003%" height="15" fill="rgb(230,47,54)" fg:x="2437" fg:w="5"/><text x="97.8862%" y="334.50"></text></g><g><title>torch::autograd::dispatch_to (libtorch_python.so) (5 samples, 0.20%)</title><rect x="97.6362%" y="340" width="0.2003%" height="15" fill="rgb(214,50,8)" fg:x="2437" fg:w="5"/><text x="97.8862%" y="350.50"></text></g><g><title>at::_ops::to_dtype_layout::call (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="97.6362%" y="356" width="0.2003%" height="15" fill="rgb(216,198,43)" fg:x="2437" fg:w="5"/><text x="97.8862%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::to_dtype_layout(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="97.6362%" y="372" width="0.2003%" height="15" fill="rgb(234,20,35)" fg:x="2437" fg:w="5"/><text x="97.8862%" y="382.50"></text></g><g><title>at::_ops::to_dtype_layout::redispatch (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="97.6362%" y="388" width="0.2003%" height="15" fill="rgb(254,45,19)" fg:x="2437" fg:w="5"/><text x="97.8862%" y="398.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd_dtype_layout_to(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="97.6362%" y="404" width="0.2003%" height="15" fill="rgb(219,14,44)" fg:x="2437" fg:w="5"/><text x="97.8862%" y="414.50"></text></g><g><title>at::native::to (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="97.6362%" y="420" width="0.2003%" height="15" fill="rgb(217,220,26)" fg:x="2437" fg:w="5"/><text x="97.8862%" y="430.50"></text></g><g><title>at::_ops::_to_copy::call (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="97.6362%" y="436" width="0.2003%" height="15" fill="rgb(213,158,28)" fg:x="2437" fg:w="5"/><text x="97.8862%" y="446.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::_to_copy(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="97.6362%" y="452" width="0.2003%" height="15" fill="rgb(252,51,52)" fg:x="2437" fg:w="5"/><text x="97.8862%" y="462.50"></text></g><g><title>at::_ops::_to_copy::redispatch (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="97.6362%" y="468" width="0.2003%" height="15" fill="rgb(246,89,16)" fg:x="2437" fg:w="5"/><text x="97.8862%" y="478.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___to_copy(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="97.6362%" y="484" width="0.2003%" height="15" fill="rgb(216,158,49)" fg:x="2437" fg:w="5"/><text x="97.8862%" y="494.50"></text></g><g><title>at::native::_to_copy (libtorch_cpu.so) (5 samples, 0.20%)</title><rect x="97.6362%" y="500" width="0.2003%" height="15" fill="rgb(236,107,19)" fg:x="2437" fg:w="5"/><text x="97.8862%" y="510.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="97.6763%" y="516" width="0.1603%" height="15" fill="rgb(228,185,30)" fg:x="2438" fg:w="4"/><text x="97.9263%" y="526.50"></text></g><g><title>at::native::copy_ (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="97.6763%" y="532" width="0.1603%" height="15" fill="rgb(246,134,8)" fg:x="2438" fg:w="4"/><text x="97.9263%" y="542.50"></text></g><g><title>at::native::copy_impl (libtorch_cpu.so) (4 samples, 0.16%)</title><rect x="97.6763%" y="548" width="0.1603%" height="15" fill="rgb(214,143,50)" fg:x="2438" fg:w="4"/><text x="97.9263%" y="558.50"></text></g><g><title>at::native::copy_kernel_cuda (libtorch_cuda.so) (4 samples, 0.16%)</title><rect x="97.6763%" y="564" width="0.1603%" height="15" fill="rgb(228,75,8)" fg:x="2438" fg:w="4"/><text x="97.9263%" y="574.50"></text></g><g><title>torch::autograd::THPVariable_getitem (libtorch_python.so) (5 samples, 0.20%)</title><rect x="98.1571%" y="324" width="0.2003%" height="15" fill="rgb(207,175,4)" fg:x="2450" fg:w="5"/><text x="98.4071%" y="334.50"></text></g><g><title>_get_logprobs (vllm/model_executor/layers/sampler.py:567) (9 samples, 0.36%)</title><rect x="98.0369%" y="308" width="0.3606%" height="15" fill="rgb(205,108,24)" fg:x="2447" fg:w="9"/><text x="98.2869%" y="318.50"></text></g><g><title>forward (vllm/model_executor/layers/sampler.py:74) (41 samples, 1.64%)</title><rect x="96.9151%" y="292" width="1.6426%" height="15" fill="rgb(244,120,49)" fg:x="2419" fg:w="41"/><text x="97.1651%" y="302.50"></text></g><g><title>_build_sampler_output (vllm/model_executor/layers/sampler.py:594) (3 samples, 0.12%)</title><rect x="98.5577%" y="308" width="0.1202%" height="15" fill="rgb(223,47,38)" fg:x="2460" fg:w="3"/><text x="98.8077%" y="318.50"></text></g><g><title>_build_sampler_output (vllm/model_executor/layers/sampler.py:601) (18 samples, 0.72%)</title><rect x="98.6779%" y="308" width="0.7212%" height="15" fill="rgb(229,179,11)" fg:x="2463" fg:w="18"/><text x="98.9279%" y="318.50"></text></g><g><title>gc_collect_with_callback (python3.10) (18 samples, 0.72%)</title><rect x="98.6779%" y="324" width="0.7212%" height="15" fill="rgb(231,122,1)" fg:x="2463" fg:w="18"/><text x="98.9279%" y="334.50"></text></g><g><title>gc_collect_main (python3.10) (18 samples, 0.72%)</title><rect x="98.6779%" y="340" width="0.7212%" height="15" fill="rgb(245,119,9)" fg:x="2463" fg:w="18"/><text x="98.9279%" y="350.50"></text></g><g><title>__init__ (vllm/sequence.py:489) (3 samples, 0.12%)</title><rect x="99.3990%" y="324" width="0.1202%" height="15" fill="rgb(241,163,25)" fg:x="2481" fg:w="3"/><text x="99.6490%" y="334.50"></text></g><g><title>_build_sampler_output (vllm/model_executor/layers/sampler.py:605) (6 samples, 0.24%)</title><rect x="99.3990%" y="308" width="0.2404%" height="15" fill="rgb(217,214,3)" fg:x="2481" fg:w="6"/><text x="99.6490%" y="318.50"></text></g><g><title>run (concurrent/futures/thread.py:58) (952 samples, 38.14%)</title><rect x="61.5785%" y="164" width="38.1410%" height="15" fill="rgb(240,86,28)" fg:x="1537" fg:w="952"/><text x="61.8285%" y="174.50">run (concurrent/futures/thread.py:58)</text></g><g><title>decorate_context (torch/utils/_contextlib.py:115) (951 samples, 38.10%)</title><rect x="61.6186%" y="180" width="38.1010%" height="15" fill="rgb(215,47,9)" fg:x="1538" fg:w="951"/><text x="61.8686%" y="190.50">decorate_context (torch/utils/_contextlib.py:115)</text></g><g><title>execute_model (vllm/worker/worker.py:209) (951 samples, 38.10%)</title><rect x="61.6186%" y="196" width="38.1010%" height="15" fill="rgb(252,25,45)" fg:x="1538" fg:w="951"/><text x="61.8686%" y="206.50">execute_model (vllm/worker/worker.py:209)</text></g><g><title>decorate_context (torch/utils/_contextlib.py:115) (948 samples, 37.98%)</title><rect x="61.7388%" y="212" width="37.9808%" height="15" fill="rgb(251,164,9)" fg:x="1541" fg:w="948"/><text x="61.9888%" y="222.50">decorate_context (torch/utils/_contextlib.py:115)</text></g><g><title>execute_model (vllm/worker/model_runner.py:621) (618 samples, 24.76%)</title><rect x="74.9599%" y="228" width="24.7596%" height="15" fill="rgb(233,194,0)" fg:x="1871" fg:w="618"/><text x="75.2099%" y="238.50">execute_model (vllm/worker/model_runner..</text></g><g><title>sample (vllm/model_executor/models/opt.py:321) (618 samples, 24.76%)</title><rect x="74.9599%" y="244" width="24.7596%" height="15" fill="rgb(249,111,24)" fg:x="1871" fg:w="618"/><text x="75.2099%" y="254.50">sample (vllm/model_executor/models/opt...</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (618 samples, 24.76%)</title><rect x="74.9599%" y="260" width="24.7596%" height="15" fill="rgb(250,223,3)" fg:x="1871" fg:w="618"/><text x="75.2099%" y="270.50">_wrapped_call_impl (torch/nn/modules/mo..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (618 samples, 24.76%)</title><rect x="74.9599%" y="276" width="24.7596%" height="15" fill="rgb(236,178,37)" fg:x="1871" fg:w="618"/><text x="75.2099%" y="286.50">_call_impl (torch/nn/modules/module.py:..</text></g><g><title>forward (vllm/model_executor/layers/sampler.py:76) (29 samples, 1.16%)</title><rect x="98.5577%" y="292" width="1.1619%" height="15" fill="rgb(241,158,50)" fg:x="2460" fg:w="29"/><text x="98.8077%" y="302.50"></text></g><g><title>_worker (concurrent/futures/thread.py:83) (956 samples, 38.30%)</title><rect x="61.5785%" y="148" width="38.3013%" height="15" fill="rgb(213,121,41)" fg:x="1537" fg:w="956"/><text x="61.8285%" y="158.50">_worker (concurrent/futures/thread.py:83)</text></g><g><title>run (concurrent/futures/thread.py:64) (4 samples, 0.16%)</title><rect x="99.7196%" y="164" width="0.1603%" height="15" fill="rgb(240,92,3)" fg:x="2489" fg:w="4"/><text x="99.9696%" y="174.50"></text></g><g><title>set_result (concurrent/futures/_base.py:552) (4 samples, 0.16%)</title><rect x="99.7196%" y="180" width="0.1603%" height="15" fill="rgb(205,123,3)" fg:x="2489" fg:w="4"/><text x="99.9696%" y="190.50"></text></g><g><title>_invoke_callbacks (concurrent/futures/_base.py:342) (3 samples, 0.12%)</title><rect x="99.7596%" y="196" width="0.1202%" height="15" fill="rgb(205,97,47)" fg:x="2490" fg:w="3"/><text x="100.0096%" y="206.50"></text></g><g><title>all (2,496 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(247,152,14)" fg:x="0" fg:w="2496"/><text x="0.2500%" y="62.50"></text></g><g><title>clone (libc-2.31.so) (1,271 samples, 50.92%)</title><rect x="49.0785%" y="68" width="50.9215%" height="15" fill="rgb(248,195,53)" fg:x="1225" fg:w="1271"/><text x="49.3285%" y="78.50">clone (libc-2.31.so)</text></g><g><title>thread_run (python3.10) (1,271 samples, 50.92%)</title><rect x="49.0785%" y="84" width="50.9215%" height="15" fill="rgb(226,201,16)" fg:x="1225" fg:w="1271"/><text x="49.3285%" y="94.50">thread_run (python3.10)</text></g><g><title>_bootstrap (threading.py:973) (1,271 samples, 50.92%)</title><rect x="49.0785%" y="100" width="50.9215%" height="15" fill="rgb(205,98,0)" fg:x="1225" fg:w="1271"/><text x="49.3285%" y="110.50">_bootstrap (threading.py:973)</text></g><g><title>_bootstrap_inner (threading.py:1016) (1,271 samples, 50.92%)</title><rect x="49.0785%" y="116" width="50.9215%" height="15" fill="rgb(214,191,48)" fg:x="1225" fg:w="1271"/><text x="49.3285%" y="126.50">_bootstrap_inner (threading.py:1016)</text></g><g><title>run (threading.py:953) (1,271 samples, 50.92%)</title><rect x="49.0785%" y="132" width="50.9215%" height="15" fill="rgb(237,112,39)" fg:x="1225" fg:w="1271"/><text x="49.3285%" y="142.50">run (threading.py:953)</text></g><g><title>_worker (concurrent/futures/thread.py:90) (3 samples, 0.12%)</title><rect x="99.8798%" y="148" width="0.1202%" height="15" fill="rgb(247,203,27)" fg:x="2493" fg:w="3"/><text x="100.1298%" y="158.50"></text></g><g><title>release (threading.py:487) (3 samples, 0.12%)</title><rect x="99.8798%" y="164" width="0.1202%" height="15" fill="rgb(235,124,28)" fg:x="2493" fg:w="3"/><text x="100.1298%" y="174.50"></text></g></svg></svg>